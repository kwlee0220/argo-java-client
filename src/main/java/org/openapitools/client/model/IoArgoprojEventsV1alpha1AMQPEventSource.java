/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1AMQPConsumeConfig;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1AMQPExchangeDeclareConfig;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1AMQPQueueBindConfig;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1AMQPQueueDeclareConfig;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1Backoff;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1BasicAuth;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1EventSourceFilter;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1TLSConfig;
import org.openapitools.client.model.IoK8sApiCoreV1SecretKeySelector;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * IoArgoprojEventsV1alpha1AMQPEventSource
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-24T03:51:41.763920791Z[Etc/UTC]", comments = "Generator version: 7.12.0-SNAPSHOT")
public class IoArgoprojEventsV1alpha1AMQPEventSource {
  public static final String SERIALIZED_NAME_AUTH = "auth";
  @SerializedName(SERIALIZED_NAME_AUTH)
  @javax.annotation.Nullable
  private IoArgoprojEventsV1alpha1BasicAuth auth;

  public static final String SERIALIZED_NAME_CONNECTION_BACKOFF = "connectionBackoff";
  @SerializedName(SERIALIZED_NAME_CONNECTION_BACKOFF)
  @javax.annotation.Nullable
  private IoArgoprojEventsV1alpha1Backoff connectionBackoff;

  public static final String SERIALIZED_NAME_CONSUME = "consume";
  @SerializedName(SERIALIZED_NAME_CONSUME)
  @javax.annotation.Nullable
  private IoArgoprojEventsV1alpha1AMQPConsumeConfig consume;

  public static final String SERIALIZED_NAME_EXCHANGE_DECLARE = "exchangeDeclare";
  @SerializedName(SERIALIZED_NAME_EXCHANGE_DECLARE)
  @javax.annotation.Nullable
  private IoArgoprojEventsV1alpha1AMQPExchangeDeclareConfig exchangeDeclare;

  public static final String SERIALIZED_NAME_EXCHANGE_NAME = "exchangeName";
  @SerializedName(SERIALIZED_NAME_EXCHANGE_NAME)
  @javax.annotation.Nullable
  private String exchangeName;

  public static final String SERIALIZED_NAME_EXCHANGE_TYPE = "exchangeType";
  @SerializedName(SERIALIZED_NAME_EXCHANGE_TYPE)
  @javax.annotation.Nullable
  private String exchangeType;

  public static final String SERIALIZED_NAME_FILTER = "filter";
  @SerializedName(SERIALIZED_NAME_FILTER)
  @javax.annotation.Nullable
  private IoArgoprojEventsV1alpha1EventSourceFilter filter;

  public static final String SERIALIZED_NAME_JSON_BODY = "jsonBody";
  @SerializedName(SERIALIZED_NAME_JSON_BODY)
  @javax.annotation.Nullable
  private Boolean jsonBody;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  @javax.annotation.Nullable
  private Map<String, String> metadata = new HashMap<>();

  public static final String SERIALIZED_NAME_QUEUE_BIND = "queueBind";
  @SerializedName(SERIALIZED_NAME_QUEUE_BIND)
  @javax.annotation.Nullable
  private IoArgoprojEventsV1alpha1AMQPQueueBindConfig queueBind;

  public static final String SERIALIZED_NAME_QUEUE_DECLARE = "queueDeclare";
  @SerializedName(SERIALIZED_NAME_QUEUE_DECLARE)
  @javax.annotation.Nullable
  private IoArgoprojEventsV1alpha1AMQPQueueDeclareConfig queueDeclare;

  public static final String SERIALIZED_NAME_ROUTING_KEY = "routingKey";
  @SerializedName(SERIALIZED_NAME_ROUTING_KEY)
  @javax.annotation.Nullable
  private String routingKey;

  public static final String SERIALIZED_NAME_TLS = "tls";
  @SerializedName(SERIALIZED_NAME_TLS)
  @javax.annotation.Nullable
  private IoArgoprojEventsV1alpha1TLSConfig tls;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  @javax.annotation.Nullable
  private String url;

  public static final String SERIALIZED_NAME_URL_SECRET = "urlSecret";
  @SerializedName(SERIALIZED_NAME_URL_SECRET)
  @javax.annotation.Nullable
  private IoK8sApiCoreV1SecretKeySelector urlSecret;

  public IoArgoprojEventsV1alpha1AMQPEventSource() {
  }

  public IoArgoprojEventsV1alpha1AMQPEventSource auth(@javax.annotation.Nullable IoArgoprojEventsV1alpha1BasicAuth auth) {
    this.auth = auth;
    return this;
  }

  /**
   * Get auth
   * @return auth
   */
  @javax.annotation.Nullable
  public IoArgoprojEventsV1alpha1BasicAuth getAuth() {
    return auth;
  }

  public void setAuth(@javax.annotation.Nullable IoArgoprojEventsV1alpha1BasicAuth auth) {
    this.auth = auth;
  }


  public IoArgoprojEventsV1alpha1AMQPEventSource connectionBackoff(@javax.annotation.Nullable IoArgoprojEventsV1alpha1Backoff connectionBackoff) {
    this.connectionBackoff = connectionBackoff;
    return this;
  }

  /**
   * Get connectionBackoff
   * @return connectionBackoff
   */
  @javax.annotation.Nullable
  public IoArgoprojEventsV1alpha1Backoff getConnectionBackoff() {
    return connectionBackoff;
  }

  public void setConnectionBackoff(@javax.annotation.Nullable IoArgoprojEventsV1alpha1Backoff connectionBackoff) {
    this.connectionBackoff = connectionBackoff;
  }


  public IoArgoprojEventsV1alpha1AMQPEventSource consume(@javax.annotation.Nullable IoArgoprojEventsV1alpha1AMQPConsumeConfig consume) {
    this.consume = consume;
    return this;
  }

  /**
   * Get consume
   * @return consume
   */
  @javax.annotation.Nullable
  public IoArgoprojEventsV1alpha1AMQPConsumeConfig getConsume() {
    return consume;
  }

  public void setConsume(@javax.annotation.Nullable IoArgoprojEventsV1alpha1AMQPConsumeConfig consume) {
    this.consume = consume;
  }


  public IoArgoprojEventsV1alpha1AMQPEventSource exchangeDeclare(@javax.annotation.Nullable IoArgoprojEventsV1alpha1AMQPExchangeDeclareConfig exchangeDeclare) {
    this.exchangeDeclare = exchangeDeclare;
    return this;
  }

  /**
   * Get exchangeDeclare
   * @return exchangeDeclare
   */
  @javax.annotation.Nullable
  public IoArgoprojEventsV1alpha1AMQPExchangeDeclareConfig getExchangeDeclare() {
    return exchangeDeclare;
  }

  public void setExchangeDeclare(@javax.annotation.Nullable IoArgoprojEventsV1alpha1AMQPExchangeDeclareConfig exchangeDeclare) {
    this.exchangeDeclare = exchangeDeclare;
  }


  public IoArgoprojEventsV1alpha1AMQPEventSource exchangeName(@javax.annotation.Nullable String exchangeName) {
    this.exchangeName = exchangeName;
    return this;
  }

  /**
   * Get exchangeName
   * @return exchangeName
   */
  @javax.annotation.Nullable
  public String getExchangeName() {
    return exchangeName;
  }

  public void setExchangeName(@javax.annotation.Nullable String exchangeName) {
    this.exchangeName = exchangeName;
  }


  public IoArgoprojEventsV1alpha1AMQPEventSource exchangeType(@javax.annotation.Nullable String exchangeType) {
    this.exchangeType = exchangeType;
    return this;
  }

  /**
   * Get exchangeType
   * @return exchangeType
   */
  @javax.annotation.Nullable
  public String getExchangeType() {
    return exchangeType;
  }

  public void setExchangeType(@javax.annotation.Nullable String exchangeType) {
    this.exchangeType = exchangeType;
  }


  public IoArgoprojEventsV1alpha1AMQPEventSource filter(@javax.annotation.Nullable IoArgoprojEventsV1alpha1EventSourceFilter filter) {
    this.filter = filter;
    return this;
  }

  /**
   * Get filter
   * @return filter
   */
  @javax.annotation.Nullable
  public IoArgoprojEventsV1alpha1EventSourceFilter getFilter() {
    return filter;
  }

  public void setFilter(@javax.annotation.Nullable IoArgoprojEventsV1alpha1EventSourceFilter filter) {
    this.filter = filter;
  }


  public IoArgoprojEventsV1alpha1AMQPEventSource jsonBody(@javax.annotation.Nullable Boolean jsonBody) {
    this.jsonBody = jsonBody;
    return this;
  }

  /**
   * Get jsonBody
   * @return jsonBody
   */
  @javax.annotation.Nullable
  public Boolean getJsonBody() {
    return jsonBody;
  }

  public void setJsonBody(@javax.annotation.Nullable Boolean jsonBody) {
    this.jsonBody = jsonBody;
  }


  public IoArgoprojEventsV1alpha1AMQPEventSource metadata(@javax.annotation.Nullable Map<String, String> metadata) {
    this.metadata = metadata;
    return this;
  }

  public IoArgoprojEventsV1alpha1AMQPEventSource putMetadataItem(String key, String metadataItem) {
    if (this.metadata == null) {
      this.metadata = new HashMap<>();
    }
    this.metadata.put(key, metadataItem);
    return this;
  }

  /**
   * Get metadata
   * @return metadata
   */
  @javax.annotation.Nullable
  public Map<String, String> getMetadata() {
    return metadata;
  }

  public void setMetadata(@javax.annotation.Nullable Map<String, String> metadata) {
    this.metadata = metadata;
  }


  public IoArgoprojEventsV1alpha1AMQPEventSource queueBind(@javax.annotation.Nullable IoArgoprojEventsV1alpha1AMQPQueueBindConfig queueBind) {
    this.queueBind = queueBind;
    return this;
  }

  /**
   * Get queueBind
   * @return queueBind
   */
  @javax.annotation.Nullable
  public IoArgoprojEventsV1alpha1AMQPQueueBindConfig getQueueBind() {
    return queueBind;
  }

  public void setQueueBind(@javax.annotation.Nullable IoArgoprojEventsV1alpha1AMQPQueueBindConfig queueBind) {
    this.queueBind = queueBind;
  }


  public IoArgoprojEventsV1alpha1AMQPEventSource queueDeclare(@javax.annotation.Nullable IoArgoprojEventsV1alpha1AMQPQueueDeclareConfig queueDeclare) {
    this.queueDeclare = queueDeclare;
    return this;
  }

  /**
   * Get queueDeclare
   * @return queueDeclare
   */
  @javax.annotation.Nullable
  public IoArgoprojEventsV1alpha1AMQPQueueDeclareConfig getQueueDeclare() {
    return queueDeclare;
  }

  public void setQueueDeclare(@javax.annotation.Nullable IoArgoprojEventsV1alpha1AMQPQueueDeclareConfig queueDeclare) {
    this.queueDeclare = queueDeclare;
  }


  public IoArgoprojEventsV1alpha1AMQPEventSource routingKey(@javax.annotation.Nullable String routingKey) {
    this.routingKey = routingKey;
    return this;
  }

  /**
   * Get routingKey
   * @return routingKey
   */
  @javax.annotation.Nullable
  public String getRoutingKey() {
    return routingKey;
  }

  public void setRoutingKey(@javax.annotation.Nullable String routingKey) {
    this.routingKey = routingKey;
  }


  public IoArgoprojEventsV1alpha1AMQPEventSource tls(@javax.annotation.Nullable IoArgoprojEventsV1alpha1TLSConfig tls) {
    this.tls = tls;
    return this;
  }

  /**
   * Get tls
   * @return tls
   */
  @javax.annotation.Nullable
  public IoArgoprojEventsV1alpha1TLSConfig getTls() {
    return tls;
  }

  public void setTls(@javax.annotation.Nullable IoArgoprojEventsV1alpha1TLSConfig tls) {
    this.tls = tls;
  }


  public IoArgoprojEventsV1alpha1AMQPEventSource url(@javax.annotation.Nullable String url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   * @return url
   */
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(@javax.annotation.Nullable String url) {
    this.url = url;
  }


  public IoArgoprojEventsV1alpha1AMQPEventSource urlSecret(@javax.annotation.Nullable IoK8sApiCoreV1SecretKeySelector urlSecret) {
    this.urlSecret = urlSecret;
    return this;
  }

  /**
   * Get urlSecret
   * @return urlSecret
   */
  @javax.annotation.Nullable
  public IoK8sApiCoreV1SecretKeySelector getUrlSecret() {
    return urlSecret;
  }

  public void setUrlSecret(@javax.annotation.Nullable IoK8sApiCoreV1SecretKeySelector urlSecret) {
    this.urlSecret = urlSecret;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoArgoprojEventsV1alpha1AMQPEventSource ioArgoprojEventsV1alpha1AMQPEventSource = (IoArgoprojEventsV1alpha1AMQPEventSource) o;
    return Objects.equals(this.auth, ioArgoprojEventsV1alpha1AMQPEventSource.auth) &&
        Objects.equals(this.connectionBackoff, ioArgoprojEventsV1alpha1AMQPEventSource.connectionBackoff) &&
        Objects.equals(this.consume, ioArgoprojEventsV1alpha1AMQPEventSource.consume) &&
        Objects.equals(this.exchangeDeclare, ioArgoprojEventsV1alpha1AMQPEventSource.exchangeDeclare) &&
        Objects.equals(this.exchangeName, ioArgoprojEventsV1alpha1AMQPEventSource.exchangeName) &&
        Objects.equals(this.exchangeType, ioArgoprojEventsV1alpha1AMQPEventSource.exchangeType) &&
        Objects.equals(this.filter, ioArgoprojEventsV1alpha1AMQPEventSource.filter) &&
        Objects.equals(this.jsonBody, ioArgoprojEventsV1alpha1AMQPEventSource.jsonBody) &&
        Objects.equals(this.metadata, ioArgoprojEventsV1alpha1AMQPEventSource.metadata) &&
        Objects.equals(this.queueBind, ioArgoprojEventsV1alpha1AMQPEventSource.queueBind) &&
        Objects.equals(this.queueDeclare, ioArgoprojEventsV1alpha1AMQPEventSource.queueDeclare) &&
        Objects.equals(this.routingKey, ioArgoprojEventsV1alpha1AMQPEventSource.routingKey) &&
        Objects.equals(this.tls, ioArgoprojEventsV1alpha1AMQPEventSource.tls) &&
        Objects.equals(this.url, ioArgoprojEventsV1alpha1AMQPEventSource.url) &&
        Objects.equals(this.urlSecret, ioArgoprojEventsV1alpha1AMQPEventSource.urlSecret);
  }

  @Override
  public int hashCode() {
    return Objects.hash(auth, connectionBackoff, consume, exchangeDeclare, exchangeName, exchangeType, filter, jsonBody, metadata, queueBind, queueDeclare, routingKey, tls, url, urlSecret);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoArgoprojEventsV1alpha1AMQPEventSource {\n");
    sb.append("    auth: ").append(toIndentedString(auth)).append("\n");
    sb.append("    connectionBackoff: ").append(toIndentedString(connectionBackoff)).append("\n");
    sb.append("    consume: ").append(toIndentedString(consume)).append("\n");
    sb.append("    exchangeDeclare: ").append(toIndentedString(exchangeDeclare)).append("\n");
    sb.append("    exchangeName: ").append(toIndentedString(exchangeName)).append("\n");
    sb.append("    exchangeType: ").append(toIndentedString(exchangeType)).append("\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    jsonBody: ").append(toIndentedString(jsonBody)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    queueBind: ").append(toIndentedString(queueBind)).append("\n");
    sb.append("    queueDeclare: ").append(toIndentedString(queueDeclare)).append("\n");
    sb.append("    routingKey: ").append(toIndentedString(routingKey)).append("\n");
    sb.append("    tls: ").append(toIndentedString(tls)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    urlSecret: ").append(toIndentedString(urlSecret)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("auth");
    openapiFields.add("connectionBackoff");
    openapiFields.add("consume");
    openapiFields.add("exchangeDeclare");
    openapiFields.add("exchangeName");
    openapiFields.add("exchangeType");
    openapiFields.add("filter");
    openapiFields.add("jsonBody");
    openapiFields.add("metadata");
    openapiFields.add("queueBind");
    openapiFields.add("queueDeclare");
    openapiFields.add("routingKey");
    openapiFields.add("tls");
    openapiFields.add("url");
    openapiFields.add("urlSecret");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IoArgoprojEventsV1alpha1AMQPEventSource
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IoArgoprojEventsV1alpha1AMQPEventSource.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IoArgoprojEventsV1alpha1AMQPEventSource is not found in the empty JSON string", IoArgoprojEventsV1alpha1AMQPEventSource.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IoArgoprojEventsV1alpha1AMQPEventSource.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IoArgoprojEventsV1alpha1AMQPEventSource` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `auth`
      if (jsonObj.get("auth") != null && !jsonObj.get("auth").isJsonNull()) {
        IoArgoprojEventsV1alpha1BasicAuth.validateJsonElement(jsonObj.get("auth"));
      }
      // validate the optional field `connectionBackoff`
      if (jsonObj.get("connectionBackoff") != null && !jsonObj.get("connectionBackoff").isJsonNull()) {
        IoArgoprojEventsV1alpha1Backoff.validateJsonElement(jsonObj.get("connectionBackoff"));
      }
      // validate the optional field `consume`
      if (jsonObj.get("consume") != null && !jsonObj.get("consume").isJsonNull()) {
        IoArgoprojEventsV1alpha1AMQPConsumeConfig.validateJsonElement(jsonObj.get("consume"));
      }
      // validate the optional field `exchangeDeclare`
      if (jsonObj.get("exchangeDeclare") != null && !jsonObj.get("exchangeDeclare").isJsonNull()) {
        IoArgoprojEventsV1alpha1AMQPExchangeDeclareConfig.validateJsonElement(jsonObj.get("exchangeDeclare"));
      }
      if ((jsonObj.get("exchangeName") != null && !jsonObj.get("exchangeName").isJsonNull()) && !jsonObj.get("exchangeName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `exchangeName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("exchangeName").toString()));
      }
      if ((jsonObj.get("exchangeType") != null && !jsonObj.get("exchangeType").isJsonNull()) && !jsonObj.get("exchangeType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `exchangeType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("exchangeType").toString()));
      }
      // validate the optional field `filter`
      if (jsonObj.get("filter") != null && !jsonObj.get("filter").isJsonNull()) {
        IoArgoprojEventsV1alpha1EventSourceFilter.validateJsonElement(jsonObj.get("filter"));
      }
      // validate the optional field `queueBind`
      if (jsonObj.get("queueBind") != null && !jsonObj.get("queueBind").isJsonNull()) {
        IoArgoprojEventsV1alpha1AMQPQueueBindConfig.validateJsonElement(jsonObj.get("queueBind"));
      }
      // validate the optional field `queueDeclare`
      if (jsonObj.get("queueDeclare") != null && !jsonObj.get("queueDeclare").isJsonNull()) {
        IoArgoprojEventsV1alpha1AMQPQueueDeclareConfig.validateJsonElement(jsonObj.get("queueDeclare"));
      }
      if ((jsonObj.get("routingKey") != null && !jsonObj.get("routingKey").isJsonNull()) && !jsonObj.get("routingKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `routingKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("routingKey").toString()));
      }
      // validate the optional field `tls`
      if (jsonObj.get("tls") != null && !jsonObj.get("tls").isJsonNull()) {
        IoArgoprojEventsV1alpha1TLSConfig.validateJsonElement(jsonObj.get("tls"));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      // validate the optional field `urlSecret`
      if (jsonObj.get("urlSecret") != null && !jsonObj.get("urlSecret").isJsonNull()) {
        IoK8sApiCoreV1SecretKeySelector.validateJsonElement(jsonObj.get("urlSecret"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IoArgoprojEventsV1alpha1AMQPEventSource.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IoArgoprojEventsV1alpha1AMQPEventSource' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IoArgoprojEventsV1alpha1AMQPEventSource> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IoArgoprojEventsV1alpha1AMQPEventSource.class));

       return (TypeAdapter<T>) new TypeAdapter<IoArgoprojEventsV1alpha1AMQPEventSource>() {
           @Override
           public void write(JsonWriter out, IoArgoprojEventsV1alpha1AMQPEventSource value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IoArgoprojEventsV1alpha1AMQPEventSource read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IoArgoprojEventsV1alpha1AMQPEventSource given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IoArgoprojEventsV1alpha1AMQPEventSource
   * @throws IOException if the JSON string is invalid with respect to IoArgoprojEventsV1alpha1AMQPEventSource
   */
  public static IoArgoprojEventsV1alpha1AMQPEventSource fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IoArgoprojEventsV1alpha1AMQPEventSource.class);
  }

  /**
   * Convert an instance of IoArgoprojEventsV1alpha1AMQPEventSource to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

