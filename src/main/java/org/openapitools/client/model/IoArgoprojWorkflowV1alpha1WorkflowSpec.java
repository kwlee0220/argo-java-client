/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1Arguments;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1ArtifactRepositoryRef;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1ExecutorConfig;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1LifecycleHook;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1Metadata;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1Metrics;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1PodGC;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1RetryStrategy;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1Synchronization;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1TTLStrategy;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1Template;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1VolumeClaimGC;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1WorkflowLevelArtifactGC;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1WorkflowMetadata;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1WorkflowTemplateRef;
import org.openapitools.client.model.IoK8sApiCoreV1Affinity;
import org.openapitools.client.model.IoK8sApiCoreV1HostAlias;
import org.openapitools.client.model.IoK8sApiCoreV1LocalObjectReference;
import org.openapitools.client.model.IoK8sApiCoreV1PersistentVolumeClaim;
import org.openapitools.client.model.IoK8sApiCoreV1PodDNSConfig;
import org.openapitools.client.model.IoK8sApiCoreV1PodSecurityContext;
import org.openapitools.client.model.IoK8sApiCoreV1Toleration;
import org.openapitools.client.model.IoK8sApiCoreV1Volume;
import org.openapitools.client.model.IoK8sApiPolicyV1PodDisruptionBudgetSpec;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * WorkflowSpec is the specification of a Workflow.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-24T03:51:41.763920791Z[Etc/UTC]", comments = "Generator version: 7.12.0-SNAPSHOT")
public class IoArgoprojWorkflowV1alpha1WorkflowSpec {
  public static final String SERIALIZED_NAME_ACTIVE_DEADLINE_SECONDS = "activeDeadlineSeconds";
  @SerializedName(SERIALIZED_NAME_ACTIVE_DEADLINE_SECONDS)
  @javax.annotation.Nullable
  private Integer activeDeadlineSeconds;

  public static final String SERIALIZED_NAME_AFFINITY = "affinity";
  @SerializedName(SERIALIZED_NAME_AFFINITY)
  @javax.annotation.Nullable
  private IoK8sApiCoreV1Affinity affinity;

  public static final String SERIALIZED_NAME_ARCHIVE_LOGS = "archiveLogs";
  @SerializedName(SERIALIZED_NAME_ARCHIVE_LOGS)
  @javax.annotation.Nullable
  private Boolean archiveLogs;

  public static final String SERIALIZED_NAME_ARGUMENTS = "arguments";
  @SerializedName(SERIALIZED_NAME_ARGUMENTS)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1Arguments arguments;

  public static final String SERIALIZED_NAME_ARTIFACT_G_C = "artifactGC";
  @SerializedName(SERIALIZED_NAME_ARTIFACT_G_C)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1WorkflowLevelArtifactGC artifactGC;

  public static final String SERIALIZED_NAME_ARTIFACT_REPOSITORY_REF = "artifactRepositoryRef";
  @SerializedName(SERIALIZED_NAME_ARTIFACT_REPOSITORY_REF)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1ArtifactRepositoryRef artifactRepositoryRef;

  public static final String SERIALIZED_NAME_AUTOMOUNT_SERVICE_ACCOUNT_TOKEN = "automountServiceAccountToken";
  @SerializedName(SERIALIZED_NAME_AUTOMOUNT_SERVICE_ACCOUNT_TOKEN)
  @javax.annotation.Nullable
  private Boolean automountServiceAccountToken;

  public static final String SERIALIZED_NAME_DNS_CONFIG = "dnsConfig";
  @SerializedName(SERIALIZED_NAME_DNS_CONFIG)
  @javax.annotation.Nullable
  private IoK8sApiCoreV1PodDNSConfig dnsConfig;

  public static final String SERIALIZED_NAME_DNS_POLICY = "dnsPolicy";
  @SerializedName(SERIALIZED_NAME_DNS_POLICY)
  @javax.annotation.Nullable
  private String dnsPolicy;

  public static final String SERIALIZED_NAME_ENTRYPOINT = "entrypoint";
  @SerializedName(SERIALIZED_NAME_ENTRYPOINT)
  @javax.annotation.Nullable
  private String entrypoint;

  public static final String SERIALIZED_NAME_EXECUTOR = "executor";
  @SerializedName(SERIALIZED_NAME_EXECUTOR)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1ExecutorConfig executor;

  public static final String SERIALIZED_NAME_HOOKS = "hooks";
  @SerializedName(SERIALIZED_NAME_HOOKS)
  @javax.annotation.Nullable
  private Map<String, IoArgoprojWorkflowV1alpha1LifecycleHook> hooks = new HashMap<>();

  public static final String SERIALIZED_NAME_HOST_ALIASES = "hostAliases";
  @SerializedName(SERIALIZED_NAME_HOST_ALIASES)
  @javax.annotation.Nullable
  private List<IoK8sApiCoreV1HostAlias> hostAliases = new ArrayList<>();

  public static final String SERIALIZED_NAME_HOST_NETWORK = "hostNetwork";
  @SerializedName(SERIALIZED_NAME_HOST_NETWORK)
  @javax.annotation.Nullable
  private Boolean hostNetwork;

  public static final String SERIALIZED_NAME_IMAGE_PULL_SECRETS = "imagePullSecrets";
  @SerializedName(SERIALIZED_NAME_IMAGE_PULL_SECRETS)
  @javax.annotation.Nullable
  private List<IoK8sApiCoreV1LocalObjectReference> imagePullSecrets = new ArrayList<>();

  public static final String SERIALIZED_NAME_METRICS = "metrics";
  @SerializedName(SERIALIZED_NAME_METRICS)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1Metrics metrics;

  public static final String SERIALIZED_NAME_NODE_SELECTOR = "nodeSelector";
  @SerializedName(SERIALIZED_NAME_NODE_SELECTOR)
  @javax.annotation.Nullable
  private Map<String, String> nodeSelector = new HashMap<>();

  public static final String SERIALIZED_NAME_ON_EXIT = "onExit";
  @SerializedName(SERIALIZED_NAME_ON_EXIT)
  @javax.annotation.Nullable
  private String onExit;

  public static final String SERIALIZED_NAME_PARALLELISM = "parallelism";
  @SerializedName(SERIALIZED_NAME_PARALLELISM)
  @javax.annotation.Nullable
  private Integer parallelism;

  public static final String SERIALIZED_NAME_POD_DISRUPTION_BUDGET = "podDisruptionBudget";
  @SerializedName(SERIALIZED_NAME_POD_DISRUPTION_BUDGET)
  @javax.annotation.Nullable
  private IoK8sApiPolicyV1PodDisruptionBudgetSpec podDisruptionBudget;

  public static final String SERIALIZED_NAME_POD_G_C = "podGC";
  @SerializedName(SERIALIZED_NAME_POD_G_C)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1PodGC podGC;

  public static final String SERIALIZED_NAME_POD_METADATA = "podMetadata";
  @SerializedName(SERIALIZED_NAME_POD_METADATA)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1Metadata podMetadata;

  public static final String SERIALIZED_NAME_POD_PRIORITY = "podPriority";
  @SerializedName(SERIALIZED_NAME_POD_PRIORITY)
  @javax.annotation.Nullable
  private Integer podPriority;

  public static final String SERIALIZED_NAME_POD_PRIORITY_CLASS_NAME = "podPriorityClassName";
  @SerializedName(SERIALIZED_NAME_POD_PRIORITY_CLASS_NAME)
  @javax.annotation.Nullable
  private String podPriorityClassName;

  public static final String SERIALIZED_NAME_POD_SPEC_PATCH = "podSpecPatch";
  @SerializedName(SERIALIZED_NAME_POD_SPEC_PATCH)
  @javax.annotation.Nullable
  private String podSpecPatch;

  public static final String SERIALIZED_NAME_PRIORITY = "priority";
  @SerializedName(SERIALIZED_NAME_PRIORITY)
  @javax.annotation.Nullable
  private Integer priority;

  public static final String SERIALIZED_NAME_RETRY_STRATEGY = "retryStrategy";
  @SerializedName(SERIALIZED_NAME_RETRY_STRATEGY)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1RetryStrategy retryStrategy;

  public static final String SERIALIZED_NAME_SCHEDULER_NAME = "schedulerName";
  @SerializedName(SERIALIZED_NAME_SCHEDULER_NAME)
  @javax.annotation.Nullable
  private String schedulerName;

  public static final String SERIALIZED_NAME_SECURITY_CONTEXT = "securityContext";
  @SerializedName(SERIALIZED_NAME_SECURITY_CONTEXT)
  @javax.annotation.Nullable
  private IoK8sApiCoreV1PodSecurityContext securityContext;

  public static final String SERIALIZED_NAME_SERVICE_ACCOUNT_NAME = "serviceAccountName";
  @SerializedName(SERIALIZED_NAME_SERVICE_ACCOUNT_NAME)
  @javax.annotation.Nullable
  private String serviceAccountName;

  public static final String SERIALIZED_NAME_SHUTDOWN = "shutdown";
  @SerializedName(SERIALIZED_NAME_SHUTDOWN)
  @javax.annotation.Nullable
  private String shutdown;

  public static final String SERIALIZED_NAME_SUSPEND = "suspend";
  @SerializedName(SERIALIZED_NAME_SUSPEND)
  @javax.annotation.Nullable
  private Boolean suspend;

  public static final String SERIALIZED_NAME_SYNCHRONIZATION = "synchronization";
  @SerializedName(SERIALIZED_NAME_SYNCHRONIZATION)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1Synchronization synchronization;

  public static final String SERIALIZED_NAME_TEMPLATE_DEFAULTS = "templateDefaults";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_DEFAULTS)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1Template templateDefaults;

  public static final String SERIALIZED_NAME_TEMPLATES = "templates";
  @SerializedName(SERIALIZED_NAME_TEMPLATES)
  @javax.annotation.Nullable
  private List<IoArgoprojWorkflowV1alpha1Template> templates = new ArrayList<>();

  public static final String SERIALIZED_NAME_TOLERATIONS = "tolerations";
  @SerializedName(SERIALIZED_NAME_TOLERATIONS)
  @javax.annotation.Nullable
  private List<IoK8sApiCoreV1Toleration> tolerations = new ArrayList<>();

  public static final String SERIALIZED_NAME_TTL_STRATEGY = "ttlStrategy";
  @SerializedName(SERIALIZED_NAME_TTL_STRATEGY)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1TTLStrategy ttlStrategy;

  public static final String SERIALIZED_NAME_VOLUME_CLAIM_G_C = "volumeClaimGC";
  @SerializedName(SERIALIZED_NAME_VOLUME_CLAIM_G_C)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1VolumeClaimGC volumeClaimGC;

  public static final String SERIALIZED_NAME_VOLUME_CLAIM_TEMPLATES = "volumeClaimTemplates";
  @SerializedName(SERIALIZED_NAME_VOLUME_CLAIM_TEMPLATES)
  @javax.annotation.Nullable
  private List<IoK8sApiCoreV1PersistentVolumeClaim> volumeClaimTemplates = new ArrayList<>();

  public static final String SERIALIZED_NAME_VOLUMES = "volumes";
  @SerializedName(SERIALIZED_NAME_VOLUMES)
  @javax.annotation.Nullable
  private List<IoK8sApiCoreV1Volume> volumes = new ArrayList<>();

  public static final String SERIALIZED_NAME_WORKFLOW_METADATA = "workflowMetadata";
  @SerializedName(SERIALIZED_NAME_WORKFLOW_METADATA)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1WorkflowMetadata workflowMetadata;

  public static final String SERIALIZED_NAME_WORKFLOW_TEMPLATE_REF = "workflowTemplateRef";
  @SerializedName(SERIALIZED_NAME_WORKFLOW_TEMPLATE_REF)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1WorkflowTemplateRef workflowTemplateRef;

  public IoArgoprojWorkflowV1alpha1WorkflowSpec() {
  }

  public IoArgoprojWorkflowV1alpha1WorkflowSpec activeDeadlineSeconds(@javax.annotation.Nullable Integer activeDeadlineSeconds) {
    this.activeDeadlineSeconds = activeDeadlineSeconds;
    return this;
  }

  /**
   * Optional duration in seconds relative to the workflow start time which the workflow is allowed to run before the controller terminates the io.argoproj.workflow.v1alpha1. A value of zero is used to terminate a Running workflow
   * @return activeDeadlineSeconds
   */
  @javax.annotation.Nullable
  public Integer getActiveDeadlineSeconds() {
    return activeDeadlineSeconds;
  }

  public void setActiveDeadlineSeconds(@javax.annotation.Nullable Integer activeDeadlineSeconds) {
    this.activeDeadlineSeconds = activeDeadlineSeconds;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec affinity(@javax.annotation.Nullable IoK8sApiCoreV1Affinity affinity) {
    this.affinity = affinity;
    return this;
  }

  /**
   * Get affinity
   * @return affinity
   */
  @javax.annotation.Nullable
  public IoK8sApiCoreV1Affinity getAffinity() {
    return affinity;
  }

  public void setAffinity(@javax.annotation.Nullable IoK8sApiCoreV1Affinity affinity) {
    this.affinity = affinity;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec archiveLogs(@javax.annotation.Nullable Boolean archiveLogs) {
    this.archiveLogs = archiveLogs;
    return this;
  }

  /**
   * ArchiveLogs indicates if the container logs should be archived
   * @return archiveLogs
   */
  @javax.annotation.Nullable
  public Boolean getArchiveLogs() {
    return archiveLogs;
  }

  public void setArchiveLogs(@javax.annotation.Nullable Boolean archiveLogs) {
    this.archiveLogs = archiveLogs;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec arguments(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1Arguments arguments) {
    this.arguments = arguments;
    return this;
  }

  /**
   * Get arguments
   * @return arguments
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1Arguments getArguments() {
    return arguments;
  }

  public void setArguments(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1Arguments arguments) {
    this.arguments = arguments;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec artifactGC(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1WorkflowLevelArtifactGC artifactGC) {
    this.artifactGC = artifactGC;
    return this;
  }

  /**
   * Get artifactGC
   * @return artifactGC
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1WorkflowLevelArtifactGC getArtifactGC() {
    return artifactGC;
  }

  public void setArtifactGC(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1WorkflowLevelArtifactGC artifactGC) {
    this.artifactGC = artifactGC;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec artifactRepositoryRef(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1ArtifactRepositoryRef artifactRepositoryRef) {
    this.artifactRepositoryRef = artifactRepositoryRef;
    return this;
  }

  /**
   * Get artifactRepositoryRef
   * @return artifactRepositoryRef
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1ArtifactRepositoryRef getArtifactRepositoryRef() {
    return artifactRepositoryRef;
  }

  public void setArtifactRepositoryRef(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1ArtifactRepositoryRef artifactRepositoryRef) {
    this.artifactRepositoryRef = artifactRepositoryRef;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec automountServiceAccountToken(@javax.annotation.Nullable Boolean automountServiceAccountToken) {
    this.automountServiceAccountToken = automountServiceAccountToken;
    return this;
  }

  /**
   * AutomountServiceAccountToken indicates whether a service account token should be automatically mounted in pods. ServiceAccountName of ExecutorConfig must be specified if this value is false.
   * @return automountServiceAccountToken
   */
  @javax.annotation.Nullable
  public Boolean getAutomountServiceAccountToken() {
    return automountServiceAccountToken;
  }

  public void setAutomountServiceAccountToken(@javax.annotation.Nullable Boolean automountServiceAccountToken) {
    this.automountServiceAccountToken = automountServiceAccountToken;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec dnsConfig(@javax.annotation.Nullable IoK8sApiCoreV1PodDNSConfig dnsConfig) {
    this.dnsConfig = dnsConfig;
    return this;
  }

  /**
   * Get dnsConfig
   * @return dnsConfig
   */
  @javax.annotation.Nullable
  public IoK8sApiCoreV1PodDNSConfig getDnsConfig() {
    return dnsConfig;
  }

  public void setDnsConfig(@javax.annotation.Nullable IoK8sApiCoreV1PodDNSConfig dnsConfig) {
    this.dnsConfig = dnsConfig;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec dnsPolicy(@javax.annotation.Nullable String dnsPolicy) {
    this.dnsPolicy = dnsPolicy;
    return this;
  }

  /**
   * Set DNS policy for workflow pods. Defaults to \&quot;ClusterFirst\&quot;. Valid values are &#39;ClusterFirstWithHostNet&#39;, &#39;ClusterFirst&#39;, &#39;Default&#39; or &#39;None&#39;. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to &#39;ClusterFirstWithHostNet&#39;.
   * @return dnsPolicy
   */
  @javax.annotation.Nullable
  public String getDnsPolicy() {
    return dnsPolicy;
  }

  public void setDnsPolicy(@javax.annotation.Nullable String dnsPolicy) {
    this.dnsPolicy = dnsPolicy;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec entrypoint(@javax.annotation.Nullable String entrypoint) {
    this.entrypoint = entrypoint;
    return this;
  }

  /**
   * Entrypoint is a template reference to the starting point of the io.argoproj.workflow.v1alpha1.
   * @return entrypoint
   */
  @javax.annotation.Nullable
  public String getEntrypoint() {
    return entrypoint;
  }

  public void setEntrypoint(@javax.annotation.Nullable String entrypoint) {
    this.entrypoint = entrypoint;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec executor(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1ExecutorConfig executor) {
    this.executor = executor;
    return this;
  }

  /**
   * Get executor
   * @return executor
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1ExecutorConfig getExecutor() {
    return executor;
  }

  public void setExecutor(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1ExecutorConfig executor) {
    this.executor = executor;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec hooks(@javax.annotation.Nullable Map<String, IoArgoprojWorkflowV1alpha1LifecycleHook> hooks) {
    this.hooks = hooks;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1WorkflowSpec putHooksItem(String key, IoArgoprojWorkflowV1alpha1LifecycleHook hooksItem) {
    if (this.hooks == null) {
      this.hooks = new HashMap<>();
    }
    this.hooks.put(key, hooksItem);
    return this;
  }

  /**
   * Hooks holds the lifecycle hook which is invoked at lifecycle of step, irrespective of the success, failure, or error status of the primary step
   * @return hooks
   */
  @javax.annotation.Nullable
  public Map<String, IoArgoprojWorkflowV1alpha1LifecycleHook> getHooks() {
    return hooks;
  }

  public void setHooks(@javax.annotation.Nullable Map<String, IoArgoprojWorkflowV1alpha1LifecycleHook> hooks) {
    this.hooks = hooks;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec hostAliases(@javax.annotation.Nullable List<IoK8sApiCoreV1HostAlias> hostAliases) {
    this.hostAliases = hostAliases;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1WorkflowSpec addHostAliasesItem(IoK8sApiCoreV1HostAlias hostAliasesItem) {
    if (this.hostAliases == null) {
      this.hostAliases = new ArrayList<>();
    }
    this.hostAliases.add(hostAliasesItem);
    return this;
  }

  /**
   * Get hostAliases
   * @return hostAliases
   */
  @javax.annotation.Nullable
  public List<IoK8sApiCoreV1HostAlias> getHostAliases() {
    return hostAliases;
  }

  public void setHostAliases(@javax.annotation.Nullable List<IoK8sApiCoreV1HostAlias> hostAliases) {
    this.hostAliases = hostAliases;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec hostNetwork(@javax.annotation.Nullable Boolean hostNetwork) {
    this.hostNetwork = hostNetwork;
    return this;
  }

  /**
   * Host networking requested for this workflow pod. Default to false.
   * @return hostNetwork
   */
  @javax.annotation.Nullable
  public Boolean getHostNetwork() {
    return hostNetwork;
  }

  public void setHostNetwork(@javax.annotation.Nullable Boolean hostNetwork) {
    this.hostNetwork = hostNetwork;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec imagePullSecrets(@javax.annotation.Nullable List<IoK8sApiCoreV1LocalObjectReference> imagePullSecrets) {
    this.imagePullSecrets = imagePullSecrets;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1WorkflowSpec addImagePullSecretsItem(IoK8sApiCoreV1LocalObjectReference imagePullSecretsItem) {
    if (this.imagePullSecrets == null) {
      this.imagePullSecrets = new ArrayList<>();
    }
    this.imagePullSecrets.add(imagePullSecretsItem);
    return this;
  }

  /**
   * ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images in pods that reference this ServiceAccount. ImagePullSecrets are distinct from Secrets because Secrets can be mounted in the pod, but ImagePullSecrets are only accessed by the kubelet. More info: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
   * @return imagePullSecrets
   */
  @javax.annotation.Nullable
  public List<IoK8sApiCoreV1LocalObjectReference> getImagePullSecrets() {
    return imagePullSecrets;
  }

  public void setImagePullSecrets(@javax.annotation.Nullable List<IoK8sApiCoreV1LocalObjectReference> imagePullSecrets) {
    this.imagePullSecrets = imagePullSecrets;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec metrics(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1Metrics metrics) {
    this.metrics = metrics;
    return this;
  }

  /**
   * Get metrics
   * @return metrics
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1Metrics getMetrics() {
    return metrics;
  }

  public void setMetrics(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1Metrics metrics) {
    this.metrics = metrics;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec nodeSelector(@javax.annotation.Nullable Map<String, String> nodeSelector) {
    this.nodeSelector = nodeSelector;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1WorkflowSpec putNodeSelectorItem(String key, String nodeSelectorItem) {
    if (this.nodeSelector == null) {
      this.nodeSelector = new HashMap<>();
    }
    this.nodeSelector.put(key, nodeSelectorItem);
    return this;
  }

  /**
   * NodeSelector is a selector which will result in all pods of the workflow to be scheduled on the selected node(s). This is able to be overridden by a nodeSelector specified in the template.
   * @return nodeSelector
   */
  @javax.annotation.Nullable
  public Map<String, String> getNodeSelector() {
    return nodeSelector;
  }

  public void setNodeSelector(@javax.annotation.Nullable Map<String, String> nodeSelector) {
    this.nodeSelector = nodeSelector;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec onExit(@javax.annotation.Nullable String onExit) {
    this.onExit = onExit;
    return this;
  }

  /**
   * OnExit is a template reference which is invoked at the end of the workflow, irrespective of the success, failure, or error of the primary io.argoproj.workflow.v1alpha1.
   * @return onExit
   */
  @javax.annotation.Nullable
  public String getOnExit() {
    return onExit;
  }

  public void setOnExit(@javax.annotation.Nullable String onExit) {
    this.onExit = onExit;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec parallelism(@javax.annotation.Nullable Integer parallelism) {
    this.parallelism = parallelism;
    return this;
  }

  /**
   * Parallelism limits the max total parallel pods that can execute at the same time in a workflow
   * @return parallelism
   */
  @javax.annotation.Nullable
  public Integer getParallelism() {
    return parallelism;
  }

  public void setParallelism(@javax.annotation.Nullable Integer parallelism) {
    this.parallelism = parallelism;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec podDisruptionBudget(@javax.annotation.Nullable IoK8sApiPolicyV1PodDisruptionBudgetSpec podDisruptionBudget) {
    this.podDisruptionBudget = podDisruptionBudget;
    return this;
  }

  /**
   * Get podDisruptionBudget
   * @return podDisruptionBudget
   */
  @javax.annotation.Nullable
  public IoK8sApiPolicyV1PodDisruptionBudgetSpec getPodDisruptionBudget() {
    return podDisruptionBudget;
  }

  public void setPodDisruptionBudget(@javax.annotation.Nullable IoK8sApiPolicyV1PodDisruptionBudgetSpec podDisruptionBudget) {
    this.podDisruptionBudget = podDisruptionBudget;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec podGC(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1PodGC podGC) {
    this.podGC = podGC;
    return this;
  }

  /**
   * Get podGC
   * @return podGC
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1PodGC getPodGC() {
    return podGC;
  }

  public void setPodGC(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1PodGC podGC) {
    this.podGC = podGC;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec podMetadata(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1Metadata podMetadata) {
    this.podMetadata = podMetadata;
    return this;
  }

  /**
   * Get podMetadata
   * @return podMetadata
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1Metadata getPodMetadata() {
    return podMetadata;
  }

  public void setPodMetadata(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1Metadata podMetadata) {
    this.podMetadata = podMetadata;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec podPriority(@javax.annotation.Nullable Integer podPriority) {
    this.podPriority = podPriority;
    return this;
  }

  /**
   * Priority to apply to workflow pods. DEPRECATED: Use PodPriorityClassName instead.
   * @return podPriority
   */
  @javax.annotation.Nullable
  public Integer getPodPriority() {
    return podPriority;
  }

  public void setPodPriority(@javax.annotation.Nullable Integer podPriority) {
    this.podPriority = podPriority;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec podPriorityClassName(@javax.annotation.Nullable String podPriorityClassName) {
    this.podPriorityClassName = podPriorityClassName;
    return this;
  }

  /**
   * PriorityClassName to apply to workflow pods.
   * @return podPriorityClassName
   */
  @javax.annotation.Nullable
  public String getPodPriorityClassName() {
    return podPriorityClassName;
  }

  public void setPodPriorityClassName(@javax.annotation.Nullable String podPriorityClassName) {
    this.podPriorityClassName = podPriorityClassName;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec podSpecPatch(@javax.annotation.Nullable String podSpecPatch) {
    this.podSpecPatch = podSpecPatch;
    return this;
  }

  /**
   * PodSpecPatch holds strategic merge patch to apply against the pod spec. Allows parameterization of container fields which are not strings (e.g. resource limits).
   * @return podSpecPatch
   */
  @javax.annotation.Nullable
  public String getPodSpecPatch() {
    return podSpecPatch;
  }

  public void setPodSpecPatch(@javax.annotation.Nullable String podSpecPatch) {
    this.podSpecPatch = podSpecPatch;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec priority(@javax.annotation.Nullable Integer priority) {
    this.priority = priority;
    return this;
  }

  /**
   * Priority is used if controller is configured to process limited number of workflows in parallel. Workflows with higher priority are processed first.
   * @return priority
   */
  @javax.annotation.Nullable
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(@javax.annotation.Nullable Integer priority) {
    this.priority = priority;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec retryStrategy(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1RetryStrategy retryStrategy) {
    this.retryStrategy = retryStrategy;
    return this;
  }

  /**
   * Get retryStrategy
   * @return retryStrategy
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1RetryStrategy getRetryStrategy() {
    return retryStrategy;
  }

  public void setRetryStrategy(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1RetryStrategy retryStrategy) {
    this.retryStrategy = retryStrategy;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec schedulerName(@javax.annotation.Nullable String schedulerName) {
    this.schedulerName = schedulerName;
    return this;
  }

  /**
   * Set scheduler name for all pods. Will be overridden if container/script template&#39;s scheduler name is set. Default scheduler will be used if neither specified.
   * @return schedulerName
   */
  @javax.annotation.Nullable
  public String getSchedulerName() {
    return schedulerName;
  }

  public void setSchedulerName(@javax.annotation.Nullable String schedulerName) {
    this.schedulerName = schedulerName;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec securityContext(@javax.annotation.Nullable IoK8sApiCoreV1PodSecurityContext securityContext) {
    this.securityContext = securityContext;
    return this;
  }

  /**
   * Get securityContext
   * @return securityContext
   */
  @javax.annotation.Nullable
  public IoK8sApiCoreV1PodSecurityContext getSecurityContext() {
    return securityContext;
  }

  public void setSecurityContext(@javax.annotation.Nullable IoK8sApiCoreV1PodSecurityContext securityContext) {
    this.securityContext = securityContext;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec serviceAccountName(@javax.annotation.Nullable String serviceAccountName) {
    this.serviceAccountName = serviceAccountName;
    return this;
  }

  /**
   * ServiceAccountName is the name of the ServiceAccount to run all pods of the workflow as.
   * @return serviceAccountName
   */
  @javax.annotation.Nullable
  public String getServiceAccountName() {
    return serviceAccountName;
  }

  public void setServiceAccountName(@javax.annotation.Nullable String serviceAccountName) {
    this.serviceAccountName = serviceAccountName;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec shutdown(@javax.annotation.Nullable String shutdown) {
    this.shutdown = shutdown;
    return this;
  }

  /**
   * Shutdown will shutdown the workflow according to its ShutdownStrategy
   * @return shutdown
   */
  @javax.annotation.Nullable
  public String getShutdown() {
    return shutdown;
  }

  public void setShutdown(@javax.annotation.Nullable String shutdown) {
    this.shutdown = shutdown;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec suspend(@javax.annotation.Nullable Boolean suspend) {
    this.suspend = suspend;
    return this;
  }

  /**
   * Suspend will suspend the workflow and prevent execution of any future steps in the workflow
   * @return suspend
   */
  @javax.annotation.Nullable
  public Boolean getSuspend() {
    return suspend;
  }

  public void setSuspend(@javax.annotation.Nullable Boolean suspend) {
    this.suspend = suspend;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec synchronization(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1Synchronization synchronization) {
    this.synchronization = synchronization;
    return this;
  }

  /**
   * Get synchronization
   * @return synchronization
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1Synchronization getSynchronization() {
    return synchronization;
  }

  public void setSynchronization(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1Synchronization synchronization) {
    this.synchronization = synchronization;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec templateDefaults(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1Template templateDefaults) {
    this.templateDefaults = templateDefaults;
    return this;
  }

  /**
   * Get templateDefaults
   * @return templateDefaults
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1Template getTemplateDefaults() {
    return templateDefaults;
  }

  public void setTemplateDefaults(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1Template templateDefaults) {
    this.templateDefaults = templateDefaults;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec templates(@javax.annotation.Nullable List<IoArgoprojWorkflowV1alpha1Template> templates) {
    this.templates = templates;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1WorkflowSpec addTemplatesItem(IoArgoprojWorkflowV1alpha1Template templatesItem) {
    if (this.templates == null) {
      this.templates = new ArrayList<>();
    }
    this.templates.add(templatesItem);
    return this;
  }

  /**
   * Templates is a list of workflow templates used in a workflow
   * @return templates
   */
  @javax.annotation.Nullable
  public List<IoArgoprojWorkflowV1alpha1Template> getTemplates() {
    return templates;
  }

  public void setTemplates(@javax.annotation.Nullable List<IoArgoprojWorkflowV1alpha1Template> templates) {
    this.templates = templates;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec tolerations(@javax.annotation.Nullable List<IoK8sApiCoreV1Toleration> tolerations) {
    this.tolerations = tolerations;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1WorkflowSpec addTolerationsItem(IoK8sApiCoreV1Toleration tolerationsItem) {
    if (this.tolerations == null) {
      this.tolerations = new ArrayList<>();
    }
    this.tolerations.add(tolerationsItem);
    return this;
  }

  /**
   * Tolerations to apply to workflow pods.
   * @return tolerations
   */
  @javax.annotation.Nullable
  public List<IoK8sApiCoreV1Toleration> getTolerations() {
    return tolerations;
  }

  public void setTolerations(@javax.annotation.Nullable List<IoK8sApiCoreV1Toleration> tolerations) {
    this.tolerations = tolerations;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec ttlStrategy(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1TTLStrategy ttlStrategy) {
    this.ttlStrategy = ttlStrategy;
    return this;
  }

  /**
   * Get ttlStrategy
   * @return ttlStrategy
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1TTLStrategy getTtlStrategy() {
    return ttlStrategy;
  }

  public void setTtlStrategy(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1TTLStrategy ttlStrategy) {
    this.ttlStrategy = ttlStrategy;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec volumeClaimGC(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1VolumeClaimGC volumeClaimGC) {
    this.volumeClaimGC = volumeClaimGC;
    return this;
  }

  /**
   * Get volumeClaimGC
   * @return volumeClaimGC
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1VolumeClaimGC getVolumeClaimGC() {
    return volumeClaimGC;
  }

  public void setVolumeClaimGC(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1VolumeClaimGC volumeClaimGC) {
    this.volumeClaimGC = volumeClaimGC;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec volumeClaimTemplates(@javax.annotation.Nullable List<IoK8sApiCoreV1PersistentVolumeClaim> volumeClaimTemplates) {
    this.volumeClaimTemplates = volumeClaimTemplates;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1WorkflowSpec addVolumeClaimTemplatesItem(IoK8sApiCoreV1PersistentVolumeClaim volumeClaimTemplatesItem) {
    if (this.volumeClaimTemplates == null) {
      this.volumeClaimTemplates = new ArrayList<>();
    }
    this.volumeClaimTemplates.add(volumeClaimTemplatesItem);
    return this;
  }

  /**
   * VolumeClaimTemplates is a list of claims that containers are allowed to reference. The Workflow controller will create the claims at the beginning of the workflow and delete the claims upon completion of the workflow
   * @return volumeClaimTemplates
   */
  @javax.annotation.Nullable
  public List<IoK8sApiCoreV1PersistentVolumeClaim> getVolumeClaimTemplates() {
    return volumeClaimTemplates;
  }

  public void setVolumeClaimTemplates(@javax.annotation.Nullable List<IoK8sApiCoreV1PersistentVolumeClaim> volumeClaimTemplates) {
    this.volumeClaimTemplates = volumeClaimTemplates;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec volumes(@javax.annotation.Nullable List<IoK8sApiCoreV1Volume> volumes) {
    this.volumes = volumes;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1WorkflowSpec addVolumesItem(IoK8sApiCoreV1Volume volumesItem) {
    if (this.volumes == null) {
      this.volumes = new ArrayList<>();
    }
    this.volumes.add(volumesItem);
    return this;
  }

  /**
   * Volumes is a list of volumes that can be mounted by containers in a io.argoproj.workflow.v1alpha1.
   * @return volumes
   */
  @javax.annotation.Nullable
  public List<IoK8sApiCoreV1Volume> getVolumes() {
    return volumes;
  }

  public void setVolumes(@javax.annotation.Nullable List<IoK8sApiCoreV1Volume> volumes) {
    this.volumes = volumes;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec workflowMetadata(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1WorkflowMetadata workflowMetadata) {
    this.workflowMetadata = workflowMetadata;
    return this;
  }

  /**
   * Get workflowMetadata
   * @return workflowMetadata
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1WorkflowMetadata getWorkflowMetadata() {
    return workflowMetadata;
  }

  public void setWorkflowMetadata(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1WorkflowMetadata workflowMetadata) {
    this.workflowMetadata = workflowMetadata;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec workflowTemplateRef(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1WorkflowTemplateRef workflowTemplateRef) {
    this.workflowTemplateRef = workflowTemplateRef;
    return this;
  }

  /**
   * Get workflowTemplateRef
   * @return workflowTemplateRef
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1WorkflowTemplateRef getWorkflowTemplateRef() {
    return workflowTemplateRef;
  }

  public void setWorkflowTemplateRef(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1WorkflowTemplateRef workflowTemplateRef) {
    this.workflowTemplateRef = workflowTemplateRef;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoArgoprojWorkflowV1alpha1WorkflowSpec ioArgoprojWorkflowV1alpha1WorkflowSpec = (IoArgoprojWorkflowV1alpha1WorkflowSpec) o;
    return Objects.equals(this.activeDeadlineSeconds, ioArgoprojWorkflowV1alpha1WorkflowSpec.activeDeadlineSeconds) &&
        Objects.equals(this.affinity, ioArgoprojWorkflowV1alpha1WorkflowSpec.affinity) &&
        Objects.equals(this.archiveLogs, ioArgoprojWorkflowV1alpha1WorkflowSpec.archiveLogs) &&
        Objects.equals(this.arguments, ioArgoprojWorkflowV1alpha1WorkflowSpec.arguments) &&
        Objects.equals(this.artifactGC, ioArgoprojWorkflowV1alpha1WorkflowSpec.artifactGC) &&
        Objects.equals(this.artifactRepositoryRef, ioArgoprojWorkflowV1alpha1WorkflowSpec.artifactRepositoryRef) &&
        Objects.equals(this.automountServiceAccountToken, ioArgoprojWorkflowV1alpha1WorkflowSpec.automountServiceAccountToken) &&
        Objects.equals(this.dnsConfig, ioArgoprojWorkflowV1alpha1WorkflowSpec.dnsConfig) &&
        Objects.equals(this.dnsPolicy, ioArgoprojWorkflowV1alpha1WorkflowSpec.dnsPolicy) &&
        Objects.equals(this.entrypoint, ioArgoprojWorkflowV1alpha1WorkflowSpec.entrypoint) &&
        Objects.equals(this.executor, ioArgoprojWorkflowV1alpha1WorkflowSpec.executor) &&
        Objects.equals(this.hooks, ioArgoprojWorkflowV1alpha1WorkflowSpec.hooks) &&
        Objects.equals(this.hostAliases, ioArgoprojWorkflowV1alpha1WorkflowSpec.hostAliases) &&
        Objects.equals(this.hostNetwork, ioArgoprojWorkflowV1alpha1WorkflowSpec.hostNetwork) &&
        Objects.equals(this.imagePullSecrets, ioArgoprojWorkflowV1alpha1WorkflowSpec.imagePullSecrets) &&
        Objects.equals(this.metrics, ioArgoprojWorkflowV1alpha1WorkflowSpec.metrics) &&
        Objects.equals(this.nodeSelector, ioArgoprojWorkflowV1alpha1WorkflowSpec.nodeSelector) &&
        Objects.equals(this.onExit, ioArgoprojWorkflowV1alpha1WorkflowSpec.onExit) &&
        Objects.equals(this.parallelism, ioArgoprojWorkflowV1alpha1WorkflowSpec.parallelism) &&
        Objects.equals(this.podDisruptionBudget, ioArgoprojWorkflowV1alpha1WorkflowSpec.podDisruptionBudget) &&
        Objects.equals(this.podGC, ioArgoprojWorkflowV1alpha1WorkflowSpec.podGC) &&
        Objects.equals(this.podMetadata, ioArgoprojWorkflowV1alpha1WorkflowSpec.podMetadata) &&
        Objects.equals(this.podPriority, ioArgoprojWorkflowV1alpha1WorkflowSpec.podPriority) &&
        Objects.equals(this.podPriorityClassName, ioArgoprojWorkflowV1alpha1WorkflowSpec.podPriorityClassName) &&
        Objects.equals(this.podSpecPatch, ioArgoprojWorkflowV1alpha1WorkflowSpec.podSpecPatch) &&
        Objects.equals(this.priority, ioArgoprojWorkflowV1alpha1WorkflowSpec.priority) &&
        Objects.equals(this.retryStrategy, ioArgoprojWorkflowV1alpha1WorkflowSpec.retryStrategy) &&
        Objects.equals(this.schedulerName, ioArgoprojWorkflowV1alpha1WorkflowSpec.schedulerName) &&
        Objects.equals(this.securityContext, ioArgoprojWorkflowV1alpha1WorkflowSpec.securityContext) &&
        Objects.equals(this.serviceAccountName, ioArgoprojWorkflowV1alpha1WorkflowSpec.serviceAccountName) &&
        Objects.equals(this.shutdown, ioArgoprojWorkflowV1alpha1WorkflowSpec.shutdown) &&
        Objects.equals(this.suspend, ioArgoprojWorkflowV1alpha1WorkflowSpec.suspend) &&
        Objects.equals(this.synchronization, ioArgoprojWorkflowV1alpha1WorkflowSpec.synchronization) &&
        Objects.equals(this.templateDefaults, ioArgoprojWorkflowV1alpha1WorkflowSpec.templateDefaults) &&
        Objects.equals(this.templates, ioArgoprojWorkflowV1alpha1WorkflowSpec.templates) &&
        Objects.equals(this.tolerations, ioArgoprojWorkflowV1alpha1WorkflowSpec.tolerations) &&
        Objects.equals(this.ttlStrategy, ioArgoprojWorkflowV1alpha1WorkflowSpec.ttlStrategy) &&
        Objects.equals(this.volumeClaimGC, ioArgoprojWorkflowV1alpha1WorkflowSpec.volumeClaimGC) &&
        Objects.equals(this.volumeClaimTemplates, ioArgoprojWorkflowV1alpha1WorkflowSpec.volumeClaimTemplates) &&
        Objects.equals(this.volumes, ioArgoprojWorkflowV1alpha1WorkflowSpec.volumes) &&
        Objects.equals(this.workflowMetadata, ioArgoprojWorkflowV1alpha1WorkflowSpec.workflowMetadata) &&
        Objects.equals(this.workflowTemplateRef, ioArgoprojWorkflowV1alpha1WorkflowSpec.workflowTemplateRef);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activeDeadlineSeconds, affinity, archiveLogs, arguments, artifactGC, artifactRepositoryRef, automountServiceAccountToken, dnsConfig, dnsPolicy, entrypoint, executor, hooks, hostAliases, hostNetwork, imagePullSecrets, metrics, nodeSelector, onExit, parallelism, podDisruptionBudget, podGC, podMetadata, podPriority, podPriorityClassName, podSpecPatch, priority, retryStrategy, schedulerName, securityContext, serviceAccountName, shutdown, suspend, synchronization, templateDefaults, templates, tolerations, ttlStrategy, volumeClaimGC, volumeClaimTemplates, volumes, workflowMetadata, workflowTemplateRef);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoArgoprojWorkflowV1alpha1WorkflowSpec {\n");
    sb.append("    activeDeadlineSeconds: ").append(toIndentedString(activeDeadlineSeconds)).append("\n");
    sb.append("    affinity: ").append(toIndentedString(affinity)).append("\n");
    sb.append("    archiveLogs: ").append(toIndentedString(archiveLogs)).append("\n");
    sb.append("    arguments: ").append(toIndentedString(arguments)).append("\n");
    sb.append("    artifactGC: ").append(toIndentedString(artifactGC)).append("\n");
    sb.append("    artifactRepositoryRef: ").append(toIndentedString(artifactRepositoryRef)).append("\n");
    sb.append("    automountServiceAccountToken: ").append(toIndentedString(automountServiceAccountToken)).append("\n");
    sb.append("    dnsConfig: ").append(toIndentedString(dnsConfig)).append("\n");
    sb.append("    dnsPolicy: ").append(toIndentedString(dnsPolicy)).append("\n");
    sb.append("    entrypoint: ").append(toIndentedString(entrypoint)).append("\n");
    sb.append("    executor: ").append(toIndentedString(executor)).append("\n");
    sb.append("    hooks: ").append(toIndentedString(hooks)).append("\n");
    sb.append("    hostAliases: ").append(toIndentedString(hostAliases)).append("\n");
    sb.append("    hostNetwork: ").append(toIndentedString(hostNetwork)).append("\n");
    sb.append("    imagePullSecrets: ").append(toIndentedString(imagePullSecrets)).append("\n");
    sb.append("    metrics: ").append(toIndentedString(metrics)).append("\n");
    sb.append("    nodeSelector: ").append(toIndentedString(nodeSelector)).append("\n");
    sb.append("    onExit: ").append(toIndentedString(onExit)).append("\n");
    sb.append("    parallelism: ").append(toIndentedString(parallelism)).append("\n");
    sb.append("    podDisruptionBudget: ").append(toIndentedString(podDisruptionBudget)).append("\n");
    sb.append("    podGC: ").append(toIndentedString(podGC)).append("\n");
    sb.append("    podMetadata: ").append(toIndentedString(podMetadata)).append("\n");
    sb.append("    podPriority: ").append(toIndentedString(podPriority)).append("\n");
    sb.append("    podPriorityClassName: ").append(toIndentedString(podPriorityClassName)).append("\n");
    sb.append("    podSpecPatch: ").append(toIndentedString(podSpecPatch)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    retryStrategy: ").append(toIndentedString(retryStrategy)).append("\n");
    sb.append("    schedulerName: ").append(toIndentedString(schedulerName)).append("\n");
    sb.append("    securityContext: ").append(toIndentedString(securityContext)).append("\n");
    sb.append("    serviceAccountName: ").append(toIndentedString(serviceAccountName)).append("\n");
    sb.append("    shutdown: ").append(toIndentedString(shutdown)).append("\n");
    sb.append("    suspend: ").append(toIndentedString(suspend)).append("\n");
    sb.append("    synchronization: ").append(toIndentedString(synchronization)).append("\n");
    sb.append("    templateDefaults: ").append(toIndentedString(templateDefaults)).append("\n");
    sb.append("    templates: ").append(toIndentedString(templates)).append("\n");
    sb.append("    tolerations: ").append(toIndentedString(tolerations)).append("\n");
    sb.append("    ttlStrategy: ").append(toIndentedString(ttlStrategy)).append("\n");
    sb.append("    volumeClaimGC: ").append(toIndentedString(volumeClaimGC)).append("\n");
    sb.append("    volumeClaimTemplates: ").append(toIndentedString(volumeClaimTemplates)).append("\n");
    sb.append("    volumes: ").append(toIndentedString(volumes)).append("\n");
    sb.append("    workflowMetadata: ").append(toIndentedString(workflowMetadata)).append("\n");
    sb.append("    workflowTemplateRef: ").append(toIndentedString(workflowTemplateRef)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("activeDeadlineSeconds");
    openapiFields.add("affinity");
    openapiFields.add("archiveLogs");
    openapiFields.add("arguments");
    openapiFields.add("artifactGC");
    openapiFields.add("artifactRepositoryRef");
    openapiFields.add("automountServiceAccountToken");
    openapiFields.add("dnsConfig");
    openapiFields.add("dnsPolicy");
    openapiFields.add("entrypoint");
    openapiFields.add("executor");
    openapiFields.add("hooks");
    openapiFields.add("hostAliases");
    openapiFields.add("hostNetwork");
    openapiFields.add("imagePullSecrets");
    openapiFields.add("metrics");
    openapiFields.add("nodeSelector");
    openapiFields.add("onExit");
    openapiFields.add("parallelism");
    openapiFields.add("podDisruptionBudget");
    openapiFields.add("podGC");
    openapiFields.add("podMetadata");
    openapiFields.add("podPriority");
    openapiFields.add("podPriorityClassName");
    openapiFields.add("podSpecPatch");
    openapiFields.add("priority");
    openapiFields.add("retryStrategy");
    openapiFields.add("schedulerName");
    openapiFields.add("securityContext");
    openapiFields.add("serviceAccountName");
    openapiFields.add("shutdown");
    openapiFields.add("suspend");
    openapiFields.add("synchronization");
    openapiFields.add("templateDefaults");
    openapiFields.add("templates");
    openapiFields.add("tolerations");
    openapiFields.add("ttlStrategy");
    openapiFields.add("volumeClaimGC");
    openapiFields.add("volumeClaimTemplates");
    openapiFields.add("volumes");
    openapiFields.add("workflowMetadata");
    openapiFields.add("workflowTemplateRef");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IoArgoprojWorkflowV1alpha1WorkflowSpec
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IoArgoprojWorkflowV1alpha1WorkflowSpec.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IoArgoprojWorkflowV1alpha1WorkflowSpec is not found in the empty JSON string", IoArgoprojWorkflowV1alpha1WorkflowSpec.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IoArgoprojWorkflowV1alpha1WorkflowSpec.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IoArgoprojWorkflowV1alpha1WorkflowSpec` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `affinity`
      if (jsonObj.get("affinity") != null && !jsonObj.get("affinity").isJsonNull()) {
        IoK8sApiCoreV1Affinity.validateJsonElement(jsonObj.get("affinity"));
      }
      // validate the optional field `arguments`
      if (jsonObj.get("arguments") != null && !jsonObj.get("arguments").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1Arguments.validateJsonElement(jsonObj.get("arguments"));
      }
      // validate the optional field `artifactGC`
      if (jsonObj.get("artifactGC") != null && !jsonObj.get("artifactGC").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1WorkflowLevelArtifactGC.validateJsonElement(jsonObj.get("artifactGC"));
      }
      // validate the optional field `artifactRepositoryRef`
      if (jsonObj.get("artifactRepositoryRef") != null && !jsonObj.get("artifactRepositoryRef").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1ArtifactRepositoryRef.validateJsonElement(jsonObj.get("artifactRepositoryRef"));
      }
      // validate the optional field `dnsConfig`
      if (jsonObj.get("dnsConfig") != null && !jsonObj.get("dnsConfig").isJsonNull()) {
        IoK8sApiCoreV1PodDNSConfig.validateJsonElement(jsonObj.get("dnsConfig"));
      }
      if ((jsonObj.get("dnsPolicy") != null && !jsonObj.get("dnsPolicy").isJsonNull()) && !jsonObj.get("dnsPolicy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dnsPolicy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dnsPolicy").toString()));
      }
      if ((jsonObj.get("entrypoint") != null && !jsonObj.get("entrypoint").isJsonNull()) && !jsonObj.get("entrypoint").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `entrypoint` to be a primitive type in the JSON string but got `%s`", jsonObj.get("entrypoint").toString()));
      }
      // validate the optional field `executor`
      if (jsonObj.get("executor") != null && !jsonObj.get("executor").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1ExecutorConfig.validateJsonElement(jsonObj.get("executor"));
      }
      if (jsonObj.get("hostAliases") != null && !jsonObj.get("hostAliases").isJsonNull()) {
        JsonArray jsonArrayhostAliases = jsonObj.getAsJsonArray("hostAliases");
        if (jsonArrayhostAliases != null) {
          // ensure the json data is an array
          if (!jsonObj.get("hostAliases").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `hostAliases` to be an array in the JSON string but got `%s`", jsonObj.get("hostAliases").toString()));
          }

          // validate the optional field `hostAliases` (array)
          for (int i = 0; i < jsonArrayhostAliases.size(); i++) {
            IoK8sApiCoreV1HostAlias.validateJsonElement(jsonArrayhostAliases.get(i));
          };
        }
      }
      if (jsonObj.get("imagePullSecrets") != null && !jsonObj.get("imagePullSecrets").isJsonNull()) {
        JsonArray jsonArrayimagePullSecrets = jsonObj.getAsJsonArray("imagePullSecrets");
        if (jsonArrayimagePullSecrets != null) {
          // ensure the json data is an array
          if (!jsonObj.get("imagePullSecrets").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `imagePullSecrets` to be an array in the JSON string but got `%s`", jsonObj.get("imagePullSecrets").toString()));
          }

          // validate the optional field `imagePullSecrets` (array)
          for (int i = 0; i < jsonArrayimagePullSecrets.size(); i++) {
            IoK8sApiCoreV1LocalObjectReference.validateJsonElement(jsonArrayimagePullSecrets.get(i));
          };
        }
      }
      // validate the optional field `metrics`
      if (jsonObj.get("metrics") != null && !jsonObj.get("metrics").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1Metrics.validateJsonElement(jsonObj.get("metrics"));
      }
      if ((jsonObj.get("onExit") != null && !jsonObj.get("onExit").isJsonNull()) && !jsonObj.get("onExit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `onExit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("onExit").toString()));
      }
      // validate the optional field `podDisruptionBudget`
      if (jsonObj.get("podDisruptionBudget") != null && !jsonObj.get("podDisruptionBudget").isJsonNull()) {
        IoK8sApiPolicyV1PodDisruptionBudgetSpec.validateJsonElement(jsonObj.get("podDisruptionBudget"));
      }
      // validate the optional field `podGC`
      if (jsonObj.get("podGC") != null && !jsonObj.get("podGC").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1PodGC.validateJsonElement(jsonObj.get("podGC"));
      }
      // validate the optional field `podMetadata`
      if (jsonObj.get("podMetadata") != null && !jsonObj.get("podMetadata").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1Metadata.validateJsonElement(jsonObj.get("podMetadata"));
      }
      if ((jsonObj.get("podPriorityClassName") != null && !jsonObj.get("podPriorityClassName").isJsonNull()) && !jsonObj.get("podPriorityClassName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `podPriorityClassName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("podPriorityClassName").toString()));
      }
      if ((jsonObj.get("podSpecPatch") != null && !jsonObj.get("podSpecPatch").isJsonNull()) && !jsonObj.get("podSpecPatch").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `podSpecPatch` to be a primitive type in the JSON string but got `%s`", jsonObj.get("podSpecPatch").toString()));
      }
      // validate the optional field `retryStrategy`
      if (jsonObj.get("retryStrategy") != null && !jsonObj.get("retryStrategy").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1RetryStrategy.validateJsonElement(jsonObj.get("retryStrategy"));
      }
      if ((jsonObj.get("schedulerName") != null && !jsonObj.get("schedulerName").isJsonNull()) && !jsonObj.get("schedulerName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `schedulerName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("schedulerName").toString()));
      }
      // validate the optional field `securityContext`
      if (jsonObj.get("securityContext") != null && !jsonObj.get("securityContext").isJsonNull()) {
        IoK8sApiCoreV1PodSecurityContext.validateJsonElement(jsonObj.get("securityContext"));
      }
      if ((jsonObj.get("serviceAccountName") != null && !jsonObj.get("serviceAccountName").isJsonNull()) && !jsonObj.get("serviceAccountName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serviceAccountName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serviceAccountName").toString()));
      }
      if ((jsonObj.get("shutdown") != null && !jsonObj.get("shutdown").isJsonNull()) && !jsonObj.get("shutdown").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shutdown` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shutdown").toString()));
      }
      // validate the optional field `synchronization`
      if (jsonObj.get("synchronization") != null && !jsonObj.get("synchronization").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1Synchronization.validateJsonElement(jsonObj.get("synchronization"));
      }
      // validate the optional field `templateDefaults`
      if (jsonObj.get("templateDefaults") != null && !jsonObj.get("templateDefaults").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1Template.validateJsonElement(jsonObj.get("templateDefaults"));
      }
      if (jsonObj.get("templates") != null && !jsonObj.get("templates").isJsonNull()) {
        JsonArray jsonArraytemplates = jsonObj.getAsJsonArray("templates");
        if (jsonArraytemplates != null) {
          // ensure the json data is an array
          if (!jsonObj.get("templates").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `templates` to be an array in the JSON string but got `%s`", jsonObj.get("templates").toString()));
          }

          // validate the optional field `templates` (array)
          for (int i = 0; i < jsonArraytemplates.size(); i++) {
            IoArgoprojWorkflowV1alpha1Template.validateJsonElement(jsonArraytemplates.get(i));
          };
        }
      }
      if (jsonObj.get("tolerations") != null && !jsonObj.get("tolerations").isJsonNull()) {
        JsonArray jsonArraytolerations = jsonObj.getAsJsonArray("tolerations");
        if (jsonArraytolerations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("tolerations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `tolerations` to be an array in the JSON string but got `%s`", jsonObj.get("tolerations").toString()));
          }

          // validate the optional field `tolerations` (array)
          for (int i = 0; i < jsonArraytolerations.size(); i++) {
            IoK8sApiCoreV1Toleration.validateJsonElement(jsonArraytolerations.get(i));
          };
        }
      }
      // validate the optional field `ttlStrategy`
      if (jsonObj.get("ttlStrategy") != null && !jsonObj.get("ttlStrategy").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1TTLStrategy.validateJsonElement(jsonObj.get("ttlStrategy"));
      }
      // validate the optional field `volumeClaimGC`
      if (jsonObj.get("volumeClaimGC") != null && !jsonObj.get("volumeClaimGC").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1VolumeClaimGC.validateJsonElement(jsonObj.get("volumeClaimGC"));
      }
      if (jsonObj.get("volumeClaimTemplates") != null && !jsonObj.get("volumeClaimTemplates").isJsonNull()) {
        JsonArray jsonArrayvolumeClaimTemplates = jsonObj.getAsJsonArray("volumeClaimTemplates");
        if (jsonArrayvolumeClaimTemplates != null) {
          // ensure the json data is an array
          if (!jsonObj.get("volumeClaimTemplates").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `volumeClaimTemplates` to be an array in the JSON string but got `%s`", jsonObj.get("volumeClaimTemplates").toString()));
          }

          // validate the optional field `volumeClaimTemplates` (array)
          for (int i = 0; i < jsonArrayvolumeClaimTemplates.size(); i++) {
            IoK8sApiCoreV1PersistentVolumeClaim.validateJsonElement(jsonArrayvolumeClaimTemplates.get(i));
          };
        }
      }
      if (jsonObj.get("volumes") != null && !jsonObj.get("volumes").isJsonNull()) {
        JsonArray jsonArrayvolumes = jsonObj.getAsJsonArray("volumes");
        if (jsonArrayvolumes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("volumes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `volumes` to be an array in the JSON string but got `%s`", jsonObj.get("volumes").toString()));
          }

          // validate the optional field `volumes` (array)
          for (int i = 0; i < jsonArrayvolumes.size(); i++) {
            IoK8sApiCoreV1Volume.validateJsonElement(jsonArrayvolumes.get(i));
          };
        }
      }
      // validate the optional field `workflowMetadata`
      if (jsonObj.get("workflowMetadata") != null && !jsonObj.get("workflowMetadata").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1WorkflowMetadata.validateJsonElement(jsonObj.get("workflowMetadata"));
      }
      // validate the optional field `workflowTemplateRef`
      if (jsonObj.get("workflowTemplateRef") != null && !jsonObj.get("workflowTemplateRef").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1WorkflowTemplateRef.validateJsonElement(jsonObj.get("workflowTemplateRef"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IoArgoprojWorkflowV1alpha1WorkflowSpec.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IoArgoprojWorkflowV1alpha1WorkflowSpec' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IoArgoprojWorkflowV1alpha1WorkflowSpec> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IoArgoprojWorkflowV1alpha1WorkflowSpec.class));

       return (TypeAdapter<T>) new TypeAdapter<IoArgoprojWorkflowV1alpha1WorkflowSpec>() {
           @Override
           public void write(JsonWriter out, IoArgoprojWorkflowV1alpha1WorkflowSpec value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IoArgoprojWorkflowV1alpha1WorkflowSpec read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IoArgoprojWorkflowV1alpha1WorkflowSpec given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IoArgoprojWorkflowV1alpha1WorkflowSpec
   * @throws IOException if the JSON string is invalid with respect to IoArgoprojWorkflowV1alpha1WorkflowSpec
   */
  public static IoArgoprojWorkflowV1alpha1WorkflowSpec fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IoArgoprojWorkflowV1alpha1WorkflowSpec.class);
  }

  /**
   * Convert an instance of IoArgoprojWorkflowV1alpha1WorkflowSpec to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

