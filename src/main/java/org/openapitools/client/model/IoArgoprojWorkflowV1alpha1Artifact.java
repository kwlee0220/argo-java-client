/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1ArchiveStrategy;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1ArtifactGC;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1ArtifactoryArtifact;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1AzureArtifact;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1GCSArtifact;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1GitArtifact;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1HDFSArtifact;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1HTTPArtifact;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1OSSArtifact;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1RawArtifact;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1S3Artifact;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Artifact indicates an artifact to place at a specified path
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-24T03:51:41.763920791Z[Etc/UTC]", comments = "Generator version: 7.12.0-SNAPSHOT")
public class IoArgoprojWorkflowV1alpha1Artifact {
  public static final String SERIALIZED_NAME_ARCHIVE = "archive";
  @SerializedName(SERIALIZED_NAME_ARCHIVE)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1ArchiveStrategy archive;

  public static final String SERIALIZED_NAME_ARCHIVE_LOGS = "archiveLogs";
  @SerializedName(SERIALIZED_NAME_ARCHIVE_LOGS)
  @javax.annotation.Nullable
  private Boolean archiveLogs;

  public static final String SERIALIZED_NAME_ARTIFACT_G_C = "artifactGC";
  @SerializedName(SERIALIZED_NAME_ARTIFACT_G_C)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1ArtifactGC artifactGC;

  public static final String SERIALIZED_NAME_ARTIFACTORY = "artifactory";
  @SerializedName(SERIALIZED_NAME_ARTIFACTORY)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1ArtifactoryArtifact artifactory;

  public static final String SERIALIZED_NAME_AZURE = "azure";
  @SerializedName(SERIALIZED_NAME_AZURE)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1AzureArtifact azure;

  public static final String SERIALIZED_NAME_DELETED = "deleted";
  @SerializedName(SERIALIZED_NAME_DELETED)
  @javax.annotation.Nullable
  private Boolean deleted;

  public static final String SERIALIZED_NAME_FROM = "from";
  @SerializedName(SERIALIZED_NAME_FROM)
  @javax.annotation.Nullable
  private String from;

  public static final String SERIALIZED_NAME_FROM_EXPRESSION = "fromExpression";
  @SerializedName(SERIALIZED_NAME_FROM_EXPRESSION)
  @javax.annotation.Nullable
  private String fromExpression;

  public static final String SERIALIZED_NAME_GCS = "gcs";
  @SerializedName(SERIALIZED_NAME_GCS)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1GCSArtifact gcs;

  public static final String SERIALIZED_NAME_GIT = "git";
  @SerializedName(SERIALIZED_NAME_GIT)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1GitArtifact git;

  public static final String SERIALIZED_NAME_GLOBAL_NAME = "globalName";
  @SerializedName(SERIALIZED_NAME_GLOBAL_NAME)
  @javax.annotation.Nullable
  private String globalName;

  public static final String SERIALIZED_NAME_HDFS = "hdfs";
  @SerializedName(SERIALIZED_NAME_HDFS)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1HDFSArtifact hdfs;

  public static final String SERIALIZED_NAME_HTTP = "http";
  @SerializedName(SERIALIZED_NAME_HTTP)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1HTTPArtifact http;

  public static final String SERIALIZED_NAME_MODE = "mode";
  @SerializedName(SERIALIZED_NAME_MODE)
  @javax.annotation.Nullable
  private Integer mode;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  @javax.annotation.Nonnull
  private String name;

  public static final String SERIALIZED_NAME_OPTIONAL = "optional";
  @SerializedName(SERIALIZED_NAME_OPTIONAL)
  @javax.annotation.Nullable
  private Boolean optional;

  public static final String SERIALIZED_NAME_OSS = "oss";
  @SerializedName(SERIALIZED_NAME_OSS)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1OSSArtifact oss;

  public static final String SERIALIZED_NAME_PATH = "path";
  @SerializedName(SERIALIZED_NAME_PATH)
  @javax.annotation.Nullable
  private String path;

  public static final String SERIALIZED_NAME_RAW = "raw";
  @SerializedName(SERIALIZED_NAME_RAW)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1RawArtifact raw;

  public static final String SERIALIZED_NAME_RECURSE_MODE = "recurseMode";
  @SerializedName(SERIALIZED_NAME_RECURSE_MODE)
  @javax.annotation.Nullable
  private Boolean recurseMode;

  public static final String SERIALIZED_NAME_S3 = "s3";
  @SerializedName(SERIALIZED_NAME_S3)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1S3Artifact s3;

  public static final String SERIALIZED_NAME_SUB_PATH = "subPath";
  @SerializedName(SERIALIZED_NAME_SUB_PATH)
  @javax.annotation.Nullable
  private String subPath;

  public IoArgoprojWorkflowV1alpha1Artifact() {
  }

  public IoArgoprojWorkflowV1alpha1Artifact archive(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1ArchiveStrategy archive) {
    this.archive = archive;
    return this;
  }

  /**
   * Get archive
   * @return archive
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1ArchiveStrategy getArchive() {
    return archive;
  }

  public void setArchive(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1ArchiveStrategy archive) {
    this.archive = archive;
  }


  public IoArgoprojWorkflowV1alpha1Artifact archiveLogs(@javax.annotation.Nullable Boolean archiveLogs) {
    this.archiveLogs = archiveLogs;
    return this;
  }

  /**
   * ArchiveLogs indicates if the container logs should be archived
   * @return archiveLogs
   */
  @javax.annotation.Nullable
  public Boolean getArchiveLogs() {
    return archiveLogs;
  }

  public void setArchiveLogs(@javax.annotation.Nullable Boolean archiveLogs) {
    this.archiveLogs = archiveLogs;
  }


  public IoArgoprojWorkflowV1alpha1Artifact artifactGC(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1ArtifactGC artifactGC) {
    this.artifactGC = artifactGC;
    return this;
  }

  /**
   * Get artifactGC
   * @return artifactGC
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1ArtifactGC getArtifactGC() {
    return artifactGC;
  }

  public void setArtifactGC(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1ArtifactGC artifactGC) {
    this.artifactGC = artifactGC;
  }


  public IoArgoprojWorkflowV1alpha1Artifact artifactory(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1ArtifactoryArtifact artifactory) {
    this.artifactory = artifactory;
    return this;
  }

  /**
   * Get artifactory
   * @return artifactory
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1ArtifactoryArtifact getArtifactory() {
    return artifactory;
  }

  public void setArtifactory(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1ArtifactoryArtifact artifactory) {
    this.artifactory = artifactory;
  }


  public IoArgoprojWorkflowV1alpha1Artifact azure(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1AzureArtifact azure) {
    this.azure = azure;
    return this;
  }

  /**
   * Get azure
   * @return azure
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1AzureArtifact getAzure() {
    return azure;
  }

  public void setAzure(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1AzureArtifact azure) {
    this.azure = azure;
  }


  public IoArgoprojWorkflowV1alpha1Artifact deleted(@javax.annotation.Nullable Boolean deleted) {
    this.deleted = deleted;
    return this;
  }

  /**
   * Has this been deleted?
   * @return deleted
   */
  @javax.annotation.Nullable
  public Boolean getDeleted() {
    return deleted;
  }

  public void setDeleted(@javax.annotation.Nullable Boolean deleted) {
    this.deleted = deleted;
  }


  public IoArgoprojWorkflowV1alpha1Artifact from(@javax.annotation.Nullable String from) {
    this.from = from;
    return this;
  }

  /**
   * From allows an artifact to reference an artifact from a previous step
   * @return from
   */
  @javax.annotation.Nullable
  public String getFrom() {
    return from;
  }

  public void setFrom(@javax.annotation.Nullable String from) {
    this.from = from;
  }


  public IoArgoprojWorkflowV1alpha1Artifact fromExpression(@javax.annotation.Nullable String fromExpression) {
    this.fromExpression = fromExpression;
    return this;
  }

  /**
   * FromExpression, if defined, is evaluated to specify the value for the artifact
   * @return fromExpression
   */
  @javax.annotation.Nullable
  public String getFromExpression() {
    return fromExpression;
  }

  public void setFromExpression(@javax.annotation.Nullable String fromExpression) {
    this.fromExpression = fromExpression;
  }


  public IoArgoprojWorkflowV1alpha1Artifact gcs(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1GCSArtifact gcs) {
    this.gcs = gcs;
    return this;
  }

  /**
   * Get gcs
   * @return gcs
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1GCSArtifact getGcs() {
    return gcs;
  }

  public void setGcs(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1GCSArtifact gcs) {
    this.gcs = gcs;
  }


  public IoArgoprojWorkflowV1alpha1Artifact git(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1GitArtifact git) {
    this.git = git;
    return this;
  }

  /**
   * Get git
   * @return git
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1GitArtifact getGit() {
    return git;
  }

  public void setGit(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1GitArtifact git) {
    this.git = git;
  }


  public IoArgoprojWorkflowV1alpha1Artifact globalName(@javax.annotation.Nullable String globalName) {
    this.globalName = globalName;
    return this;
  }

  /**
   * GlobalName exports an output artifact to the global scope, making it available as &#39;{{io.argoproj.workflow.v1alpha1.outputs.artifacts.XXXX}} and in workflow.status.outputs.artifacts
   * @return globalName
   */
  @javax.annotation.Nullable
  public String getGlobalName() {
    return globalName;
  }

  public void setGlobalName(@javax.annotation.Nullable String globalName) {
    this.globalName = globalName;
  }


  public IoArgoprojWorkflowV1alpha1Artifact hdfs(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1HDFSArtifact hdfs) {
    this.hdfs = hdfs;
    return this;
  }

  /**
   * Get hdfs
   * @return hdfs
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1HDFSArtifact getHdfs() {
    return hdfs;
  }

  public void setHdfs(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1HDFSArtifact hdfs) {
    this.hdfs = hdfs;
  }


  public IoArgoprojWorkflowV1alpha1Artifact http(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1HTTPArtifact http) {
    this.http = http;
    return this;
  }

  /**
   * Get http
   * @return http
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1HTTPArtifact getHttp() {
    return http;
  }

  public void setHttp(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1HTTPArtifact http) {
    this.http = http;
  }


  public IoArgoprojWorkflowV1alpha1Artifact mode(@javax.annotation.Nullable Integer mode) {
    this.mode = mode;
    return this;
  }

  /**
   * mode bits to use on this file, must be a value between 0 and 0777 set when loading input artifacts.
   * @return mode
   */
  @javax.annotation.Nullable
  public Integer getMode() {
    return mode;
  }

  public void setMode(@javax.annotation.Nullable Integer mode) {
    this.mode = mode;
  }


  public IoArgoprojWorkflowV1alpha1Artifact name(@javax.annotation.Nonnull String name) {
    this.name = name;
    return this;
  }

  /**
   * name of the artifact. must be unique within a template&#39;s inputs/outputs.
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(@javax.annotation.Nonnull String name) {
    this.name = name;
  }


  public IoArgoprojWorkflowV1alpha1Artifact optional(@javax.annotation.Nullable Boolean optional) {
    this.optional = optional;
    return this;
  }

  /**
   * Make Artifacts optional, if Artifacts doesn&#39;t generate or exist
   * @return optional
   */
  @javax.annotation.Nullable
  public Boolean getOptional() {
    return optional;
  }

  public void setOptional(@javax.annotation.Nullable Boolean optional) {
    this.optional = optional;
  }


  public IoArgoprojWorkflowV1alpha1Artifact oss(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1OSSArtifact oss) {
    this.oss = oss;
    return this;
  }

  /**
   * Get oss
   * @return oss
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1OSSArtifact getOss() {
    return oss;
  }

  public void setOss(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1OSSArtifact oss) {
    this.oss = oss;
  }


  public IoArgoprojWorkflowV1alpha1Artifact path(@javax.annotation.Nullable String path) {
    this.path = path;
    return this;
  }

  /**
   * Path is the container path to the artifact
   * @return path
   */
  @javax.annotation.Nullable
  public String getPath() {
    return path;
  }

  public void setPath(@javax.annotation.Nullable String path) {
    this.path = path;
  }


  public IoArgoprojWorkflowV1alpha1Artifact raw(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1RawArtifact raw) {
    this.raw = raw;
    return this;
  }

  /**
   * Get raw
   * @return raw
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1RawArtifact getRaw() {
    return raw;
  }

  public void setRaw(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1RawArtifact raw) {
    this.raw = raw;
  }


  public IoArgoprojWorkflowV1alpha1Artifact recurseMode(@javax.annotation.Nullable Boolean recurseMode) {
    this.recurseMode = recurseMode;
    return this;
  }

  /**
   * If mode is set, apply the permission recursively into the artifact if it is a folder
   * @return recurseMode
   */
  @javax.annotation.Nullable
  public Boolean getRecurseMode() {
    return recurseMode;
  }

  public void setRecurseMode(@javax.annotation.Nullable Boolean recurseMode) {
    this.recurseMode = recurseMode;
  }


  public IoArgoprojWorkflowV1alpha1Artifact s3(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1S3Artifact s3) {
    this.s3 = s3;
    return this;
  }

  /**
   * Get s3
   * @return s3
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1S3Artifact getS3() {
    return s3;
  }

  public void setS3(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1S3Artifact s3) {
    this.s3 = s3;
  }


  public IoArgoprojWorkflowV1alpha1Artifact subPath(@javax.annotation.Nullable String subPath) {
    this.subPath = subPath;
    return this;
  }

  /**
   * SubPath allows an artifact to be sourced from a subpath within the specified source
   * @return subPath
   */
  @javax.annotation.Nullable
  public String getSubPath() {
    return subPath;
  }

  public void setSubPath(@javax.annotation.Nullable String subPath) {
    this.subPath = subPath;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoArgoprojWorkflowV1alpha1Artifact ioArgoprojWorkflowV1alpha1Artifact = (IoArgoprojWorkflowV1alpha1Artifact) o;
    return Objects.equals(this.archive, ioArgoprojWorkflowV1alpha1Artifact.archive) &&
        Objects.equals(this.archiveLogs, ioArgoprojWorkflowV1alpha1Artifact.archiveLogs) &&
        Objects.equals(this.artifactGC, ioArgoprojWorkflowV1alpha1Artifact.artifactGC) &&
        Objects.equals(this.artifactory, ioArgoprojWorkflowV1alpha1Artifact.artifactory) &&
        Objects.equals(this.azure, ioArgoprojWorkflowV1alpha1Artifact.azure) &&
        Objects.equals(this.deleted, ioArgoprojWorkflowV1alpha1Artifact.deleted) &&
        Objects.equals(this.from, ioArgoprojWorkflowV1alpha1Artifact.from) &&
        Objects.equals(this.fromExpression, ioArgoprojWorkflowV1alpha1Artifact.fromExpression) &&
        Objects.equals(this.gcs, ioArgoprojWorkflowV1alpha1Artifact.gcs) &&
        Objects.equals(this.git, ioArgoprojWorkflowV1alpha1Artifact.git) &&
        Objects.equals(this.globalName, ioArgoprojWorkflowV1alpha1Artifact.globalName) &&
        Objects.equals(this.hdfs, ioArgoprojWorkflowV1alpha1Artifact.hdfs) &&
        Objects.equals(this.http, ioArgoprojWorkflowV1alpha1Artifact.http) &&
        Objects.equals(this.mode, ioArgoprojWorkflowV1alpha1Artifact.mode) &&
        Objects.equals(this.name, ioArgoprojWorkflowV1alpha1Artifact.name) &&
        Objects.equals(this.optional, ioArgoprojWorkflowV1alpha1Artifact.optional) &&
        Objects.equals(this.oss, ioArgoprojWorkflowV1alpha1Artifact.oss) &&
        Objects.equals(this.path, ioArgoprojWorkflowV1alpha1Artifact.path) &&
        Objects.equals(this.raw, ioArgoprojWorkflowV1alpha1Artifact.raw) &&
        Objects.equals(this.recurseMode, ioArgoprojWorkflowV1alpha1Artifact.recurseMode) &&
        Objects.equals(this.s3, ioArgoprojWorkflowV1alpha1Artifact.s3) &&
        Objects.equals(this.subPath, ioArgoprojWorkflowV1alpha1Artifact.subPath);
  }

  @Override
  public int hashCode() {
    return Objects.hash(archive, archiveLogs, artifactGC, artifactory, azure, deleted, from, fromExpression, gcs, git, globalName, hdfs, http, mode, name, optional, oss, path, raw, recurseMode, s3, subPath);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoArgoprojWorkflowV1alpha1Artifact {\n");
    sb.append("    archive: ").append(toIndentedString(archive)).append("\n");
    sb.append("    archiveLogs: ").append(toIndentedString(archiveLogs)).append("\n");
    sb.append("    artifactGC: ").append(toIndentedString(artifactGC)).append("\n");
    sb.append("    artifactory: ").append(toIndentedString(artifactory)).append("\n");
    sb.append("    azure: ").append(toIndentedString(azure)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    fromExpression: ").append(toIndentedString(fromExpression)).append("\n");
    sb.append("    gcs: ").append(toIndentedString(gcs)).append("\n");
    sb.append("    git: ").append(toIndentedString(git)).append("\n");
    sb.append("    globalName: ").append(toIndentedString(globalName)).append("\n");
    sb.append("    hdfs: ").append(toIndentedString(hdfs)).append("\n");
    sb.append("    http: ").append(toIndentedString(http)).append("\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    optional: ").append(toIndentedString(optional)).append("\n");
    sb.append("    oss: ").append(toIndentedString(oss)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    raw: ").append(toIndentedString(raw)).append("\n");
    sb.append("    recurseMode: ").append(toIndentedString(recurseMode)).append("\n");
    sb.append("    s3: ").append(toIndentedString(s3)).append("\n");
    sb.append("    subPath: ").append(toIndentedString(subPath)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("archive");
    openapiFields.add("archiveLogs");
    openapiFields.add("artifactGC");
    openapiFields.add("artifactory");
    openapiFields.add("azure");
    openapiFields.add("deleted");
    openapiFields.add("from");
    openapiFields.add("fromExpression");
    openapiFields.add("gcs");
    openapiFields.add("git");
    openapiFields.add("globalName");
    openapiFields.add("hdfs");
    openapiFields.add("http");
    openapiFields.add("mode");
    openapiFields.add("name");
    openapiFields.add("optional");
    openapiFields.add("oss");
    openapiFields.add("path");
    openapiFields.add("raw");
    openapiFields.add("recurseMode");
    openapiFields.add("s3");
    openapiFields.add("subPath");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("name");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IoArgoprojWorkflowV1alpha1Artifact
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IoArgoprojWorkflowV1alpha1Artifact.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IoArgoprojWorkflowV1alpha1Artifact is not found in the empty JSON string", IoArgoprojWorkflowV1alpha1Artifact.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IoArgoprojWorkflowV1alpha1Artifact.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IoArgoprojWorkflowV1alpha1Artifact` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : IoArgoprojWorkflowV1alpha1Artifact.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `archive`
      if (jsonObj.get("archive") != null && !jsonObj.get("archive").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1ArchiveStrategy.validateJsonElement(jsonObj.get("archive"));
      }
      // validate the optional field `artifactGC`
      if (jsonObj.get("artifactGC") != null && !jsonObj.get("artifactGC").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1ArtifactGC.validateJsonElement(jsonObj.get("artifactGC"));
      }
      // validate the optional field `artifactory`
      if (jsonObj.get("artifactory") != null && !jsonObj.get("artifactory").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1ArtifactoryArtifact.validateJsonElement(jsonObj.get("artifactory"));
      }
      // validate the optional field `azure`
      if (jsonObj.get("azure") != null && !jsonObj.get("azure").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1AzureArtifact.validateJsonElement(jsonObj.get("azure"));
      }
      if ((jsonObj.get("from") != null && !jsonObj.get("from").isJsonNull()) && !jsonObj.get("from").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `from` to be a primitive type in the JSON string but got `%s`", jsonObj.get("from").toString()));
      }
      if ((jsonObj.get("fromExpression") != null && !jsonObj.get("fromExpression").isJsonNull()) && !jsonObj.get("fromExpression").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fromExpression` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fromExpression").toString()));
      }
      // validate the optional field `gcs`
      if (jsonObj.get("gcs") != null && !jsonObj.get("gcs").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1GCSArtifact.validateJsonElement(jsonObj.get("gcs"));
      }
      // validate the optional field `git`
      if (jsonObj.get("git") != null && !jsonObj.get("git").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1GitArtifact.validateJsonElement(jsonObj.get("git"));
      }
      if ((jsonObj.get("globalName") != null && !jsonObj.get("globalName").isJsonNull()) && !jsonObj.get("globalName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `globalName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("globalName").toString()));
      }
      // validate the optional field `hdfs`
      if (jsonObj.get("hdfs") != null && !jsonObj.get("hdfs").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1HDFSArtifact.validateJsonElement(jsonObj.get("hdfs"));
      }
      // validate the optional field `http`
      if (jsonObj.get("http") != null && !jsonObj.get("http").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1HTTPArtifact.validateJsonElement(jsonObj.get("http"));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `oss`
      if (jsonObj.get("oss") != null && !jsonObj.get("oss").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1OSSArtifact.validateJsonElement(jsonObj.get("oss"));
      }
      if ((jsonObj.get("path") != null && !jsonObj.get("path").isJsonNull()) && !jsonObj.get("path").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `path` to be a primitive type in the JSON string but got `%s`", jsonObj.get("path").toString()));
      }
      // validate the optional field `raw`
      if (jsonObj.get("raw") != null && !jsonObj.get("raw").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1RawArtifact.validateJsonElement(jsonObj.get("raw"));
      }
      // validate the optional field `s3`
      if (jsonObj.get("s3") != null && !jsonObj.get("s3").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1S3Artifact.validateJsonElement(jsonObj.get("s3"));
      }
      if ((jsonObj.get("subPath") != null && !jsonObj.get("subPath").isJsonNull()) && !jsonObj.get("subPath").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subPath` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subPath").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IoArgoprojWorkflowV1alpha1Artifact.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IoArgoprojWorkflowV1alpha1Artifact' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IoArgoprojWorkflowV1alpha1Artifact> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IoArgoprojWorkflowV1alpha1Artifact.class));

       return (TypeAdapter<T>) new TypeAdapter<IoArgoprojWorkflowV1alpha1Artifact>() {
           @Override
           public void write(JsonWriter out, IoArgoprojWorkflowV1alpha1Artifact value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IoArgoprojWorkflowV1alpha1Artifact read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IoArgoprojWorkflowV1alpha1Artifact given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IoArgoprojWorkflowV1alpha1Artifact
   * @throws IOException if the JSON string is invalid with respect to IoArgoprojWorkflowV1alpha1Artifact
   */
  public static IoArgoprojWorkflowV1alpha1Artifact fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IoArgoprojWorkflowV1alpha1Artifact.class);
  }

  /**
   * Convert an instance of IoArgoprojWorkflowV1alpha1Artifact to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

