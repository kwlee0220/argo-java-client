/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1ManifestFrom;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ResourceTemplate is a template subtype to manipulate kubernetes resources
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-24T03:51:41.763920791Z[Etc/UTC]", comments = "Generator version: 7.12.0-SNAPSHOT")
public class IoArgoprojWorkflowV1alpha1ResourceTemplate {
  public static final String SERIALIZED_NAME_ACTION = "action";
  @SerializedName(SERIALIZED_NAME_ACTION)
  @javax.annotation.Nonnull
  private String action;

  public static final String SERIALIZED_NAME_FAILURE_CONDITION = "failureCondition";
  @SerializedName(SERIALIZED_NAME_FAILURE_CONDITION)
  @javax.annotation.Nullable
  private String failureCondition;

  public static final String SERIALIZED_NAME_FLAGS = "flags";
  @SerializedName(SERIALIZED_NAME_FLAGS)
  @javax.annotation.Nullable
  private List<String> flags = new ArrayList<>();

  public static final String SERIALIZED_NAME_MANIFEST = "manifest";
  @SerializedName(SERIALIZED_NAME_MANIFEST)
  @javax.annotation.Nullable
  private String manifest;

  public static final String SERIALIZED_NAME_MANIFEST_FROM = "manifestFrom";
  @SerializedName(SERIALIZED_NAME_MANIFEST_FROM)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1ManifestFrom manifestFrom;

  public static final String SERIALIZED_NAME_MERGE_STRATEGY = "mergeStrategy";
  @SerializedName(SERIALIZED_NAME_MERGE_STRATEGY)
  @javax.annotation.Nullable
  private String mergeStrategy;

  public static final String SERIALIZED_NAME_SET_OWNER_REFERENCE = "setOwnerReference";
  @SerializedName(SERIALIZED_NAME_SET_OWNER_REFERENCE)
  @javax.annotation.Nullable
  private Boolean setOwnerReference;

  public static final String SERIALIZED_NAME_SUCCESS_CONDITION = "successCondition";
  @SerializedName(SERIALIZED_NAME_SUCCESS_CONDITION)
  @javax.annotation.Nullable
  private String successCondition;

  public IoArgoprojWorkflowV1alpha1ResourceTemplate() {
  }

  public IoArgoprojWorkflowV1alpha1ResourceTemplate action(@javax.annotation.Nonnull String action) {
    this.action = action;
    return this;
  }

  /**
   * Action is the action to perform to the resource. Must be one of: get, create, apply, delete, replace, patch
   * @return action
   */
  @javax.annotation.Nonnull
  public String getAction() {
    return action;
  }

  public void setAction(@javax.annotation.Nonnull String action) {
    this.action = action;
  }


  public IoArgoprojWorkflowV1alpha1ResourceTemplate failureCondition(@javax.annotation.Nullable String failureCondition) {
    this.failureCondition = failureCondition;
    return this;
  }

  /**
   * FailureCondition is a label selector expression which describes the conditions of the k8s resource in which the step was considered failed
   * @return failureCondition
   */
  @javax.annotation.Nullable
  public String getFailureCondition() {
    return failureCondition;
  }

  public void setFailureCondition(@javax.annotation.Nullable String failureCondition) {
    this.failureCondition = failureCondition;
  }


  public IoArgoprojWorkflowV1alpha1ResourceTemplate flags(@javax.annotation.Nullable List<String> flags) {
    this.flags = flags;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1ResourceTemplate addFlagsItem(String flagsItem) {
    if (this.flags == null) {
      this.flags = new ArrayList<>();
    }
    this.flags.add(flagsItem);
    return this;
  }

  /**
   * Flags is a set of additional options passed to kubectl before submitting a resource I.e. to disable resource validation: flags: [  \&quot;--validate&#x3D;false\&quot;  # disable resource validation ]
   * @return flags
   */
  @javax.annotation.Nullable
  public List<String> getFlags() {
    return flags;
  }

  public void setFlags(@javax.annotation.Nullable List<String> flags) {
    this.flags = flags;
  }


  public IoArgoprojWorkflowV1alpha1ResourceTemplate manifest(@javax.annotation.Nullable String manifest) {
    this.manifest = manifest;
    return this;
  }

  /**
   * Manifest contains the kubernetes manifest
   * @return manifest
   */
  @javax.annotation.Nullable
  public String getManifest() {
    return manifest;
  }

  public void setManifest(@javax.annotation.Nullable String manifest) {
    this.manifest = manifest;
  }


  public IoArgoprojWorkflowV1alpha1ResourceTemplate manifestFrom(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1ManifestFrom manifestFrom) {
    this.manifestFrom = manifestFrom;
    return this;
  }

  /**
   * Get manifestFrom
   * @return manifestFrom
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1ManifestFrom getManifestFrom() {
    return manifestFrom;
  }

  public void setManifestFrom(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1ManifestFrom manifestFrom) {
    this.manifestFrom = manifestFrom;
  }


  public IoArgoprojWorkflowV1alpha1ResourceTemplate mergeStrategy(@javax.annotation.Nullable String mergeStrategy) {
    this.mergeStrategy = mergeStrategy;
    return this;
  }

  /**
   * MergeStrategy is the strategy used to merge a patch. It defaults to \&quot;strategic\&quot; Must be one of: strategic, merge, json
   * @return mergeStrategy
   */
  @javax.annotation.Nullable
  public String getMergeStrategy() {
    return mergeStrategy;
  }

  public void setMergeStrategy(@javax.annotation.Nullable String mergeStrategy) {
    this.mergeStrategy = mergeStrategy;
  }


  public IoArgoprojWorkflowV1alpha1ResourceTemplate setOwnerReference(@javax.annotation.Nullable Boolean setOwnerReference) {
    this.setOwnerReference = setOwnerReference;
    return this;
  }

  /**
   * SetOwnerReference sets the reference to the workflow on the OwnerReference of generated resource.
   * @return setOwnerReference
   */
  @javax.annotation.Nullable
  public Boolean getSetOwnerReference() {
    return setOwnerReference;
  }

  public void setSetOwnerReference(@javax.annotation.Nullable Boolean setOwnerReference) {
    this.setOwnerReference = setOwnerReference;
  }


  public IoArgoprojWorkflowV1alpha1ResourceTemplate successCondition(@javax.annotation.Nullable String successCondition) {
    this.successCondition = successCondition;
    return this;
  }

  /**
   * SuccessCondition is a label selector expression which describes the conditions of the k8s resource in which it is acceptable to proceed to the following step
   * @return successCondition
   */
  @javax.annotation.Nullable
  public String getSuccessCondition() {
    return successCondition;
  }

  public void setSuccessCondition(@javax.annotation.Nullable String successCondition) {
    this.successCondition = successCondition;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoArgoprojWorkflowV1alpha1ResourceTemplate ioArgoprojWorkflowV1alpha1ResourceTemplate = (IoArgoprojWorkflowV1alpha1ResourceTemplate) o;
    return Objects.equals(this.action, ioArgoprojWorkflowV1alpha1ResourceTemplate.action) &&
        Objects.equals(this.failureCondition, ioArgoprojWorkflowV1alpha1ResourceTemplate.failureCondition) &&
        Objects.equals(this.flags, ioArgoprojWorkflowV1alpha1ResourceTemplate.flags) &&
        Objects.equals(this.manifest, ioArgoprojWorkflowV1alpha1ResourceTemplate.manifest) &&
        Objects.equals(this.manifestFrom, ioArgoprojWorkflowV1alpha1ResourceTemplate.manifestFrom) &&
        Objects.equals(this.mergeStrategy, ioArgoprojWorkflowV1alpha1ResourceTemplate.mergeStrategy) &&
        Objects.equals(this.setOwnerReference, ioArgoprojWorkflowV1alpha1ResourceTemplate.setOwnerReference) &&
        Objects.equals(this.successCondition, ioArgoprojWorkflowV1alpha1ResourceTemplate.successCondition);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, failureCondition, flags, manifest, manifestFrom, mergeStrategy, setOwnerReference, successCondition);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoArgoprojWorkflowV1alpha1ResourceTemplate {\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    failureCondition: ").append(toIndentedString(failureCondition)).append("\n");
    sb.append("    flags: ").append(toIndentedString(flags)).append("\n");
    sb.append("    manifest: ").append(toIndentedString(manifest)).append("\n");
    sb.append("    manifestFrom: ").append(toIndentedString(manifestFrom)).append("\n");
    sb.append("    mergeStrategy: ").append(toIndentedString(mergeStrategy)).append("\n");
    sb.append("    setOwnerReference: ").append(toIndentedString(setOwnerReference)).append("\n");
    sb.append("    successCondition: ").append(toIndentedString(successCondition)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("action");
    openapiFields.add("failureCondition");
    openapiFields.add("flags");
    openapiFields.add("manifest");
    openapiFields.add("manifestFrom");
    openapiFields.add("mergeStrategy");
    openapiFields.add("setOwnerReference");
    openapiFields.add("successCondition");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("action");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IoArgoprojWorkflowV1alpha1ResourceTemplate
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IoArgoprojWorkflowV1alpha1ResourceTemplate.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IoArgoprojWorkflowV1alpha1ResourceTemplate is not found in the empty JSON string", IoArgoprojWorkflowV1alpha1ResourceTemplate.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IoArgoprojWorkflowV1alpha1ResourceTemplate.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IoArgoprojWorkflowV1alpha1ResourceTemplate` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : IoArgoprojWorkflowV1alpha1ResourceTemplate.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("action").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `action` to be a primitive type in the JSON string but got `%s`", jsonObj.get("action").toString()));
      }
      if ((jsonObj.get("failureCondition") != null && !jsonObj.get("failureCondition").isJsonNull()) && !jsonObj.get("failureCondition").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `failureCondition` to be a primitive type in the JSON string but got `%s`", jsonObj.get("failureCondition").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("flags") != null && !jsonObj.get("flags").isJsonNull() && !jsonObj.get("flags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `flags` to be an array in the JSON string but got `%s`", jsonObj.get("flags").toString()));
      }
      if ((jsonObj.get("manifest") != null && !jsonObj.get("manifest").isJsonNull()) && !jsonObj.get("manifest").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `manifest` to be a primitive type in the JSON string but got `%s`", jsonObj.get("manifest").toString()));
      }
      // validate the optional field `manifestFrom`
      if (jsonObj.get("manifestFrom") != null && !jsonObj.get("manifestFrom").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1ManifestFrom.validateJsonElement(jsonObj.get("manifestFrom"));
      }
      if ((jsonObj.get("mergeStrategy") != null && !jsonObj.get("mergeStrategy").isJsonNull()) && !jsonObj.get("mergeStrategy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mergeStrategy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mergeStrategy").toString()));
      }
      if ((jsonObj.get("successCondition") != null && !jsonObj.get("successCondition").isJsonNull()) && !jsonObj.get("successCondition").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `successCondition` to be a primitive type in the JSON string but got `%s`", jsonObj.get("successCondition").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IoArgoprojWorkflowV1alpha1ResourceTemplate.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IoArgoprojWorkflowV1alpha1ResourceTemplate' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IoArgoprojWorkflowV1alpha1ResourceTemplate> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IoArgoprojWorkflowV1alpha1ResourceTemplate.class));

       return (TypeAdapter<T>) new TypeAdapter<IoArgoprojWorkflowV1alpha1ResourceTemplate>() {
           @Override
           public void write(JsonWriter out, IoArgoprojWorkflowV1alpha1ResourceTemplate value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IoArgoprojWorkflowV1alpha1ResourceTemplate read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IoArgoprojWorkflowV1alpha1ResourceTemplate given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IoArgoprojWorkflowV1alpha1ResourceTemplate
   * @throws IOException if the JSON string is invalid with respect to IoArgoprojWorkflowV1alpha1ResourceTemplate
   */
  public static IoArgoprojWorkflowV1alpha1ResourceTemplate fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IoArgoprojWorkflowV1alpha1ResourceTemplate.class);
  }

  /**
   * Convert an instance of IoArgoprojWorkflowV1alpha1ResourceTemplate to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

