/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1ArtGCStatus;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1Condition;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1NodeStatus;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1Outputs;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1SynchronizationStatus;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1Template;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1WorkflowSpec;
import org.openapitools.client.model.IoK8sApiCoreV1Volume;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * WorkflowStatus contains overall status information about a workflow
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-24T03:51:41.763920791Z[Etc/UTC]", comments = "Generator version: 7.12.0-SNAPSHOT")
public class IoArgoprojWorkflowV1alpha1WorkflowStatus {
  public static final String SERIALIZED_NAME_ARTIFACT_G_C_STATUS = "artifactGCStatus";
  @SerializedName(SERIALIZED_NAME_ARTIFACT_G_C_STATUS)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1ArtGCStatus artifactGCStatus;

  public static final String SERIALIZED_NAME_ARTIFACT_REPOSITORY_REF = "artifactRepositoryRef";
  @SerializedName(SERIALIZED_NAME_ARTIFACT_REPOSITORY_REF)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus artifactRepositoryRef;

  public static final String SERIALIZED_NAME_COMPRESSED_NODES = "compressedNodes";
  @SerializedName(SERIALIZED_NAME_COMPRESSED_NODES)
  @javax.annotation.Nullable
  private String compressedNodes;

  public static final String SERIALIZED_NAME_CONDITIONS = "conditions";
  @SerializedName(SERIALIZED_NAME_CONDITIONS)
  @javax.annotation.Nullable
  private List<IoArgoprojWorkflowV1alpha1Condition> conditions = new ArrayList<>();

  public static final String SERIALIZED_NAME_ESTIMATED_DURATION = "estimatedDuration";
  @SerializedName(SERIALIZED_NAME_ESTIMATED_DURATION)
  @javax.annotation.Nullable
  private Integer estimatedDuration;

  public static final String SERIALIZED_NAME_FINISHED_AT = "finishedAt";
  @SerializedName(SERIALIZED_NAME_FINISHED_AT)
  @javax.annotation.Nullable
  private OffsetDateTime finishedAt;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  @javax.annotation.Nullable
  private String message;

  public static final String SERIALIZED_NAME_NODES = "nodes";
  @SerializedName(SERIALIZED_NAME_NODES)
  @javax.annotation.Nullable
  private Map<String, IoArgoprojWorkflowV1alpha1NodeStatus> nodes = new HashMap<>();

  public static final String SERIALIZED_NAME_OFFLOAD_NODE_STATUS_VERSION = "offloadNodeStatusVersion";
  @SerializedName(SERIALIZED_NAME_OFFLOAD_NODE_STATUS_VERSION)
  @javax.annotation.Nullable
  private String offloadNodeStatusVersion;

  public static final String SERIALIZED_NAME_OUTPUTS = "outputs";
  @SerializedName(SERIALIZED_NAME_OUTPUTS)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1Outputs outputs;

  public static final String SERIALIZED_NAME_PERSISTENT_VOLUME_CLAIMS = "persistentVolumeClaims";
  @SerializedName(SERIALIZED_NAME_PERSISTENT_VOLUME_CLAIMS)
  @javax.annotation.Nullable
  private List<IoK8sApiCoreV1Volume> persistentVolumeClaims = new ArrayList<>();

  public static final String SERIALIZED_NAME_PHASE = "phase";
  @SerializedName(SERIALIZED_NAME_PHASE)
  @javax.annotation.Nullable
  private String phase;

  public static final String SERIALIZED_NAME_PROGRESS = "progress";
  @SerializedName(SERIALIZED_NAME_PROGRESS)
  @javax.annotation.Nullable
  private String progress;

  public static final String SERIALIZED_NAME_RESOURCES_DURATION = "resourcesDuration";
  @SerializedName(SERIALIZED_NAME_RESOURCES_DURATION)
  @javax.annotation.Nullable
  private Map<String, Long> resourcesDuration = new HashMap<>();

  public static final String SERIALIZED_NAME_STARTED_AT = "startedAt";
  @SerializedName(SERIALIZED_NAME_STARTED_AT)
  @javax.annotation.Nullable
  private OffsetDateTime startedAt;

  public static final String SERIALIZED_NAME_STORED_TEMPLATES = "storedTemplates";
  @SerializedName(SERIALIZED_NAME_STORED_TEMPLATES)
  @javax.annotation.Nullable
  private Map<String, IoArgoprojWorkflowV1alpha1Template> storedTemplates = new HashMap<>();

  public static final String SERIALIZED_NAME_STORED_WORKFLOW_TEMPLATE_SPEC = "storedWorkflowTemplateSpec";
  @SerializedName(SERIALIZED_NAME_STORED_WORKFLOW_TEMPLATE_SPEC)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1WorkflowSpec storedWorkflowTemplateSpec;

  public static final String SERIALIZED_NAME_SYNCHRONIZATION = "synchronization";
  @SerializedName(SERIALIZED_NAME_SYNCHRONIZATION)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1SynchronizationStatus synchronization;

  public static final String SERIALIZED_NAME_TASK_RESULTS_COMPLETION_STATUS = "taskResultsCompletionStatus";
  @SerializedName(SERIALIZED_NAME_TASK_RESULTS_COMPLETION_STATUS)
  @javax.annotation.Nullable
  private Map<String, Boolean> taskResultsCompletionStatus = new HashMap<>();

  public IoArgoprojWorkflowV1alpha1WorkflowStatus() {
  }

  public IoArgoprojWorkflowV1alpha1WorkflowStatus artifactGCStatus(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1ArtGCStatus artifactGCStatus) {
    this.artifactGCStatus = artifactGCStatus;
    return this;
  }

  /**
   * Get artifactGCStatus
   * @return artifactGCStatus
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1ArtGCStatus getArtifactGCStatus() {
    return artifactGCStatus;
  }

  public void setArtifactGCStatus(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1ArtGCStatus artifactGCStatus) {
    this.artifactGCStatus = artifactGCStatus;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowStatus artifactRepositoryRef(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus artifactRepositoryRef) {
    this.artifactRepositoryRef = artifactRepositoryRef;
    return this;
  }

  /**
   * Get artifactRepositoryRef
   * @return artifactRepositoryRef
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus getArtifactRepositoryRef() {
    return artifactRepositoryRef;
  }

  public void setArtifactRepositoryRef(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus artifactRepositoryRef) {
    this.artifactRepositoryRef = artifactRepositoryRef;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowStatus compressedNodes(@javax.annotation.Nullable String compressedNodes) {
    this.compressedNodes = compressedNodes;
    return this;
  }

  /**
   * Compressed and base64 decoded Nodes map
   * @return compressedNodes
   */
  @javax.annotation.Nullable
  public String getCompressedNodes() {
    return compressedNodes;
  }

  public void setCompressedNodes(@javax.annotation.Nullable String compressedNodes) {
    this.compressedNodes = compressedNodes;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowStatus conditions(@javax.annotation.Nullable List<IoArgoprojWorkflowV1alpha1Condition> conditions) {
    this.conditions = conditions;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1WorkflowStatus addConditionsItem(IoArgoprojWorkflowV1alpha1Condition conditionsItem) {
    if (this.conditions == null) {
      this.conditions = new ArrayList<>();
    }
    this.conditions.add(conditionsItem);
    return this;
  }

  /**
   * Conditions is a list of conditions the Workflow may have
   * @return conditions
   */
  @javax.annotation.Nullable
  public List<IoArgoprojWorkflowV1alpha1Condition> getConditions() {
    return conditions;
  }

  public void setConditions(@javax.annotation.Nullable List<IoArgoprojWorkflowV1alpha1Condition> conditions) {
    this.conditions = conditions;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowStatus estimatedDuration(@javax.annotation.Nullable Integer estimatedDuration) {
    this.estimatedDuration = estimatedDuration;
    return this;
  }

  /**
   * EstimatedDuration in seconds.
   * @return estimatedDuration
   */
  @javax.annotation.Nullable
  public Integer getEstimatedDuration() {
    return estimatedDuration;
  }

  public void setEstimatedDuration(@javax.annotation.Nullable Integer estimatedDuration) {
    this.estimatedDuration = estimatedDuration;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowStatus finishedAt(@javax.annotation.Nullable OffsetDateTime finishedAt) {
    this.finishedAt = finishedAt;
    return this;
  }

  /**
   * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
   * @return finishedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getFinishedAt() {
    return finishedAt;
  }

  public void setFinishedAt(@javax.annotation.Nullable OffsetDateTime finishedAt) {
    this.finishedAt = finishedAt;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowStatus message(@javax.annotation.Nullable String message) {
    this.message = message;
    return this;
  }

  /**
   * A human readable message indicating details about why the workflow is in this condition.
   * @return message
   */
  @javax.annotation.Nullable
  public String getMessage() {
    return message;
  }

  public void setMessage(@javax.annotation.Nullable String message) {
    this.message = message;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowStatus nodes(@javax.annotation.Nullable Map<String, IoArgoprojWorkflowV1alpha1NodeStatus> nodes) {
    this.nodes = nodes;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1WorkflowStatus putNodesItem(String key, IoArgoprojWorkflowV1alpha1NodeStatus nodesItem) {
    if (this.nodes == null) {
      this.nodes = new HashMap<>();
    }
    this.nodes.put(key, nodesItem);
    return this;
  }

  /**
   * Nodes is a mapping between a node ID and the node&#39;s status.
   * @return nodes
   */
  @javax.annotation.Nullable
  public Map<String, IoArgoprojWorkflowV1alpha1NodeStatus> getNodes() {
    return nodes;
  }

  public void setNodes(@javax.annotation.Nullable Map<String, IoArgoprojWorkflowV1alpha1NodeStatus> nodes) {
    this.nodes = nodes;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowStatus offloadNodeStatusVersion(@javax.annotation.Nullable String offloadNodeStatusVersion) {
    this.offloadNodeStatusVersion = offloadNodeStatusVersion;
    return this;
  }

  /**
   * Whether on not node status has been offloaded to a database. If exists, then Nodes and CompressedNodes will be empty. This will actually be populated with a hash of the offloaded data.
   * @return offloadNodeStatusVersion
   */
  @javax.annotation.Nullable
  public String getOffloadNodeStatusVersion() {
    return offloadNodeStatusVersion;
  }

  public void setOffloadNodeStatusVersion(@javax.annotation.Nullable String offloadNodeStatusVersion) {
    this.offloadNodeStatusVersion = offloadNodeStatusVersion;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowStatus outputs(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1Outputs outputs) {
    this.outputs = outputs;
    return this;
  }

  /**
   * Get outputs
   * @return outputs
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1Outputs getOutputs() {
    return outputs;
  }

  public void setOutputs(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1Outputs outputs) {
    this.outputs = outputs;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowStatus persistentVolumeClaims(@javax.annotation.Nullable List<IoK8sApiCoreV1Volume> persistentVolumeClaims) {
    this.persistentVolumeClaims = persistentVolumeClaims;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1WorkflowStatus addPersistentVolumeClaimsItem(IoK8sApiCoreV1Volume persistentVolumeClaimsItem) {
    if (this.persistentVolumeClaims == null) {
      this.persistentVolumeClaims = new ArrayList<>();
    }
    this.persistentVolumeClaims.add(persistentVolumeClaimsItem);
    return this;
  }

  /**
   * PersistentVolumeClaims tracks all PVCs that were created as part of the io.argoproj.workflow.v1alpha1. The contents of this list are drained at the end of the workflow.
   * @return persistentVolumeClaims
   */
  @javax.annotation.Nullable
  public List<IoK8sApiCoreV1Volume> getPersistentVolumeClaims() {
    return persistentVolumeClaims;
  }

  public void setPersistentVolumeClaims(@javax.annotation.Nullable List<IoK8sApiCoreV1Volume> persistentVolumeClaims) {
    this.persistentVolumeClaims = persistentVolumeClaims;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowStatus phase(@javax.annotation.Nullable String phase) {
    this.phase = phase;
    return this;
  }

  /**
   * Phase a simple, high-level summary of where the workflow is in its lifecycle. Will be \&quot;\&quot; (Unknown), \&quot;Pending\&quot;, or \&quot;Running\&quot; before the workflow is completed, and \&quot;Succeeded\&quot;, \&quot;Failed\&quot; or \&quot;Error\&quot; once the workflow has completed.
   * @return phase
   */
  @javax.annotation.Nullable
  public String getPhase() {
    return phase;
  }

  public void setPhase(@javax.annotation.Nullable String phase) {
    this.phase = phase;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowStatus progress(@javax.annotation.Nullable String progress) {
    this.progress = progress;
    return this;
  }

  /**
   * Progress to completion
   * @return progress
   */
  @javax.annotation.Nullable
  public String getProgress() {
    return progress;
  }

  public void setProgress(@javax.annotation.Nullable String progress) {
    this.progress = progress;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowStatus resourcesDuration(@javax.annotation.Nullable Map<String, Long> resourcesDuration) {
    this.resourcesDuration = resourcesDuration;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1WorkflowStatus putResourcesDurationItem(String key, Long resourcesDurationItem) {
    if (this.resourcesDuration == null) {
      this.resourcesDuration = new HashMap<>();
    }
    this.resourcesDuration.put(key, resourcesDurationItem);
    return this;
  }

  /**
   * ResourcesDuration is the total for the workflow
   * @return resourcesDuration
   */
  @javax.annotation.Nullable
  public Map<String, Long> getResourcesDuration() {
    return resourcesDuration;
  }

  public void setResourcesDuration(@javax.annotation.Nullable Map<String, Long> resourcesDuration) {
    this.resourcesDuration = resourcesDuration;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowStatus startedAt(@javax.annotation.Nullable OffsetDateTime startedAt) {
    this.startedAt = startedAt;
    return this;
  }

  /**
   * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
   * @return startedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartedAt() {
    return startedAt;
  }

  public void setStartedAt(@javax.annotation.Nullable OffsetDateTime startedAt) {
    this.startedAt = startedAt;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowStatus storedTemplates(@javax.annotation.Nullable Map<String, IoArgoprojWorkflowV1alpha1Template> storedTemplates) {
    this.storedTemplates = storedTemplates;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1WorkflowStatus putStoredTemplatesItem(String key, IoArgoprojWorkflowV1alpha1Template storedTemplatesItem) {
    if (this.storedTemplates == null) {
      this.storedTemplates = new HashMap<>();
    }
    this.storedTemplates.put(key, storedTemplatesItem);
    return this;
  }

  /**
   * StoredTemplates is a mapping between a template ref and the node&#39;s status.
   * @return storedTemplates
   */
  @javax.annotation.Nullable
  public Map<String, IoArgoprojWorkflowV1alpha1Template> getStoredTemplates() {
    return storedTemplates;
  }

  public void setStoredTemplates(@javax.annotation.Nullable Map<String, IoArgoprojWorkflowV1alpha1Template> storedTemplates) {
    this.storedTemplates = storedTemplates;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowStatus storedWorkflowTemplateSpec(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1WorkflowSpec storedWorkflowTemplateSpec) {
    this.storedWorkflowTemplateSpec = storedWorkflowTemplateSpec;
    return this;
  }

  /**
   * Get storedWorkflowTemplateSpec
   * @return storedWorkflowTemplateSpec
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1WorkflowSpec getStoredWorkflowTemplateSpec() {
    return storedWorkflowTemplateSpec;
  }

  public void setStoredWorkflowTemplateSpec(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1WorkflowSpec storedWorkflowTemplateSpec) {
    this.storedWorkflowTemplateSpec = storedWorkflowTemplateSpec;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowStatus synchronization(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1SynchronizationStatus synchronization) {
    this.synchronization = synchronization;
    return this;
  }

  /**
   * Get synchronization
   * @return synchronization
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1SynchronizationStatus getSynchronization() {
    return synchronization;
  }

  public void setSynchronization(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1SynchronizationStatus synchronization) {
    this.synchronization = synchronization;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowStatus taskResultsCompletionStatus(@javax.annotation.Nullable Map<String, Boolean> taskResultsCompletionStatus) {
    this.taskResultsCompletionStatus = taskResultsCompletionStatus;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1WorkflowStatus putTaskResultsCompletionStatusItem(String key, Boolean taskResultsCompletionStatusItem) {
    if (this.taskResultsCompletionStatus == null) {
      this.taskResultsCompletionStatus = new HashMap<>();
    }
    this.taskResultsCompletionStatus.put(key, taskResultsCompletionStatusItem);
    return this;
  }

  /**
   * TaskResultsCompletionStatus tracks task result completion status (mapped by node ID). Used to prevent premature archiving and garbage collection.
   * @return taskResultsCompletionStatus
   */
  @javax.annotation.Nullable
  public Map<String, Boolean> getTaskResultsCompletionStatus() {
    return taskResultsCompletionStatus;
  }

  public void setTaskResultsCompletionStatus(@javax.annotation.Nullable Map<String, Boolean> taskResultsCompletionStatus) {
    this.taskResultsCompletionStatus = taskResultsCompletionStatus;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoArgoprojWorkflowV1alpha1WorkflowStatus ioArgoprojWorkflowV1alpha1WorkflowStatus = (IoArgoprojWorkflowV1alpha1WorkflowStatus) o;
    return Objects.equals(this.artifactGCStatus, ioArgoprojWorkflowV1alpha1WorkflowStatus.artifactGCStatus) &&
        Objects.equals(this.artifactRepositoryRef, ioArgoprojWorkflowV1alpha1WorkflowStatus.artifactRepositoryRef) &&
        Objects.equals(this.compressedNodes, ioArgoprojWorkflowV1alpha1WorkflowStatus.compressedNodes) &&
        Objects.equals(this.conditions, ioArgoprojWorkflowV1alpha1WorkflowStatus.conditions) &&
        Objects.equals(this.estimatedDuration, ioArgoprojWorkflowV1alpha1WorkflowStatus.estimatedDuration) &&
        Objects.equals(this.finishedAt, ioArgoprojWorkflowV1alpha1WorkflowStatus.finishedAt) &&
        Objects.equals(this.message, ioArgoprojWorkflowV1alpha1WorkflowStatus.message) &&
        Objects.equals(this.nodes, ioArgoprojWorkflowV1alpha1WorkflowStatus.nodes) &&
        Objects.equals(this.offloadNodeStatusVersion, ioArgoprojWorkflowV1alpha1WorkflowStatus.offloadNodeStatusVersion) &&
        Objects.equals(this.outputs, ioArgoprojWorkflowV1alpha1WorkflowStatus.outputs) &&
        Objects.equals(this.persistentVolumeClaims, ioArgoprojWorkflowV1alpha1WorkflowStatus.persistentVolumeClaims) &&
        Objects.equals(this.phase, ioArgoprojWorkflowV1alpha1WorkflowStatus.phase) &&
        Objects.equals(this.progress, ioArgoprojWorkflowV1alpha1WorkflowStatus.progress) &&
        Objects.equals(this.resourcesDuration, ioArgoprojWorkflowV1alpha1WorkflowStatus.resourcesDuration) &&
        Objects.equals(this.startedAt, ioArgoprojWorkflowV1alpha1WorkflowStatus.startedAt) &&
        Objects.equals(this.storedTemplates, ioArgoprojWorkflowV1alpha1WorkflowStatus.storedTemplates) &&
        Objects.equals(this.storedWorkflowTemplateSpec, ioArgoprojWorkflowV1alpha1WorkflowStatus.storedWorkflowTemplateSpec) &&
        Objects.equals(this.synchronization, ioArgoprojWorkflowV1alpha1WorkflowStatus.synchronization) &&
        Objects.equals(this.taskResultsCompletionStatus, ioArgoprojWorkflowV1alpha1WorkflowStatus.taskResultsCompletionStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(artifactGCStatus, artifactRepositoryRef, compressedNodes, conditions, estimatedDuration, finishedAt, message, nodes, offloadNodeStatusVersion, outputs, persistentVolumeClaims, phase, progress, resourcesDuration, startedAt, storedTemplates, storedWorkflowTemplateSpec, synchronization, taskResultsCompletionStatus);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoArgoprojWorkflowV1alpha1WorkflowStatus {\n");
    sb.append("    artifactGCStatus: ").append(toIndentedString(artifactGCStatus)).append("\n");
    sb.append("    artifactRepositoryRef: ").append(toIndentedString(artifactRepositoryRef)).append("\n");
    sb.append("    compressedNodes: ").append(toIndentedString(compressedNodes)).append("\n");
    sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
    sb.append("    estimatedDuration: ").append(toIndentedString(estimatedDuration)).append("\n");
    sb.append("    finishedAt: ").append(toIndentedString(finishedAt)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    nodes: ").append(toIndentedString(nodes)).append("\n");
    sb.append("    offloadNodeStatusVersion: ").append(toIndentedString(offloadNodeStatusVersion)).append("\n");
    sb.append("    outputs: ").append(toIndentedString(outputs)).append("\n");
    sb.append("    persistentVolumeClaims: ").append(toIndentedString(persistentVolumeClaims)).append("\n");
    sb.append("    phase: ").append(toIndentedString(phase)).append("\n");
    sb.append("    progress: ").append(toIndentedString(progress)).append("\n");
    sb.append("    resourcesDuration: ").append(toIndentedString(resourcesDuration)).append("\n");
    sb.append("    startedAt: ").append(toIndentedString(startedAt)).append("\n");
    sb.append("    storedTemplates: ").append(toIndentedString(storedTemplates)).append("\n");
    sb.append("    storedWorkflowTemplateSpec: ").append(toIndentedString(storedWorkflowTemplateSpec)).append("\n");
    sb.append("    synchronization: ").append(toIndentedString(synchronization)).append("\n");
    sb.append("    taskResultsCompletionStatus: ").append(toIndentedString(taskResultsCompletionStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("artifactGCStatus");
    openapiFields.add("artifactRepositoryRef");
    openapiFields.add("compressedNodes");
    openapiFields.add("conditions");
    openapiFields.add("estimatedDuration");
    openapiFields.add("finishedAt");
    openapiFields.add("message");
    openapiFields.add("nodes");
    openapiFields.add("offloadNodeStatusVersion");
    openapiFields.add("outputs");
    openapiFields.add("persistentVolumeClaims");
    openapiFields.add("phase");
    openapiFields.add("progress");
    openapiFields.add("resourcesDuration");
    openapiFields.add("startedAt");
    openapiFields.add("storedTemplates");
    openapiFields.add("storedWorkflowTemplateSpec");
    openapiFields.add("synchronization");
    openapiFields.add("taskResultsCompletionStatus");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IoArgoprojWorkflowV1alpha1WorkflowStatus
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IoArgoprojWorkflowV1alpha1WorkflowStatus.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IoArgoprojWorkflowV1alpha1WorkflowStatus is not found in the empty JSON string", IoArgoprojWorkflowV1alpha1WorkflowStatus.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IoArgoprojWorkflowV1alpha1WorkflowStatus.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IoArgoprojWorkflowV1alpha1WorkflowStatus` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `artifactGCStatus`
      if (jsonObj.get("artifactGCStatus") != null && !jsonObj.get("artifactGCStatus").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1ArtGCStatus.validateJsonElement(jsonObj.get("artifactGCStatus"));
      }
      // validate the optional field `artifactRepositoryRef`
      if (jsonObj.get("artifactRepositoryRef") != null && !jsonObj.get("artifactRepositoryRef").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus.validateJsonElement(jsonObj.get("artifactRepositoryRef"));
      }
      if ((jsonObj.get("compressedNodes") != null && !jsonObj.get("compressedNodes").isJsonNull()) && !jsonObj.get("compressedNodes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `compressedNodes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("compressedNodes").toString()));
      }
      if (jsonObj.get("conditions") != null && !jsonObj.get("conditions").isJsonNull()) {
        JsonArray jsonArrayconditions = jsonObj.getAsJsonArray("conditions");
        if (jsonArrayconditions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("conditions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `conditions` to be an array in the JSON string but got `%s`", jsonObj.get("conditions").toString()));
          }

          // validate the optional field `conditions` (array)
          for (int i = 0; i < jsonArrayconditions.size(); i++) {
            IoArgoprojWorkflowV1alpha1Condition.validateJsonElement(jsonArrayconditions.get(i));
          };
        }
      }
      if ((jsonObj.get("message") != null && !jsonObj.get("message").isJsonNull()) && !jsonObj.get("message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("message").toString()));
      }
      if ((jsonObj.get("offloadNodeStatusVersion") != null && !jsonObj.get("offloadNodeStatusVersion").isJsonNull()) && !jsonObj.get("offloadNodeStatusVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `offloadNodeStatusVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("offloadNodeStatusVersion").toString()));
      }
      // validate the optional field `outputs`
      if (jsonObj.get("outputs") != null && !jsonObj.get("outputs").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1Outputs.validateJsonElement(jsonObj.get("outputs"));
      }
      if (jsonObj.get("persistentVolumeClaims") != null && !jsonObj.get("persistentVolumeClaims").isJsonNull()) {
        JsonArray jsonArraypersistentVolumeClaims = jsonObj.getAsJsonArray("persistentVolumeClaims");
        if (jsonArraypersistentVolumeClaims != null) {
          // ensure the json data is an array
          if (!jsonObj.get("persistentVolumeClaims").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `persistentVolumeClaims` to be an array in the JSON string but got `%s`", jsonObj.get("persistentVolumeClaims").toString()));
          }

          // validate the optional field `persistentVolumeClaims` (array)
          for (int i = 0; i < jsonArraypersistentVolumeClaims.size(); i++) {
            IoK8sApiCoreV1Volume.validateJsonElement(jsonArraypersistentVolumeClaims.get(i));
          };
        }
      }
      if ((jsonObj.get("phase") != null && !jsonObj.get("phase").isJsonNull()) && !jsonObj.get("phase").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phase` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phase").toString()));
      }
      if ((jsonObj.get("progress") != null && !jsonObj.get("progress").isJsonNull()) && !jsonObj.get("progress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `progress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("progress").toString()));
      }
      // validate the optional field `storedWorkflowTemplateSpec`
      if (jsonObj.get("storedWorkflowTemplateSpec") != null && !jsonObj.get("storedWorkflowTemplateSpec").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1WorkflowSpec.validateJsonElement(jsonObj.get("storedWorkflowTemplateSpec"));
      }
      // validate the optional field `synchronization`
      if (jsonObj.get("synchronization") != null && !jsonObj.get("synchronization").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1SynchronizationStatus.validateJsonElement(jsonObj.get("synchronization"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IoArgoprojWorkflowV1alpha1WorkflowStatus.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IoArgoprojWorkflowV1alpha1WorkflowStatus' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IoArgoprojWorkflowV1alpha1WorkflowStatus> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IoArgoprojWorkflowV1alpha1WorkflowStatus.class));

       return (TypeAdapter<T>) new TypeAdapter<IoArgoprojWorkflowV1alpha1WorkflowStatus>() {
           @Override
           public void write(JsonWriter out, IoArgoprojWorkflowV1alpha1WorkflowStatus value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IoArgoprojWorkflowV1alpha1WorkflowStatus read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IoArgoprojWorkflowV1alpha1WorkflowStatus given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IoArgoprojWorkflowV1alpha1WorkflowStatus
   * @throws IOException if the JSON string is invalid with respect to IoArgoprojWorkflowV1alpha1WorkflowStatus
   */
  public static IoArgoprojWorkflowV1alpha1WorkflowStatus fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IoArgoprojWorkflowV1alpha1WorkflowStatus.class);
  }

  /**
   * Convert an instance of IoArgoprojWorkflowV1alpha1WorkflowStatus to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

