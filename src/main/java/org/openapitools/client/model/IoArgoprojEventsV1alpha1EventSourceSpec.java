/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1AMQPEventSource;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1AzureEventsHubEventSource;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1AzureQueueStorageEventSource;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1AzureServiceBusEventSource;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1BitbucketEventSource;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1BitbucketServerEventSource;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1CalendarEventSource;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1EmitterEventSource;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1FileEventSource;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1GenericEventSource;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1GerritEventSource;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1GithubEventSource;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1GitlabEventSource;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1HDFSEventSource;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1KafkaEventSource;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1MQTTEventSource;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1NATSEventsSource;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1NSQEventSource;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1PubSubEventSource;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1PulsarEventSource;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1RedisEventSource;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1RedisStreamEventSource;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1ResourceEventSource;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1S3Artifact;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1SFTPEventSource;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1SNSEventSource;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1SQSEventSource;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1Service;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1SlackEventSource;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1StorageGridEventSource;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1StripeEventSource;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1Template;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1WebhookEventSource;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * IoArgoprojEventsV1alpha1EventSourceSpec
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-24T03:51:41.763920791Z[Etc/UTC]", comments = "Generator version: 7.12.0-SNAPSHOT")
public class IoArgoprojEventsV1alpha1EventSourceSpec {
  public static final String SERIALIZED_NAME_AMQP = "amqp";
  @SerializedName(SERIALIZED_NAME_AMQP)
  @javax.annotation.Nullable
  private Map<String, IoArgoprojEventsV1alpha1AMQPEventSource> amqp = new HashMap<>();

  public static final String SERIALIZED_NAME_AZURE_EVENTS_HUB = "azureEventsHub";
  @SerializedName(SERIALIZED_NAME_AZURE_EVENTS_HUB)
  @javax.annotation.Nullable
  private Map<String, IoArgoprojEventsV1alpha1AzureEventsHubEventSource> azureEventsHub = new HashMap<>();

  public static final String SERIALIZED_NAME_AZURE_QUEUE_STORAGE = "azureQueueStorage";
  @SerializedName(SERIALIZED_NAME_AZURE_QUEUE_STORAGE)
  @javax.annotation.Nullable
  private Map<String, IoArgoprojEventsV1alpha1AzureQueueStorageEventSource> azureQueueStorage = new HashMap<>();

  public static final String SERIALIZED_NAME_AZURE_SERVICE_BUS = "azureServiceBus";
  @SerializedName(SERIALIZED_NAME_AZURE_SERVICE_BUS)
  @javax.annotation.Nullable
  private Map<String, IoArgoprojEventsV1alpha1AzureServiceBusEventSource> azureServiceBus = new HashMap<>();

  public static final String SERIALIZED_NAME_BITBUCKET = "bitbucket";
  @SerializedName(SERIALIZED_NAME_BITBUCKET)
  @javax.annotation.Nullable
  private Map<String, IoArgoprojEventsV1alpha1BitbucketEventSource> bitbucket = new HashMap<>();

  public static final String SERIALIZED_NAME_BITBUCKETSERVER = "bitbucketserver";
  @SerializedName(SERIALIZED_NAME_BITBUCKETSERVER)
  @javax.annotation.Nullable
  private Map<String, IoArgoprojEventsV1alpha1BitbucketServerEventSource> bitbucketserver = new HashMap<>();

  public static final String SERIALIZED_NAME_CALENDAR = "calendar";
  @SerializedName(SERIALIZED_NAME_CALENDAR)
  @javax.annotation.Nullable
  private Map<String, IoArgoprojEventsV1alpha1CalendarEventSource> calendar = new HashMap<>();

  public static final String SERIALIZED_NAME_EMITTER = "emitter";
  @SerializedName(SERIALIZED_NAME_EMITTER)
  @javax.annotation.Nullable
  private Map<String, IoArgoprojEventsV1alpha1EmitterEventSource> emitter = new HashMap<>();

  public static final String SERIALIZED_NAME_EVENT_BUS_NAME = "eventBusName";
  @SerializedName(SERIALIZED_NAME_EVENT_BUS_NAME)
  @javax.annotation.Nullable
  private String eventBusName;

  public static final String SERIALIZED_NAME_FILE = "file";
  @SerializedName(SERIALIZED_NAME_FILE)
  @javax.annotation.Nullable
  private Map<String, IoArgoprojEventsV1alpha1FileEventSource> _file = new HashMap<>();

  public static final String SERIALIZED_NAME_GENERIC = "generic";
  @SerializedName(SERIALIZED_NAME_GENERIC)
  @javax.annotation.Nullable
  private Map<String, IoArgoprojEventsV1alpha1GenericEventSource> generic = new HashMap<>();

  public static final String SERIALIZED_NAME_GERRIT = "gerrit";
  @SerializedName(SERIALIZED_NAME_GERRIT)
  @javax.annotation.Nullable
  private Map<String, IoArgoprojEventsV1alpha1GerritEventSource> gerrit = new HashMap<>();

  public static final String SERIALIZED_NAME_GITHUB = "github";
  @SerializedName(SERIALIZED_NAME_GITHUB)
  @javax.annotation.Nullable
  private Map<String, IoArgoprojEventsV1alpha1GithubEventSource> github = new HashMap<>();

  public static final String SERIALIZED_NAME_GITLAB = "gitlab";
  @SerializedName(SERIALIZED_NAME_GITLAB)
  @javax.annotation.Nullable
  private Map<String, IoArgoprojEventsV1alpha1GitlabEventSource> gitlab = new HashMap<>();

  public static final String SERIALIZED_NAME_HDFS = "hdfs";
  @SerializedName(SERIALIZED_NAME_HDFS)
  @javax.annotation.Nullable
  private Map<String, IoArgoprojEventsV1alpha1HDFSEventSource> hdfs = new HashMap<>();

  public static final String SERIALIZED_NAME_KAFKA = "kafka";
  @SerializedName(SERIALIZED_NAME_KAFKA)
  @javax.annotation.Nullable
  private Map<String, IoArgoprojEventsV1alpha1KafkaEventSource> kafka = new HashMap<>();

  public static final String SERIALIZED_NAME_MINIO = "minio";
  @SerializedName(SERIALIZED_NAME_MINIO)
  @javax.annotation.Nullable
  private Map<String, IoArgoprojEventsV1alpha1S3Artifact> minio = new HashMap<>();

  public static final String SERIALIZED_NAME_MQTT = "mqtt";
  @SerializedName(SERIALIZED_NAME_MQTT)
  @javax.annotation.Nullable
  private Map<String, IoArgoprojEventsV1alpha1MQTTEventSource> mqtt = new HashMap<>();

  public static final String SERIALIZED_NAME_NATS = "nats";
  @SerializedName(SERIALIZED_NAME_NATS)
  @javax.annotation.Nullable
  private Map<String, IoArgoprojEventsV1alpha1NATSEventsSource> nats = new HashMap<>();

  public static final String SERIALIZED_NAME_NSQ = "nsq";
  @SerializedName(SERIALIZED_NAME_NSQ)
  @javax.annotation.Nullable
  private Map<String, IoArgoprojEventsV1alpha1NSQEventSource> nsq = new HashMap<>();

  public static final String SERIALIZED_NAME_PUB_SUB = "pubSub";
  @SerializedName(SERIALIZED_NAME_PUB_SUB)
  @javax.annotation.Nullable
  private Map<String, IoArgoprojEventsV1alpha1PubSubEventSource> pubSub = new HashMap<>();

  public static final String SERIALIZED_NAME_PULSAR = "pulsar";
  @SerializedName(SERIALIZED_NAME_PULSAR)
  @javax.annotation.Nullable
  private Map<String, IoArgoprojEventsV1alpha1PulsarEventSource> pulsar = new HashMap<>();

  public static final String SERIALIZED_NAME_REDIS = "redis";
  @SerializedName(SERIALIZED_NAME_REDIS)
  @javax.annotation.Nullable
  private Map<String, IoArgoprojEventsV1alpha1RedisEventSource> redis = new HashMap<>();

  public static final String SERIALIZED_NAME_REDIS_STREAM = "redisStream";
  @SerializedName(SERIALIZED_NAME_REDIS_STREAM)
  @javax.annotation.Nullable
  private Map<String, IoArgoprojEventsV1alpha1RedisStreamEventSource> redisStream = new HashMap<>();

  public static final String SERIALIZED_NAME_REPLICAS = "replicas";
  @SerializedName(SERIALIZED_NAME_REPLICAS)
  @javax.annotation.Nullable
  private Integer replicas;

  public static final String SERIALIZED_NAME_RESOURCE = "resource";
  @SerializedName(SERIALIZED_NAME_RESOURCE)
  @javax.annotation.Nullable
  private Map<String, IoArgoprojEventsV1alpha1ResourceEventSource> resource = new HashMap<>();

  public static final String SERIALIZED_NAME_SERVICE = "service";
  @SerializedName(SERIALIZED_NAME_SERVICE)
  @javax.annotation.Nullable
  private IoArgoprojEventsV1alpha1Service service;

  public static final String SERIALIZED_NAME_SFTP = "sftp";
  @SerializedName(SERIALIZED_NAME_SFTP)
  @javax.annotation.Nullable
  private Map<String, IoArgoprojEventsV1alpha1SFTPEventSource> sftp = new HashMap<>();

  public static final String SERIALIZED_NAME_SLACK = "slack";
  @SerializedName(SERIALIZED_NAME_SLACK)
  @javax.annotation.Nullable
  private Map<String, IoArgoprojEventsV1alpha1SlackEventSource> slack = new HashMap<>();

  public static final String SERIALIZED_NAME_SNS = "sns";
  @SerializedName(SERIALIZED_NAME_SNS)
  @javax.annotation.Nullable
  private Map<String, IoArgoprojEventsV1alpha1SNSEventSource> sns = new HashMap<>();

  public static final String SERIALIZED_NAME_SQS = "sqs";
  @SerializedName(SERIALIZED_NAME_SQS)
  @javax.annotation.Nullable
  private Map<String, IoArgoprojEventsV1alpha1SQSEventSource> sqs = new HashMap<>();

  public static final String SERIALIZED_NAME_STORAGE_GRID = "storageGrid";
  @SerializedName(SERIALIZED_NAME_STORAGE_GRID)
  @javax.annotation.Nullable
  private Map<String, IoArgoprojEventsV1alpha1StorageGridEventSource> storageGrid = new HashMap<>();

  public static final String SERIALIZED_NAME_STRIPE = "stripe";
  @SerializedName(SERIALIZED_NAME_STRIPE)
  @javax.annotation.Nullable
  private Map<String, IoArgoprojEventsV1alpha1StripeEventSource> stripe = new HashMap<>();

  public static final String SERIALIZED_NAME_TEMPLATE = "template";
  @SerializedName(SERIALIZED_NAME_TEMPLATE)
  @javax.annotation.Nullable
  private IoArgoprojEventsV1alpha1Template template;

  public static final String SERIALIZED_NAME_WEBHOOK = "webhook";
  @SerializedName(SERIALIZED_NAME_WEBHOOK)
  @javax.annotation.Nullable
  private Map<String, IoArgoprojEventsV1alpha1WebhookEventSource> webhook = new HashMap<>();

  public IoArgoprojEventsV1alpha1EventSourceSpec() {
  }

  public IoArgoprojEventsV1alpha1EventSourceSpec amqp(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1AMQPEventSource> amqp) {
    this.amqp = amqp;
    return this;
  }

  public IoArgoprojEventsV1alpha1EventSourceSpec putAmqpItem(String key, IoArgoprojEventsV1alpha1AMQPEventSource amqpItem) {
    if (this.amqp == null) {
      this.amqp = new HashMap<>();
    }
    this.amqp.put(key, amqpItem);
    return this;
  }

  /**
   * Get amqp
   * @return amqp
   */
  @javax.annotation.Nullable
  public Map<String, IoArgoprojEventsV1alpha1AMQPEventSource> getAmqp() {
    return amqp;
  }

  public void setAmqp(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1AMQPEventSource> amqp) {
    this.amqp = amqp;
  }


  public IoArgoprojEventsV1alpha1EventSourceSpec azureEventsHub(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1AzureEventsHubEventSource> azureEventsHub) {
    this.azureEventsHub = azureEventsHub;
    return this;
  }

  public IoArgoprojEventsV1alpha1EventSourceSpec putAzureEventsHubItem(String key, IoArgoprojEventsV1alpha1AzureEventsHubEventSource azureEventsHubItem) {
    if (this.azureEventsHub == null) {
      this.azureEventsHub = new HashMap<>();
    }
    this.azureEventsHub.put(key, azureEventsHubItem);
    return this;
  }

  /**
   * Get azureEventsHub
   * @return azureEventsHub
   */
  @javax.annotation.Nullable
  public Map<String, IoArgoprojEventsV1alpha1AzureEventsHubEventSource> getAzureEventsHub() {
    return azureEventsHub;
  }

  public void setAzureEventsHub(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1AzureEventsHubEventSource> azureEventsHub) {
    this.azureEventsHub = azureEventsHub;
  }


  public IoArgoprojEventsV1alpha1EventSourceSpec azureQueueStorage(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1AzureQueueStorageEventSource> azureQueueStorage) {
    this.azureQueueStorage = azureQueueStorage;
    return this;
  }

  public IoArgoprojEventsV1alpha1EventSourceSpec putAzureQueueStorageItem(String key, IoArgoprojEventsV1alpha1AzureQueueStorageEventSource azureQueueStorageItem) {
    if (this.azureQueueStorage == null) {
      this.azureQueueStorage = new HashMap<>();
    }
    this.azureQueueStorage.put(key, azureQueueStorageItem);
    return this;
  }

  /**
   * Get azureQueueStorage
   * @return azureQueueStorage
   */
  @javax.annotation.Nullable
  public Map<String, IoArgoprojEventsV1alpha1AzureQueueStorageEventSource> getAzureQueueStorage() {
    return azureQueueStorage;
  }

  public void setAzureQueueStorage(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1AzureQueueStorageEventSource> azureQueueStorage) {
    this.azureQueueStorage = azureQueueStorage;
  }


  public IoArgoprojEventsV1alpha1EventSourceSpec azureServiceBus(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1AzureServiceBusEventSource> azureServiceBus) {
    this.azureServiceBus = azureServiceBus;
    return this;
  }

  public IoArgoprojEventsV1alpha1EventSourceSpec putAzureServiceBusItem(String key, IoArgoprojEventsV1alpha1AzureServiceBusEventSource azureServiceBusItem) {
    if (this.azureServiceBus == null) {
      this.azureServiceBus = new HashMap<>();
    }
    this.azureServiceBus.put(key, azureServiceBusItem);
    return this;
  }

  /**
   * Get azureServiceBus
   * @return azureServiceBus
   */
  @javax.annotation.Nullable
  public Map<String, IoArgoprojEventsV1alpha1AzureServiceBusEventSource> getAzureServiceBus() {
    return azureServiceBus;
  }

  public void setAzureServiceBus(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1AzureServiceBusEventSource> azureServiceBus) {
    this.azureServiceBus = azureServiceBus;
  }


  public IoArgoprojEventsV1alpha1EventSourceSpec bitbucket(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1BitbucketEventSource> bitbucket) {
    this.bitbucket = bitbucket;
    return this;
  }

  public IoArgoprojEventsV1alpha1EventSourceSpec putBitbucketItem(String key, IoArgoprojEventsV1alpha1BitbucketEventSource bitbucketItem) {
    if (this.bitbucket == null) {
      this.bitbucket = new HashMap<>();
    }
    this.bitbucket.put(key, bitbucketItem);
    return this;
  }

  /**
   * Get bitbucket
   * @return bitbucket
   */
  @javax.annotation.Nullable
  public Map<String, IoArgoprojEventsV1alpha1BitbucketEventSource> getBitbucket() {
    return bitbucket;
  }

  public void setBitbucket(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1BitbucketEventSource> bitbucket) {
    this.bitbucket = bitbucket;
  }


  public IoArgoprojEventsV1alpha1EventSourceSpec bitbucketserver(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1BitbucketServerEventSource> bitbucketserver) {
    this.bitbucketserver = bitbucketserver;
    return this;
  }

  public IoArgoprojEventsV1alpha1EventSourceSpec putBitbucketserverItem(String key, IoArgoprojEventsV1alpha1BitbucketServerEventSource bitbucketserverItem) {
    if (this.bitbucketserver == null) {
      this.bitbucketserver = new HashMap<>();
    }
    this.bitbucketserver.put(key, bitbucketserverItem);
    return this;
  }

  /**
   * Get bitbucketserver
   * @return bitbucketserver
   */
  @javax.annotation.Nullable
  public Map<String, IoArgoprojEventsV1alpha1BitbucketServerEventSource> getBitbucketserver() {
    return bitbucketserver;
  }

  public void setBitbucketserver(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1BitbucketServerEventSource> bitbucketserver) {
    this.bitbucketserver = bitbucketserver;
  }


  public IoArgoprojEventsV1alpha1EventSourceSpec calendar(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1CalendarEventSource> calendar) {
    this.calendar = calendar;
    return this;
  }

  public IoArgoprojEventsV1alpha1EventSourceSpec putCalendarItem(String key, IoArgoprojEventsV1alpha1CalendarEventSource calendarItem) {
    if (this.calendar == null) {
      this.calendar = new HashMap<>();
    }
    this.calendar.put(key, calendarItem);
    return this;
  }

  /**
   * Get calendar
   * @return calendar
   */
  @javax.annotation.Nullable
  public Map<String, IoArgoprojEventsV1alpha1CalendarEventSource> getCalendar() {
    return calendar;
  }

  public void setCalendar(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1CalendarEventSource> calendar) {
    this.calendar = calendar;
  }


  public IoArgoprojEventsV1alpha1EventSourceSpec emitter(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1EmitterEventSource> emitter) {
    this.emitter = emitter;
    return this;
  }

  public IoArgoprojEventsV1alpha1EventSourceSpec putEmitterItem(String key, IoArgoprojEventsV1alpha1EmitterEventSource emitterItem) {
    if (this.emitter == null) {
      this.emitter = new HashMap<>();
    }
    this.emitter.put(key, emitterItem);
    return this;
  }

  /**
   * Get emitter
   * @return emitter
   */
  @javax.annotation.Nullable
  public Map<String, IoArgoprojEventsV1alpha1EmitterEventSource> getEmitter() {
    return emitter;
  }

  public void setEmitter(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1EmitterEventSource> emitter) {
    this.emitter = emitter;
  }


  public IoArgoprojEventsV1alpha1EventSourceSpec eventBusName(@javax.annotation.Nullable String eventBusName) {
    this.eventBusName = eventBusName;
    return this;
  }

  /**
   * Get eventBusName
   * @return eventBusName
   */
  @javax.annotation.Nullable
  public String getEventBusName() {
    return eventBusName;
  }

  public void setEventBusName(@javax.annotation.Nullable String eventBusName) {
    this.eventBusName = eventBusName;
  }


  public IoArgoprojEventsV1alpha1EventSourceSpec _file(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1FileEventSource> _file) {
    this._file = _file;
    return this;
  }

  public IoArgoprojEventsV1alpha1EventSourceSpec putFileItem(String key, IoArgoprojEventsV1alpha1FileEventSource _fileItem) {
    if (this._file == null) {
      this._file = new HashMap<>();
    }
    this._file.put(key, _fileItem);
    return this;
  }

  /**
   * Get _file
   * @return _file
   */
  @javax.annotation.Nullable
  public Map<String, IoArgoprojEventsV1alpha1FileEventSource> getFile() {
    return _file;
  }

  public void setFile(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1FileEventSource> _file) {
    this._file = _file;
  }


  public IoArgoprojEventsV1alpha1EventSourceSpec generic(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1GenericEventSource> generic) {
    this.generic = generic;
    return this;
  }

  public IoArgoprojEventsV1alpha1EventSourceSpec putGenericItem(String key, IoArgoprojEventsV1alpha1GenericEventSource genericItem) {
    if (this.generic == null) {
      this.generic = new HashMap<>();
    }
    this.generic.put(key, genericItem);
    return this;
  }

  /**
   * Get generic
   * @return generic
   */
  @javax.annotation.Nullable
  public Map<String, IoArgoprojEventsV1alpha1GenericEventSource> getGeneric() {
    return generic;
  }

  public void setGeneric(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1GenericEventSource> generic) {
    this.generic = generic;
  }


  public IoArgoprojEventsV1alpha1EventSourceSpec gerrit(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1GerritEventSource> gerrit) {
    this.gerrit = gerrit;
    return this;
  }

  public IoArgoprojEventsV1alpha1EventSourceSpec putGerritItem(String key, IoArgoprojEventsV1alpha1GerritEventSource gerritItem) {
    if (this.gerrit == null) {
      this.gerrit = new HashMap<>();
    }
    this.gerrit.put(key, gerritItem);
    return this;
  }

  /**
   * Get gerrit
   * @return gerrit
   */
  @javax.annotation.Nullable
  public Map<String, IoArgoprojEventsV1alpha1GerritEventSource> getGerrit() {
    return gerrit;
  }

  public void setGerrit(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1GerritEventSource> gerrit) {
    this.gerrit = gerrit;
  }


  public IoArgoprojEventsV1alpha1EventSourceSpec github(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1GithubEventSource> github) {
    this.github = github;
    return this;
  }

  public IoArgoprojEventsV1alpha1EventSourceSpec putGithubItem(String key, IoArgoprojEventsV1alpha1GithubEventSource githubItem) {
    if (this.github == null) {
      this.github = new HashMap<>();
    }
    this.github.put(key, githubItem);
    return this;
  }

  /**
   * Get github
   * @return github
   */
  @javax.annotation.Nullable
  public Map<String, IoArgoprojEventsV1alpha1GithubEventSource> getGithub() {
    return github;
  }

  public void setGithub(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1GithubEventSource> github) {
    this.github = github;
  }


  public IoArgoprojEventsV1alpha1EventSourceSpec gitlab(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1GitlabEventSource> gitlab) {
    this.gitlab = gitlab;
    return this;
  }

  public IoArgoprojEventsV1alpha1EventSourceSpec putGitlabItem(String key, IoArgoprojEventsV1alpha1GitlabEventSource gitlabItem) {
    if (this.gitlab == null) {
      this.gitlab = new HashMap<>();
    }
    this.gitlab.put(key, gitlabItem);
    return this;
  }

  /**
   * Get gitlab
   * @return gitlab
   */
  @javax.annotation.Nullable
  public Map<String, IoArgoprojEventsV1alpha1GitlabEventSource> getGitlab() {
    return gitlab;
  }

  public void setGitlab(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1GitlabEventSource> gitlab) {
    this.gitlab = gitlab;
  }


  public IoArgoprojEventsV1alpha1EventSourceSpec hdfs(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1HDFSEventSource> hdfs) {
    this.hdfs = hdfs;
    return this;
  }

  public IoArgoprojEventsV1alpha1EventSourceSpec putHdfsItem(String key, IoArgoprojEventsV1alpha1HDFSEventSource hdfsItem) {
    if (this.hdfs == null) {
      this.hdfs = new HashMap<>();
    }
    this.hdfs.put(key, hdfsItem);
    return this;
  }

  /**
   * Get hdfs
   * @return hdfs
   */
  @javax.annotation.Nullable
  public Map<String, IoArgoprojEventsV1alpha1HDFSEventSource> getHdfs() {
    return hdfs;
  }

  public void setHdfs(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1HDFSEventSource> hdfs) {
    this.hdfs = hdfs;
  }


  public IoArgoprojEventsV1alpha1EventSourceSpec kafka(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1KafkaEventSource> kafka) {
    this.kafka = kafka;
    return this;
  }

  public IoArgoprojEventsV1alpha1EventSourceSpec putKafkaItem(String key, IoArgoprojEventsV1alpha1KafkaEventSource kafkaItem) {
    if (this.kafka == null) {
      this.kafka = new HashMap<>();
    }
    this.kafka.put(key, kafkaItem);
    return this;
  }

  /**
   * Get kafka
   * @return kafka
   */
  @javax.annotation.Nullable
  public Map<String, IoArgoprojEventsV1alpha1KafkaEventSource> getKafka() {
    return kafka;
  }

  public void setKafka(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1KafkaEventSource> kafka) {
    this.kafka = kafka;
  }


  public IoArgoprojEventsV1alpha1EventSourceSpec minio(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1S3Artifact> minio) {
    this.minio = minio;
    return this;
  }

  public IoArgoprojEventsV1alpha1EventSourceSpec putMinioItem(String key, IoArgoprojEventsV1alpha1S3Artifact minioItem) {
    if (this.minio == null) {
      this.minio = new HashMap<>();
    }
    this.minio.put(key, minioItem);
    return this;
  }

  /**
   * Get minio
   * @return minio
   */
  @javax.annotation.Nullable
  public Map<String, IoArgoprojEventsV1alpha1S3Artifact> getMinio() {
    return minio;
  }

  public void setMinio(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1S3Artifact> minio) {
    this.minio = minio;
  }


  public IoArgoprojEventsV1alpha1EventSourceSpec mqtt(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1MQTTEventSource> mqtt) {
    this.mqtt = mqtt;
    return this;
  }

  public IoArgoprojEventsV1alpha1EventSourceSpec putMqttItem(String key, IoArgoprojEventsV1alpha1MQTTEventSource mqttItem) {
    if (this.mqtt == null) {
      this.mqtt = new HashMap<>();
    }
    this.mqtt.put(key, mqttItem);
    return this;
  }

  /**
   * Get mqtt
   * @return mqtt
   */
  @javax.annotation.Nullable
  public Map<String, IoArgoprojEventsV1alpha1MQTTEventSource> getMqtt() {
    return mqtt;
  }

  public void setMqtt(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1MQTTEventSource> mqtt) {
    this.mqtt = mqtt;
  }


  public IoArgoprojEventsV1alpha1EventSourceSpec nats(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1NATSEventsSource> nats) {
    this.nats = nats;
    return this;
  }

  public IoArgoprojEventsV1alpha1EventSourceSpec putNatsItem(String key, IoArgoprojEventsV1alpha1NATSEventsSource natsItem) {
    if (this.nats == null) {
      this.nats = new HashMap<>();
    }
    this.nats.put(key, natsItem);
    return this;
  }

  /**
   * Get nats
   * @return nats
   */
  @javax.annotation.Nullable
  public Map<String, IoArgoprojEventsV1alpha1NATSEventsSource> getNats() {
    return nats;
  }

  public void setNats(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1NATSEventsSource> nats) {
    this.nats = nats;
  }


  public IoArgoprojEventsV1alpha1EventSourceSpec nsq(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1NSQEventSource> nsq) {
    this.nsq = nsq;
    return this;
  }

  public IoArgoprojEventsV1alpha1EventSourceSpec putNsqItem(String key, IoArgoprojEventsV1alpha1NSQEventSource nsqItem) {
    if (this.nsq == null) {
      this.nsq = new HashMap<>();
    }
    this.nsq.put(key, nsqItem);
    return this;
  }

  /**
   * Get nsq
   * @return nsq
   */
  @javax.annotation.Nullable
  public Map<String, IoArgoprojEventsV1alpha1NSQEventSource> getNsq() {
    return nsq;
  }

  public void setNsq(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1NSQEventSource> nsq) {
    this.nsq = nsq;
  }


  public IoArgoprojEventsV1alpha1EventSourceSpec pubSub(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1PubSubEventSource> pubSub) {
    this.pubSub = pubSub;
    return this;
  }

  public IoArgoprojEventsV1alpha1EventSourceSpec putPubSubItem(String key, IoArgoprojEventsV1alpha1PubSubEventSource pubSubItem) {
    if (this.pubSub == null) {
      this.pubSub = new HashMap<>();
    }
    this.pubSub.put(key, pubSubItem);
    return this;
  }

  /**
   * Get pubSub
   * @return pubSub
   */
  @javax.annotation.Nullable
  public Map<String, IoArgoprojEventsV1alpha1PubSubEventSource> getPubSub() {
    return pubSub;
  }

  public void setPubSub(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1PubSubEventSource> pubSub) {
    this.pubSub = pubSub;
  }


  public IoArgoprojEventsV1alpha1EventSourceSpec pulsar(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1PulsarEventSource> pulsar) {
    this.pulsar = pulsar;
    return this;
  }

  public IoArgoprojEventsV1alpha1EventSourceSpec putPulsarItem(String key, IoArgoprojEventsV1alpha1PulsarEventSource pulsarItem) {
    if (this.pulsar == null) {
      this.pulsar = new HashMap<>();
    }
    this.pulsar.put(key, pulsarItem);
    return this;
  }

  /**
   * Get pulsar
   * @return pulsar
   */
  @javax.annotation.Nullable
  public Map<String, IoArgoprojEventsV1alpha1PulsarEventSource> getPulsar() {
    return pulsar;
  }

  public void setPulsar(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1PulsarEventSource> pulsar) {
    this.pulsar = pulsar;
  }


  public IoArgoprojEventsV1alpha1EventSourceSpec redis(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1RedisEventSource> redis) {
    this.redis = redis;
    return this;
  }

  public IoArgoprojEventsV1alpha1EventSourceSpec putRedisItem(String key, IoArgoprojEventsV1alpha1RedisEventSource redisItem) {
    if (this.redis == null) {
      this.redis = new HashMap<>();
    }
    this.redis.put(key, redisItem);
    return this;
  }

  /**
   * Get redis
   * @return redis
   */
  @javax.annotation.Nullable
  public Map<String, IoArgoprojEventsV1alpha1RedisEventSource> getRedis() {
    return redis;
  }

  public void setRedis(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1RedisEventSource> redis) {
    this.redis = redis;
  }


  public IoArgoprojEventsV1alpha1EventSourceSpec redisStream(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1RedisStreamEventSource> redisStream) {
    this.redisStream = redisStream;
    return this;
  }

  public IoArgoprojEventsV1alpha1EventSourceSpec putRedisStreamItem(String key, IoArgoprojEventsV1alpha1RedisStreamEventSource redisStreamItem) {
    if (this.redisStream == null) {
      this.redisStream = new HashMap<>();
    }
    this.redisStream.put(key, redisStreamItem);
    return this;
  }

  /**
   * Get redisStream
   * @return redisStream
   */
  @javax.annotation.Nullable
  public Map<String, IoArgoprojEventsV1alpha1RedisStreamEventSource> getRedisStream() {
    return redisStream;
  }

  public void setRedisStream(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1RedisStreamEventSource> redisStream) {
    this.redisStream = redisStream;
  }


  public IoArgoprojEventsV1alpha1EventSourceSpec replicas(@javax.annotation.Nullable Integer replicas) {
    this.replicas = replicas;
    return this;
  }

  /**
   * Get replicas
   * @return replicas
   */
  @javax.annotation.Nullable
  public Integer getReplicas() {
    return replicas;
  }

  public void setReplicas(@javax.annotation.Nullable Integer replicas) {
    this.replicas = replicas;
  }


  public IoArgoprojEventsV1alpha1EventSourceSpec resource(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1ResourceEventSource> resource) {
    this.resource = resource;
    return this;
  }

  public IoArgoprojEventsV1alpha1EventSourceSpec putResourceItem(String key, IoArgoprojEventsV1alpha1ResourceEventSource resourceItem) {
    if (this.resource == null) {
      this.resource = new HashMap<>();
    }
    this.resource.put(key, resourceItem);
    return this;
  }

  /**
   * Get resource
   * @return resource
   */
  @javax.annotation.Nullable
  public Map<String, IoArgoprojEventsV1alpha1ResourceEventSource> getResource() {
    return resource;
  }

  public void setResource(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1ResourceEventSource> resource) {
    this.resource = resource;
  }


  public IoArgoprojEventsV1alpha1EventSourceSpec service(@javax.annotation.Nullable IoArgoprojEventsV1alpha1Service service) {
    this.service = service;
    return this;
  }

  /**
   * Get service
   * @return service
   */
  @javax.annotation.Nullable
  public IoArgoprojEventsV1alpha1Service getService() {
    return service;
  }

  public void setService(@javax.annotation.Nullable IoArgoprojEventsV1alpha1Service service) {
    this.service = service;
  }


  public IoArgoprojEventsV1alpha1EventSourceSpec sftp(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1SFTPEventSource> sftp) {
    this.sftp = sftp;
    return this;
  }

  public IoArgoprojEventsV1alpha1EventSourceSpec putSftpItem(String key, IoArgoprojEventsV1alpha1SFTPEventSource sftpItem) {
    if (this.sftp == null) {
      this.sftp = new HashMap<>();
    }
    this.sftp.put(key, sftpItem);
    return this;
  }

  /**
   * Get sftp
   * @return sftp
   */
  @javax.annotation.Nullable
  public Map<String, IoArgoprojEventsV1alpha1SFTPEventSource> getSftp() {
    return sftp;
  }

  public void setSftp(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1SFTPEventSource> sftp) {
    this.sftp = sftp;
  }


  public IoArgoprojEventsV1alpha1EventSourceSpec slack(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1SlackEventSource> slack) {
    this.slack = slack;
    return this;
  }

  public IoArgoprojEventsV1alpha1EventSourceSpec putSlackItem(String key, IoArgoprojEventsV1alpha1SlackEventSource slackItem) {
    if (this.slack == null) {
      this.slack = new HashMap<>();
    }
    this.slack.put(key, slackItem);
    return this;
  }

  /**
   * Get slack
   * @return slack
   */
  @javax.annotation.Nullable
  public Map<String, IoArgoprojEventsV1alpha1SlackEventSource> getSlack() {
    return slack;
  }

  public void setSlack(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1SlackEventSource> slack) {
    this.slack = slack;
  }


  public IoArgoprojEventsV1alpha1EventSourceSpec sns(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1SNSEventSource> sns) {
    this.sns = sns;
    return this;
  }

  public IoArgoprojEventsV1alpha1EventSourceSpec putSnsItem(String key, IoArgoprojEventsV1alpha1SNSEventSource snsItem) {
    if (this.sns == null) {
      this.sns = new HashMap<>();
    }
    this.sns.put(key, snsItem);
    return this;
  }

  /**
   * Get sns
   * @return sns
   */
  @javax.annotation.Nullable
  public Map<String, IoArgoprojEventsV1alpha1SNSEventSource> getSns() {
    return sns;
  }

  public void setSns(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1SNSEventSource> sns) {
    this.sns = sns;
  }


  public IoArgoprojEventsV1alpha1EventSourceSpec sqs(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1SQSEventSource> sqs) {
    this.sqs = sqs;
    return this;
  }

  public IoArgoprojEventsV1alpha1EventSourceSpec putSqsItem(String key, IoArgoprojEventsV1alpha1SQSEventSource sqsItem) {
    if (this.sqs == null) {
      this.sqs = new HashMap<>();
    }
    this.sqs.put(key, sqsItem);
    return this;
  }

  /**
   * Get sqs
   * @return sqs
   */
  @javax.annotation.Nullable
  public Map<String, IoArgoprojEventsV1alpha1SQSEventSource> getSqs() {
    return sqs;
  }

  public void setSqs(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1SQSEventSource> sqs) {
    this.sqs = sqs;
  }


  public IoArgoprojEventsV1alpha1EventSourceSpec storageGrid(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1StorageGridEventSource> storageGrid) {
    this.storageGrid = storageGrid;
    return this;
  }

  public IoArgoprojEventsV1alpha1EventSourceSpec putStorageGridItem(String key, IoArgoprojEventsV1alpha1StorageGridEventSource storageGridItem) {
    if (this.storageGrid == null) {
      this.storageGrid = new HashMap<>();
    }
    this.storageGrid.put(key, storageGridItem);
    return this;
  }

  /**
   * Get storageGrid
   * @return storageGrid
   */
  @javax.annotation.Nullable
  public Map<String, IoArgoprojEventsV1alpha1StorageGridEventSource> getStorageGrid() {
    return storageGrid;
  }

  public void setStorageGrid(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1StorageGridEventSource> storageGrid) {
    this.storageGrid = storageGrid;
  }


  public IoArgoprojEventsV1alpha1EventSourceSpec stripe(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1StripeEventSource> stripe) {
    this.stripe = stripe;
    return this;
  }

  public IoArgoprojEventsV1alpha1EventSourceSpec putStripeItem(String key, IoArgoprojEventsV1alpha1StripeEventSource stripeItem) {
    if (this.stripe == null) {
      this.stripe = new HashMap<>();
    }
    this.stripe.put(key, stripeItem);
    return this;
  }

  /**
   * Get stripe
   * @return stripe
   */
  @javax.annotation.Nullable
  public Map<String, IoArgoprojEventsV1alpha1StripeEventSource> getStripe() {
    return stripe;
  }

  public void setStripe(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1StripeEventSource> stripe) {
    this.stripe = stripe;
  }


  public IoArgoprojEventsV1alpha1EventSourceSpec template(@javax.annotation.Nullable IoArgoprojEventsV1alpha1Template template) {
    this.template = template;
    return this;
  }

  /**
   * Get template
   * @return template
   */
  @javax.annotation.Nullable
  public IoArgoprojEventsV1alpha1Template getTemplate() {
    return template;
  }

  public void setTemplate(@javax.annotation.Nullable IoArgoprojEventsV1alpha1Template template) {
    this.template = template;
  }


  public IoArgoprojEventsV1alpha1EventSourceSpec webhook(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1WebhookEventSource> webhook) {
    this.webhook = webhook;
    return this;
  }

  public IoArgoprojEventsV1alpha1EventSourceSpec putWebhookItem(String key, IoArgoprojEventsV1alpha1WebhookEventSource webhookItem) {
    if (this.webhook == null) {
      this.webhook = new HashMap<>();
    }
    this.webhook.put(key, webhookItem);
    return this;
  }

  /**
   * Get webhook
   * @return webhook
   */
  @javax.annotation.Nullable
  public Map<String, IoArgoprojEventsV1alpha1WebhookEventSource> getWebhook() {
    return webhook;
  }

  public void setWebhook(@javax.annotation.Nullable Map<String, IoArgoprojEventsV1alpha1WebhookEventSource> webhook) {
    this.webhook = webhook;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoArgoprojEventsV1alpha1EventSourceSpec ioArgoprojEventsV1alpha1EventSourceSpec = (IoArgoprojEventsV1alpha1EventSourceSpec) o;
    return Objects.equals(this.amqp, ioArgoprojEventsV1alpha1EventSourceSpec.amqp) &&
        Objects.equals(this.azureEventsHub, ioArgoprojEventsV1alpha1EventSourceSpec.azureEventsHub) &&
        Objects.equals(this.azureQueueStorage, ioArgoprojEventsV1alpha1EventSourceSpec.azureQueueStorage) &&
        Objects.equals(this.azureServiceBus, ioArgoprojEventsV1alpha1EventSourceSpec.azureServiceBus) &&
        Objects.equals(this.bitbucket, ioArgoprojEventsV1alpha1EventSourceSpec.bitbucket) &&
        Objects.equals(this.bitbucketserver, ioArgoprojEventsV1alpha1EventSourceSpec.bitbucketserver) &&
        Objects.equals(this.calendar, ioArgoprojEventsV1alpha1EventSourceSpec.calendar) &&
        Objects.equals(this.emitter, ioArgoprojEventsV1alpha1EventSourceSpec.emitter) &&
        Objects.equals(this.eventBusName, ioArgoprojEventsV1alpha1EventSourceSpec.eventBusName) &&
        Objects.equals(this._file, ioArgoprojEventsV1alpha1EventSourceSpec._file) &&
        Objects.equals(this.generic, ioArgoprojEventsV1alpha1EventSourceSpec.generic) &&
        Objects.equals(this.gerrit, ioArgoprojEventsV1alpha1EventSourceSpec.gerrit) &&
        Objects.equals(this.github, ioArgoprojEventsV1alpha1EventSourceSpec.github) &&
        Objects.equals(this.gitlab, ioArgoprojEventsV1alpha1EventSourceSpec.gitlab) &&
        Objects.equals(this.hdfs, ioArgoprojEventsV1alpha1EventSourceSpec.hdfs) &&
        Objects.equals(this.kafka, ioArgoprojEventsV1alpha1EventSourceSpec.kafka) &&
        Objects.equals(this.minio, ioArgoprojEventsV1alpha1EventSourceSpec.minio) &&
        Objects.equals(this.mqtt, ioArgoprojEventsV1alpha1EventSourceSpec.mqtt) &&
        Objects.equals(this.nats, ioArgoprojEventsV1alpha1EventSourceSpec.nats) &&
        Objects.equals(this.nsq, ioArgoprojEventsV1alpha1EventSourceSpec.nsq) &&
        Objects.equals(this.pubSub, ioArgoprojEventsV1alpha1EventSourceSpec.pubSub) &&
        Objects.equals(this.pulsar, ioArgoprojEventsV1alpha1EventSourceSpec.pulsar) &&
        Objects.equals(this.redis, ioArgoprojEventsV1alpha1EventSourceSpec.redis) &&
        Objects.equals(this.redisStream, ioArgoprojEventsV1alpha1EventSourceSpec.redisStream) &&
        Objects.equals(this.replicas, ioArgoprojEventsV1alpha1EventSourceSpec.replicas) &&
        Objects.equals(this.resource, ioArgoprojEventsV1alpha1EventSourceSpec.resource) &&
        Objects.equals(this.service, ioArgoprojEventsV1alpha1EventSourceSpec.service) &&
        Objects.equals(this.sftp, ioArgoprojEventsV1alpha1EventSourceSpec.sftp) &&
        Objects.equals(this.slack, ioArgoprojEventsV1alpha1EventSourceSpec.slack) &&
        Objects.equals(this.sns, ioArgoprojEventsV1alpha1EventSourceSpec.sns) &&
        Objects.equals(this.sqs, ioArgoprojEventsV1alpha1EventSourceSpec.sqs) &&
        Objects.equals(this.storageGrid, ioArgoprojEventsV1alpha1EventSourceSpec.storageGrid) &&
        Objects.equals(this.stripe, ioArgoprojEventsV1alpha1EventSourceSpec.stripe) &&
        Objects.equals(this.template, ioArgoprojEventsV1alpha1EventSourceSpec.template) &&
        Objects.equals(this.webhook, ioArgoprojEventsV1alpha1EventSourceSpec.webhook);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amqp, azureEventsHub, azureQueueStorage, azureServiceBus, bitbucket, bitbucketserver, calendar, emitter, eventBusName, _file, generic, gerrit, github, gitlab, hdfs, kafka, minio, mqtt, nats, nsq, pubSub, pulsar, redis, redisStream, replicas, resource, service, sftp, slack, sns, sqs, storageGrid, stripe, template, webhook);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoArgoprojEventsV1alpha1EventSourceSpec {\n");
    sb.append("    amqp: ").append(toIndentedString(amqp)).append("\n");
    sb.append("    azureEventsHub: ").append(toIndentedString(azureEventsHub)).append("\n");
    sb.append("    azureQueueStorage: ").append(toIndentedString(azureQueueStorage)).append("\n");
    sb.append("    azureServiceBus: ").append(toIndentedString(azureServiceBus)).append("\n");
    sb.append("    bitbucket: ").append(toIndentedString(bitbucket)).append("\n");
    sb.append("    bitbucketserver: ").append(toIndentedString(bitbucketserver)).append("\n");
    sb.append("    calendar: ").append(toIndentedString(calendar)).append("\n");
    sb.append("    emitter: ").append(toIndentedString(emitter)).append("\n");
    sb.append("    eventBusName: ").append(toIndentedString(eventBusName)).append("\n");
    sb.append("    _file: ").append(toIndentedString(_file)).append("\n");
    sb.append("    generic: ").append(toIndentedString(generic)).append("\n");
    sb.append("    gerrit: ").append(toIndentedString(gerrit)).append("\n");
    sb.append("    github: ").append(toIndentedString(github)).append("\n");
    sb.append("    gitlab: ").append(toIndentedString(gitlab)).append("\n");
    sb.append("    hdfs: ").append(toIndentedString(hdfs)).append("\n");
    sb.append("    kafka: ").append(toIndentedString(kafka)).append("\n");
    sb.append("    minio: ").append(toIndentedString(minio)).append("\n");
    sb.append("    mqtt: ").append(toIndentedString(mqtt)).append("\n");
    sb.append("    nats: ").append(toIndentedString(nats)).append("\n");
    sb.append("    nsq: ").append(toIndentedString(nsq)).append("\n");
    sb.append("    pubSub: ").append(toIndentedString(pubSub)).append("\n");
    sb.append("    pulsar: ").append(toIndentedString(pulsar)).append("\n");
    sb.append("    redis: ").append(toIndentedString(redis)).append("\n");
    sb.append("    redisStream: ").append(toIndentedString(redisStream)).append("\n");
    sb.append("    replicas: ").append(toIndentedString(replicas)).append("\n");
    sb.append("    resource: ").append(toIndentedString(resource)).append("\n");
    sb.append("    service: ").append(toIndentedString(service)).append("\n");
    sb.append("    sftp: ").append(toIndentedString(sftp)).append("\n");
    sb.append("    slack: ").append(toIndentedString(slack)).append("\n");
    sb.append("    sns: ").append(toIndentedString(sns)).append("\n");
    sb.append("    sqs: ").append(toIndentedString(sqs)).append("\n");
    sb.append("    storageGrid: ").append(toIndentedString(storageGrid)).append("\n");
    sb.append("    stripe: ").append(toIndentedString(stripe)).append("\n");
    sb.append("    template: ").append(toIndentedString(template)).append("\n");
    sb.append("    webhook: ").append(toIndentedString(webhook)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("amqp");
    openapiFields.add("azureEventsHub");
    openapiFields.add("azureQueueStorage");
    openapiFields.add("azureServiceBus");
    openapiFields.add("bitbucket");
    openapiFields.add("bitbucketserver");
    openapiFields.add("calendar");
    openapiFields.add("emitter");
    openapiFields.add("eventBusName");
    openapiFields.add("file");
    openapiFields.add("generic");
    openapiFields.add("gerrit");
    openapiFields.add("github");
    openapiFields.add("gitlab");
    openapiFields.add("hdfs");
    openapiFields.add("kafka");
    openapiFields.add("minio");
    openapiFields.add("mqtt");
    openapiFields.add("nats");
    openapiFields.add("nsq");
    openapiFields.add("pubSub");
    openapiFields.add("pulsar");
    openapiFields.add("redis");
    openapiFields.add("redisStream");
    openapiFields.add("replicas");
    openapiFields.add("resource");
    openapiFields.add("service");
    openapiFields.add("sftp");
    openapiFields.add("slack");
    openapiFields.add("sns");
    openapiFields.add("sqs");
    openapiFields.add("storageGrid");
    openapiFields.add("stripe");
    openapiFields.add("template");
    openapiFields.add("webhook");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IoArgoprojEventsV1alpha1EventSourceSpec
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IoArgoprojEventsV1alpha1EventSourceSpec.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IoArgoprojEventsV1alpha1EventSourceSpec is not found in the empty JSON string", IoArgoprojEventsV1alpha1EventSourceSpec.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IoArgoprojEventsV1alpha1EventSourceSpec.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IoArgoprojEventsV1alpha1EventSourceSpec` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("eventBusName") != null && !jsonObj.get("eventBusName").isJsonNull()) && !jsonObj.get("eventBusName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `eventBusName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("eventBusName").toString()));
      }
      // validate the optional field `service`
      if (jsonObj.get("service") != null && !jsonObj.get("service").isJsonNull()) {
        IoArgoprojEventsV1alpha1Service.validateJsonElement(jsonObj.get("service"));
      }
      // validate the optional field `template`
      if (jsonObj.get("template") != null && !jsonObj.get("template").isJsonNull()) {
        IoArgoprojEventsV1alpha1Template.validateJsonElement(jsonObj.get("template"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IoArgoprojEventsV1alpha1EventSourceSpec.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IoArgoprojEventsV1alpha1EventSourceSpec' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IoArgoprojEventsV1alpha1EventSourceSpec> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IoArgoprojEventsV1alpha1EventSourceSpec.class));

       return (TypeAdapter<T>) new TypeAdapter<IoArgoprojEventsV1alpha1EventSourceSpec>() {
           @Override
           public void write(JsonWriter out, IoArgoprojEventsV1alpha1EventSourceSpec value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IoArgoprojEventsV1alpha1EventSourceSpec read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IoArgoprojEventsV1alpha1EventSourceSpec given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IoArgoprojEventsV1alpha1EventSourceSpec
   * @throws IOException if the JSON string is invalid with respect to IoArgoprojEventsV1alpha1EventSourceSpec
   */
  public static IoArgoprojEventsV1alpha1EventSourceSpec fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IoArgoprojEventsV1alpha1EventSourceSpec.class);
  }

  /**
   * Convert an instance of IoArgoprojEventsV1alpha1EventSourceSpec to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

