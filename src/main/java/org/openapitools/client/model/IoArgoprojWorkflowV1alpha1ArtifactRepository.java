/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1ArtifactoryArtifactRepository;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1AzureArtifactRepository;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1GCSArtifactRepository;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1HDFSArtifactRepository;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1OSSArtifactRepository;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1S3ArtifactRepository;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ArtifactRepository represents an artifact repository in which a controller will store its artifacts
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-24T03:51:41.763920791Z[Etc/UTC]", comments = "Generator version: 7.12.0-SNAPSHOT")
public class IoArgoprojWorkflowV1alpha1ArtifactRepository {
  public static final String SERIALIZED_NAME_ARCHIVE_LOGS = "archiveLogs";
  @SerializedName(SERIALIZED_NAME_ARCHIVE_LOGS)
  @javax.annotation.Nullable
  private Boolean archiveLogs;

  public static final String SERIALIZED_NAME_ARTIFACTORY = "artifactory";
  @SerializedName(SERIALIZED_NAME_ARTIFACTORY)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1ArtifactoryArtifactRepository artifactory;

  public static final String SERIALIZED_NAME_AZURE = "azure";
  @SerializedName(SERIALIZED_NAME_AZURE)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1AzureArtifactRepository azure;

  public static final String SERIALIZED_NAME_GCS = "gcs";
  @SerializedName(SERIALIZED_NAME_GCS)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1GCSArtifactRepository gcs;

  public static final String SERIALIZED_NAME_HDFS = "hdfs";
  @SerializedName(SERIALIZED_NAME_HDFS)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1HDFSArtifactRepository hdfs;

  public static final String SERIALIZED_NAME_OSS = "oss";
  @SerializedName(SERIALIZED_NAME_OSS)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1OSSArtifactRepository oss;

  public static final String SERIALIZED_NAME_S3 = "s3";
  @SerializedName(SERIALIZED_NAME_S3)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1S3ArtifactRepository s3;

  public IoArgoprojWorkflowV1alpha1ArtifactRepository() {
  }

  public IoArgoprojWorkflowV1alpha1ArtifactRepository archiveLogs(@javax.annotation.Nullable Boolean archiveLogs) {
    this.archiveLogs = archiveLogs;
    return this;
  }

  /**
   * ArchiveLogs enables log archiving
   * @return archiveLogs
   */
  @javax.annotation.Nullable
  public Boolean getArchiveLogs() {
    return archiveLogs;
  }

  public void setArchiveLogs(@javax.annotation.Nullable Boolean archiveLogs) {
    this.archiveLogs = archiveLogs;
  }


  public IoArgoprojWorkflowV1alpha1ArtifactRepository artifactory(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1ArtifactoryArtifactRepository artifactory) {
    this.artifactory = artifactory;
    return this;
  }

  /**
   * Get artifactory
   * @return artifactory
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1ArtifactoryArtifactRepository getArtifactory() {
    return artifactory;
  }

  public void setArtifactory(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1ArtifactoryArtifactRepository artifactory) {
    this.artifactory = artifactory;
  }


  public IoArgoprojWorkflowV1alpha1ArtifactRepository azure(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1AzureArtifactRepository azure) {
    this.azure = azure;
    return this;
  }

  /**
   * Get azure
   * @return azure
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1AzureArtifactRepository getAzure() {
    return azure;
  }

  public void setAzure(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1AzureArtifactRepository azure) {
    this.azure = azure;
  }


  public IoArgoprojWorkflowV1alpha1ArtifactRepository gcs(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1GCSArtifactRepository gcs) {
    this.gcs = gcs;
    return this;
  }

  /**
   * Get gcs
   * @return gcs
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1GCSArtifactRepository getGcs() {
    return gcs;
  }

  public void setGcs(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1GCSArtifactRepository gcs) {
    this.gcs = gcs;
  }


  public IoArgoprojWorkflowV1alpha1ArtifactRepository hdfs(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1HDFSArtifactRepository hdfs) {
    this.hdfs = hdfs;
    return this;
  }

  /**
   * Get hdfs
   * @return hdfs
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1HDFSArtifactRepository getHdfs() {
    return hdfs;
  }

  public void setHdfs(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1HDFSArtifactRepository hdfs) {
    this.hdfs = hdfs;
  }


  public IoArgoprojWorkflowV1alpha1ArtifactRepository oss(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1OSSArtifactRepository oss) {
    this.oss = oss;
    return this;
  }

  /**
   * Get oss
   * @return oss
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1OSSArtifactRepository getOss() {
    return oss;
  }

  public void setOss(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1OSSArtifactRepository oss) {
    this.oss = oss;
  }


  public IoArgoprojWorkflowV1alpha1ArtifactRepository s3(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1S3ArtifactRepository s3) {
    this.s3 = s3;
    return this;
  }

  /**
   * Get s3
   * @return s3
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1S3ArtifactRepository getS3() {
    return s3;
  }

  public void setS3(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1S3ArtifactRepository s3) {
    this.s3 = s3;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoArgoprojWorkflowV1alpha1ArtifactRepository ioArgoprojWorkflowV1alpha1ArtifactRepository = (IoArgoprojWorkflowV1alpha1ArtifactRepository) o;
    return Objects.equals(this.archiveLogs, ioArgoprojWorkflowV1alpha1ArtifactRepository.archiveLogs) &&
        Objects.equals(this.artifactory, ioArgoprojWorkflowV1alpha1ArtifactRepository.artifactory) &&
        Objects.equals(this.azure, ioArgoprojWorkflowV1alpha1ArtifactRepository.azure) &&
        Objects.equals(this.gcs, ioArgoprojWorkflowV1alpha1ArtifactRepository.gcs) &&
        Objects.equals(this.hdfs, ioArgoprojWorkflowV1alpha1ArtifactRepository.hdfs) &&
        Objects.equals(this.oss, ioArgoprojWorkflowV1alpha1ArtifactRepository.oss) &&
        Objects.equals(this.s3, ioArgoprojWorkflowV1alpha1ArtifactRepository.s3);
  }

  @Override
  public int hashCode() {
    return Objects.hash(archiveLogs, artifactory, azure, gcs, hdfs, oss, s3);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoArgoprojWorkflowV1alpha1ArtifactRepository {\n");
    sb.append("    archiveLogs: ").append(toIndentedString(archiveLogs)).append("\n");
    sb.append("    artifactory: ").append(toIndentedString(artifactory)).append("\n");
    sb.append("    azure: ").append(toIndentedString(azure)).append("\n");
    sb.append("    gcs: ").append(toIndentedString(gcs)).append("\n");
    sb.append("    hdfs: ").append(toIndentedString(hdfs)).append("\n");
    sb.append("    oss: ").append(toIndentedString(oss)).append("\n");
    sb.append("    s3: ").append(toIndentedString(s3)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("archiveLogs");
    openapiFields.add("artifactory");
    openapiFields.add("azure");
    openapiFields.add("gcs");
    openapiFields.add("hdfs");
    openapiFields.add("oss");
    openapiFields.add("s3");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IoArgoprojWorkflowV1alpha1ArtifactRepository
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IoArgoprojWorkflowV1alpha1ArtifactRepository.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IoArgoprojWorkflowV1alpha1ArtifactRepository is not found in the empty JSON string", IoArgoprojWorkflowV1alpha1ArtifactRepository.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IoArgoprojWorkflowV1alpha1ArtifactRepository.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IoArgoprojWorkflowV1alpha1ArtifactRepository` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `artifactory`
      if (jsonObj.get("artifactory") != null && !jsonObj.get("artifactory").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1ArtifactoryArtifactRepository.validateJsonElement(jsonObj.get("artifactory"));
      }
      // validate the optional field `azure`
      if (jsonObj.get("azure") != null && !jsonObj.get("azure").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1AzureArtifactRepository.validateJsonElement(jsonObj.get("azure"));
      }
      // validate the optional field `gcs`
      if (jsonObj.get("gcs") != null && !jsonObj.get("gcs").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1GCSArtifactRepository.validateJsonElement(jsonObj.get("gcs"));
      }
      // validate the optional field `hdfs`
      if (jsonObj.get("hdfs") != null && !jsonObj.get("hdfs").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1HDFSArtifactRepository.validateJsonElement(jsonObj.get("hdfs"));
      }
      // validate the optional field `oss`
      if (jsonObj.get("oss") != null && !jsonObj.get("oss").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1OSSArtifactRepository.validateJsonElement(jsonObj.get("oss"));
      }
      // validate the optional field `s3`
      if (jsonObj.get("s3") != null && !jsonObj.get("s3").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1S3ArtifactRepository.validateJsonElement(jsonObj.get("s3"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IoArgoprojWorkflowV1alpha1ArtifactRepository.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IoArgoprojWorkflowV1alpha1ArtifactRepository' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IoArgoprojWorkflowV1alpha1ArtifactRepository> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IoArgoprojWorkflowV1alpha1ArtifactRepository.class));

       return (TypeAdapter<T>) new TypeAdapter<IoArgoprojWorkflowV1alpha1ArtifactRepository>() {
           @Override
           public void write(JsonWriter out, IoArgoprojWorkflowV1alpha1ArtifactRepository value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IoArgoprojWorkflowV1alpha1ArtifactRepository read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IoArgoprojWorkflowV1alpha1ArtifactRepository given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IoArgoprojWorkflowV1alpha1ArtifactRepository
   * @throws IOException if the JSON string is invalid with respect to IoArgoprojWorkflowV1alpha1ArtifactRepository
   */
  public static IoArgoprojWorkflowV1alpha1ArtifactRepository fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IoArgoprojWorkflowV1alpha1ArtifactRepository.class);
  }

  /**
   * Convert an instance of IoArgoprojWorkflowV1alpha1ArtifactRepository to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

