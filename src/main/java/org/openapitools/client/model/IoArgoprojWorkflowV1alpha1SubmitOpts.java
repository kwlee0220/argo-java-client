/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.IoK8sApimachineryPkgApisMetaV1OwnerReference;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * SubmitOpts are workflow submission options
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-24T03:51:41.763920791Z[Etc/UTC]", comments = "Generator version: 7.12.0-SNAPSHOT")
public class IoArgoprojWorkflowV1alpha1SubmitOpts {
  public static final String SERIALIZED_NAME_ANNOTATIONS = "annotations";
  @SerializedName(SERIALIZED_NAME_ANNOTATIONS)
  @javax.annotation.Nullable
  private String annotations;

  public static final String SERIALIZED_NAME_DRY_RUN = "dryRun";
  @SerializedName(SERIALIZED_NAME_DRY_RUN)
  @javax.annotation.Nullable
  private Boolean dryRun;

  public static final String SERIALIZED_NAME_ENTRY_POINT = "entryPoint";
  @SerializedName(SERIALIZED_NAME_ENTRY_POINT)
  @javax.annotation.Nullable
  private String entryPoint;

  public static final String SERIALIZED_NAME_GENERATE_NAME = "generateName";
  @SerializedName(SERIALIZED_NAME_GENERATE_NAME)
  @javax.annotation.Nullable
  private String generateName;

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  @javax.annotation.Nullable
  private String labels;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  @javax.annotation.Nullable
  private String name;

  public static final String SERIALIZED_NAME_OWNER_REFERENCE = "ownerReference";
  @SerializedName(SERIALIZED_NAME_OWNER_REFERENCE)
  @javax.annotation.Nullable
  private IoK8sApimachineryPkgApisMetaV1OwnerReference ownerReference;

  public static final String SERIALIZED_NAME_PARAMETERS = "parameters";
  @SerializedName(SERIALIZED_NAME_PARAMETERS)
  @javax.annotation.Nullable
  private List<String> parameters = new ArrayList<>();

  public static final String SERIALIZED_NAME_POD_PRIORITY_CLASS_NAME = "podPriorityClassName";
  @SerializedName(SERIALIZED_NAME_POD_PRIORITY_CLASS_NAME)
  @javax.annotation.Nullable
  private String podPriorityClassName;

  public static final String SERIALIZED_NAME_PRIORITY = "priority";
  @SerializedName(SERIALIZED_NAME_PRIORITY)
  @javax.annotation.Nullable
  private Integer priority;

  public static final String SERIALIZED_NAME_SERVER_DRY_RUN = "serverDryRun";
  @SerializedName(SERIALIZED_NAME_SERVER_DRY_RUN)
  @javax.annotation.Nullable
  private Boolean serverDryRun;

  public static final String SERIALIZED_NAME_SERVICE_ACCOUNT = "serviceAccount";
  @SerializedName(SERIALIZED_NAME_SERVICE_ACCOUNT)
  @javax.annotation.Nullable
  private String serviceAccount;

  public IoArgoprojWorkflowV1alpha1SubmitOpts() {
  }

  public IoArgoprojWorkflowV1alpha1SubmitOpts annotations(@javax.annotation.Nullable String annotations) {
    this.annotations = annotations;
    return this;
  }

  /**
   * Annotations adds to metadata.labels
   * @return annotations
   */
  @javax.annotation.Nullable
  public String getAnnotations() {
    return annotations;
  }

  public void setAnnotations(@javax.annotation.Nullable String annotations) {
    this.annotations = annotations;
  }


  public IoArgoprojWorkflowV1alpha1SubmitOpts dryRun(@javax.annotation.Nullable Boolean dryRun) {
    this.dryRun = dryRun;
    return this;
  }

  /**
   * DryRun validates the workflow on the client-side without creating it. This option is not supported in API
   * @return dryRun
   */
  @javax.annotation.Nullable
  public Boolean getDryRun() {
    return dryRun;
  }

  public void setDryRun(@javax.annotation.Nullable Boolean dryRun) {
    this.dryRun = dryRun;
  }


  public IoArgoprojWorkflowV1alpha1SubmitOpts entryPoint(@javax.annotation.Nullable String entryPoint) {
    this.entryPoint = entryPoint;
    return this;
  }

  /**
   * Entrypoint overrides spec.entrypoint
   * @return entryPoint
   */
  @javax.annotation.Nullable
  public String getEntryPoint() {
    return entryPoint;
  }

  public void setEntryPoint(@javax.annotation.Nullable String entryPoint) {
    this.entryPoint = entryPoint;
  }


  public IoArgoprojWorkflowV1alpha1SubmitOpts generateName(@javax.annotation.Nullable String generateName) {
    this.generateName = generateName;
    return this;
  }

  /**
   * GenerateName overrides metadata.generateName
   * @return generateName
   */
  @javax.annotation.Nullable
  public String getGenerateName() {
    return generateName;
  }

  public void setGenerateName(@javax.annotation.Nullable String generateName) {
    this.generateName = generateName;
  }


  public IoArgoprojWorkflowV1alpha1SubmitOpts labels(@javax.annotation.Nullable String labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Labels adds to metadata.labels
   * @return labels
   */
  @javax.annotation.Nullable
  public String getLabels() {
    return labels;
  }

  public void setLabels(@javax.annotation.Nullable String labels) {
    this.labels = labels;
  }


  public IoArgoprojWorkflowV1alpha1SubmitOpts name(@javax.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * Name overrides metadata.name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(@javax.annotation.Nullable String name) {
    this.name = name;
  }


  public IoArgoprojWorkflowV1alpha1SubmitOpts ownerReference(@javax.annotation.Nullable IoK8sApimachineryPkgApisMetaV1OwnerReference ownerReference) {
    this.ownerReference = ownerReference;
    return this;
  }

  /**
   * Get ownerReference
   * @return ownerReference
   */
  @javax.annotation.Nullable
  public IoK8sApimachineryPkgApisMetaV1OwnerReference getOwnerReference() {
    return ownerReference;
  }

  public void setOwnerReference(@javax.annotation.Nullable IoK8sApimachineryPkgApisMetaV1OwnerReference ownerReference) {
    this.ownerReference = ownerReference;
  }


  public IoArgoprojWorkflowV1alpha1SubmitOpts parameters(@javax.annotation.Nullable List<String> parameters) {
    this.parameters = parameters;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1SubmitOpts addParametersItem(String parametersItem) {
    if (this.parameters == null) {
      this.parameters = new ArrayList<>();
    }
    this.parameters.add(parametersItem);
    return this;
  }

  /**
   * Parameters passes input parameters to workflow
   * @return parameters
   */
  @javax.annotation.Nullable
  public List<String> getParameters() {
    return parameters;
  }

  public void setParameters(@javax.annotation.Nullable List<String> parameters) {
    this.parameters = parameters;
  }


  public IoArgoprojWorkflowV1alpha1SubmitOpts podPriorityClassName(@javax.annotation.Nullable String podPriorityClassName) {
    this.podPriorityClassName = podPriorityClassName;
    return this;
  }

  /**
   * Set the podPriorityClassName of the workflow
   * @return podPriorityClassName
   */
  @javax.annotation.Nullable
  public String getPodPriorityClassName() {
    return podPriorityClassName;
  }

  public void setPodPriorityClassName(@javax.annotation.Nullable String podPriorityClassName) {
    this.podPriorityClassName = podPriorityClassName;
  }


  public IoArgoprojWorkflowV1alpha1SubmitOpts priority(@javax.annotation.Nullable Integer priority) {
    this.priority = priority;
    return this;
  }

  /**
   * Priority is used if controller is configured to process limited number of workflows in parallel, higher priority workflows are processed first.
   * @return priority
   */
  @javax.annotation.Nullable
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(@javax.annotation.Nullable Integer priority) {
    this.priority = priority;
  }


  public IoArgoprojWorkflowV1alpha1SubmitOpts serverDryRun(@javax.annotation.Nullable Boolean serverDryRun) {
    this.serverDryRun = serverDryRun;
    return this;
  }

  /**
   * ServerDryRun validates the workflow on the server-side without creating it
   * @return serverDryRun
   */
  @javax.annotation.Nullable
  public Boolean getServerDryRun() {
    return serverDryRun;
  }

  public void setServerDryRun(@javax.annotation.Nullable Boolean serverDryRun) {
    this.serverDryRun = serverDryRun;
  }


  public IoArgoprojWorkflowV1alpha1SubmitOpts serviceAccount(@javax.annotation.Nullable String serviceAccount) {
    this.serviceAccount = serviceAccount;
    return this;
  }

  /**
   * ServiceAccount runs all pods in the workflow using specified ServiceAccount.
   * @return serviceAccount
   */
  @javax.annotation.Nullable
  public String getServiceAccount() {
    return serviceAccount;
  }

  public void setServiceAccount(@javax.annotation.Nullable String serviceAccount) {
    this.serviceAccount = serviceAccount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoArgoprojWorkflowV1alpha1SubmitOpts ioArgoprojWorkflowV1alpha1SubmitOpts = (IoArgoprojWorkflowV1alpha1SubmitOpts) o;
    return Objects.equals(this.annotations, ioArgoprojWorkflowV1alpha1SubmitOpts.annotations) &&
        Objects.equals(this.dryRun, ioArgoprojWorkflowV1alpha1SubmitOpts.dryRun) &&
        Objects.equals(this.entryPoint, ioArgoprojWorkflowV1alpha1SubmitOpts.entryPoint) &&
        Objects.equals(this.generateName, ioArgoprojWorkflowV1alpha1SubmitOpts.generateName) &&
        Objects.equals(this.labels, ioArgoprojWorkflowV1alpha1SubmitOpts.labels) &&
        Objects.equals(this.name, ioArgoprojWorkflowV1alpha1SubmitOpts.name) &&
        Objects.equals(this.ownerReference, ioArgoprojWorkflowV1alpha1SubmitOpts.ownerReference) &&
        Objects.equals(this.parameters, ioArgoprojWorkflowV1alpha1SubmitOpts.parameters) &&
        Objects.equals(this.podPriorityClassName, ioArgoprojWorkflowV1alpha1SubmitOpts.podPriorityClassName) &&
        Objects.equals(this.priority, ioArgoprojWorkflowV1alpha1SubmitOpts.priority) &&
        Objects.equals(this.serverDryRun, ioArgoprojWorkflowV1alpha1SubmitOpts.serverDryRun) &&
        Objects.equals(this.serviceAccount, ioArgoprojWorkflowV1alpha1SubmitOpts.serviceAccount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(annotations, dryRun, entryPoint, generateName, labels, name, ownerReference, parameters, podPriorityClassName, priority, serverDryRun, serviceAccount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoArgoprojWorkflowV1alpha1SubmitOpts {\n");
    sb.append("    annotations: ").append(toIndentedString(annotations)).append("\n");
    sb.append("    dryRun: ").append(toIndentedString(dryRun)).append("\n");
    sb.append("    entryPoint: ").append(toIndentedString(entryPoint)).append("\n");
    sb.append("    generateName: ").append(toIndentedString(generateName)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    ownerReference: ").append(toIndentedString(ownerReference)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    podPriorityClassName: ").append(toIndentedString(podPriorityClassName)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    serverDryRun: ").append(toIndentedString(serverDryRun)).append("\n");
    sb.append("    serviceAccount: ").append(toIndentedString(serviceAccount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("annotations");
    openapiFields.add("dryRun");
    openapiFields.add("entryPoint");
    openapiFields.add("generateName");
    openapiFields.add("labels");
    openapiFields.add("name");
    openapiFields.add("ownerReference");
    openapiFields.add("parameters");
    openapiFields.add("podPriorityClassName");
    openapiFields.add("priority");
    openapiFields.add("serverDryRun");
    openapiFields.add("serviceAccount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IoArgoprojWorkflowV1alpha1SubmitOpts
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IoArgoprojWorkflowV1alpha1SubmitOpts.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IoArgoprojWorkflowV1alpha1SubmitOpts is not found in the empty JSON string", IoArgoprojWorkflowV1alpha1SubmitOpts.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IoArgoprojWorkflowV1alpha1SubmitOpts.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IoArgoprojWorkflowV1alpha1SubmitOpts` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("annotations") != null && !jsonObj.get("annotations").isJsonNull()) && !jsonObj.get("annotations").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `annotations` to be a primitive type in the JSON string but got `%s`", jsonObj.get("annotations").toString()));
      }
      if ((jsonObj.get("entryPoint") != null && !jsonObj.get("entryPoint").isJsonNull()) && !jsonObj.get("entryPoint").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `entryPoint` to be a primitive type in the JSON string but got `%s`", jsonObj.get("entryPoint").toString()));
      }
      if ((jsonObj.get("generateName") != null && !jsonObj.get("generateName").isJsonNull()) && !jsonObj.get("generateName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `generateName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("generateName").toString()));
      }
      if ((jsonObj.get("labels") != null && !jsonObj.get("labels").isJsonNull()) && !jsonObj.get("labels").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `labels` to be a primitive type in the JSON string but got `%s`", jsonObj.get("labels").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `ownerReference`
      if (jsonObj.get("ownerReference") != null && !jsonObj.get("ownerReference").isJsonNull()) {
        IoK8sApimachineryPkgApisMetaV1OwnerReference.validateJsonElement(jsonObj.get("ownerReference"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("parameters") != null && !jsonObj.get("parameters").isJsonNull() && !jsonObj.get("parameters").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `parameters` to be an array in the JSON string but got `%s`", jsonObj.get("parameters").toString()));
      }
      if ((jsonObj.get("podPriorityClassName") != null && !jsonObj.get("podPriorityClassName").isJsonNull()) && !jsonObj.get("podPriorityClassName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `podPriorityClassName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("podPriorityClassName").toString()));
      }
      if ((jsonObj.get("serviceAccount") != null && !jsonObj.get("serviceAccount").isJsonNull()) && !jsonObj.get("serviceAccount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serviceAccount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serviceAccount").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IoArgoprojWorkflowV1alpha1SubmitOpts.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IoArgoprojWorkflowV1alpha1SubmitOpts' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IoArgoprojWorkflowV1alpha1SubmitOpts> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IoArgoprojWorkflowV1alpha1SubmitOpts.class));

       return (TypeAdapter<T>) new TypeAdapter<IoArgoprojWorkflowV1alpha1SubmitOpts>() {
           @Override
           public void write(JsonWriter out, IoArgoprojWorkflowV1alpha1SubmitOpts value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IoArgoprojWorkflowV1alpha1SubmitOpts read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IoArgoprojWorkflowV1alpha1SubmitOpts given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IoArgoprojWorkflowV1alpha1SubmitOpts
   * @throws IOException if the JSON string is invalid with respect to IoArgoprojWorkflowV1alpha1SubmitOpts
   */
  public static IoArgoprojWorkflowV1alpha1SubmitOpts fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IoArgoprojWorkflowV1alpha1SubmitOpts.class);
  }

  /**
   * Convert an instance of IoArgoprojWorkflowV1alpha1SubmitOpts to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

