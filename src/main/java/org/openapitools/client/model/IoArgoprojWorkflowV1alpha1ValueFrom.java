/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.IoK8sApiCoreV1ConfigMapKeySelector;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ValueFrom describes a location in which to obtain the value to a parameter
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-24T03:51:41.763920791Z[Etc/UTC]", comments = "Generator version: 7.12.0-SNAPSHOT")
public class IoArgoprojWorkflowV1alpha1ValueFrom {
  public static final String SERIALIZED_NAME_CONFIG_MAP_KEY_REF = "configMapKeyRef";
  @SerializedName(SERIALIZED_NAME_CONFIG_MAP_KEY_REF)
  @javax.annotation.Nullable
  private IoK8sApiCoreV1ConfigMapKeySelector configMapKeyRef;

  public static final String SERIALIZED_NAME_DEFAULT = "default";
  @SerializedName(SERIALIZED_NAME_DEFAULT)
  @javax.annotation.Nullable
  private String _default;

  public static final String SERIALIZED_NAME_EVENT = "event";
  @SerializedName(SERIALIZED_NAME_EVENT)
  @javax.annotation.Nullable
  private String event;

  public static final String SERIALIZED_NAME_EXPRESSION = "expression";
  @SerializedName(SERIALIZED_NAME_EXPRESSION)
  @javax.annotation.Nullable
  private String expression;

  public static final String SERIALIZED_NAME_JQ_FILTER = "jqFilter";
  @SerializedName(SERIALIZED_NAME_JQ_FILTER)
  @javax.annotation.Nullable
  private String jqFilter;

  public static final String SERIALIZED_NAME_JSON_PATH = "jsonPath";
  @SerializedName(SERIALIZED_NAME_JSON_PATH)
  @javax.annotation.Nullable
  private String jsonPath;

  public static final String SERIALIZED_NAME_PARAMETER = "parameter";
  @SerializedName(SERIALIZED_NAME_PARAMETER)
  @javax.annotation.Nullable
  private String parameter;

  public static final String SERIALIZED_NAME_PATH = "path";
  @SerializedName(SERIALIZED_NAME_PATH)
  @javax.annotation.Nullable
  private String path;

  public static final String SERIALIZED_NAME_SUPPLIED = "supplied";
  @SerializedName(SERIALIZED_NAME_SUPPLIED)
  @javax.annotation.Nullable
  private Object supplied;

  public IoArgoprojWorkflowV1alpha1ValueFrom() {
  }

  public IoArgoprojWorkflowV1alpha1ValueFrom configMapKeyRef(@javax.annotation.Nullable IoK8sApiCoreV1ConfigMapKeySelector configMapKeyRef) {
    this.configMapKeyRef = configMapKeyRef;
    return this;
  }

  /**
   * Get configMapKeyRef
   * @return configMapKeyRef
   */
  @javax.annotation.Nullable
  public IoK8sApiCoreV1ConfigMapKeySelector getConfigMapKeyRef() {
    return configMapKeyRef;
  }

  public void setConfigMapKeyRef(@javax.annotation.Nullable IoK8sApiCoreV1ConfigMapKeySelector configMapKeyRef) {
    this.configMapKeyRef = configMapKeyRef;
  }


  public IoArgoprojWorkflowV1alpha1ValueFrom _default(@javax.annotation.Nullable String _default) {
    this._default = _default;
    return this;
  }

  /**
   * Default specifies a value to be used if retrieving the value from the specified source fails
   * @return _default
   */
  @javax.annotation.Nullable
  public String getDefault() {
    return _default;
  }

  public void setDefault(@javax.annotation.Nullable String _default) {
    this._default = _default;
  }


  public IoArgoprojWorkflowV1alpha1ValueFrom event(@javax.annotation.Nullable String event) {
    this.event = event;
    return this;
  }

  /**
   * Selector (https://github.com/expr-lang/expr) that is evaluated against the event to get the value of the parameter. E.g. &#x60;payload.message&#x60;
   * @return event
   */
  @javax.annotation.Nullable
  public String getEvent() {
    return event;
  }

  public void setEvent(@javax.annotation.Nullable String event) {
    this.event = event;
  }


  public IoArgoprojWorkflowV1alpha1ValueFrom expression(@javax.annotation.Nullable String expression) {
    this.expression = expression;
    return this;
  }

  /**
   * Expression, if defined, is evaluated to specify the value for the parameter
   * @return expression
   */
  @javax.annotation.Nullable
  public String getExpression() {
    return expression;
  }

  public void setExpression(@javax.annotation.Nullable String expression) {
    this.expression = expression;
  }


  public IoArgoprojWorkflowV1alpha1ValueFrom jqFilter(@javax.annotation.Nullable String jqFilter) {
    this.jqFilter = jqFilter;
    return this;
  }

  /**
   * JQFilter expression against the resource object in resource templates
   * @return jqFilter
   */
  @javax.annotation.Nullable
  public String getJqFilter() {
    return jqFilter;
  }

  public void setJqFilter(@javax.annotation.Nullable String jqFilter) {
    this.jqFilter = jqFilter;
  }


  public IoArgoprojWorkflowV1alpha1ValueFrom jsonPath(@javax.annotation.Nullable String jsonPath) {
    this.jsonPath = jsonPath;
    return this;
  }

  /**
   * JSONPath of a resource to retrieve an output parameter value from in resource templates
   * @return jsonPath
   */
  @javax.annotation.Nullable
  public String getJsonPath() {
    return jsonPath;
  }

  public void setJsonPath(@javax.annotation.Nullable String jsonPath) {
    this.jsonPath = jsonPath;
  }


  public IoArgoprojWorkflowV1alpha1ValueFrom parameter(@javax.annotation.Nullable String parameter) {
    this.parameter = parameter;
    return this;
  }

  /**
   * Parameter reference to a step or dag task in which to retrieve an output parameter value from (e.g. &#39;{{steps.mystep.outputs.myparam}}&#39;)
   * @return parameter
   */
  @javax.annotation.Nullable
  public String getParameter() {
    return parameter;
  }

  public void setParameter(@javax.annotation.Nullable String parameter) {
    this.parameter = parameter;
  }


  public IoArgoprojWorkflowV1alpha1ValueFrom path(@javax.annotation.Nullable String path) {
    this.path = path;
    return this;
  }

  /**
   * Path in the container to retrieve an output parameter value from in container templates
   * @return path
   */
  @javax.annotation.Nullable
  public String getPath() {
    return path;
  }

  public void setPath(@javax.annotation.Nullable String path) {
    this.path = path;
  }


  public IoArgoprojWorkflowV1alpha1ValueFrom supplied(@javax.annotation.Nullable Object supplied) {
    this.supplied = supplied;
    return this;
  }

  /**
   * SuppliedValueFrom is a placeholder for a value to be filled in directly, either through the CLI, API, etc.
   * @return supplied
   */
  @javax.annotation.Nullable
  public Object getSupplied() {
    return supplied;
  }

  public void setSupplied(@javax.annotation.Nullable Object supplied) {
    this.supplied = supplied;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoArgoprojWorkflowV1alpha1ValueFrom ioArgoprojWorkflowV1alpha1ValueFrom = (IoArgoprojWorkflowV1alpha1ValueFrom) o;
    return Objects.equals(this.configMapKeyRef, ioArgoprojWorkflowV1alpha1ValueFrom.configMapKeyRef) &&
        Objects.equals(this._default, ioArgoprojWorkflowV1alpha1ValueFrom._default) &&
        Objects.equals(this.event, ioArgoprojWorkflowV1alpha1ValueFrom.event) &&
        Objects.equals(this.expression, ioArgoprojWorkflowV1alpha1ValueFrom.expression) &&
        Objects.equals(this.jqFilter, ioArgoprojWorkflowV1alpha1ValueFrom.jqFilter) &&
        Objects.equals(this.jsonPath, ioArgoprojWorkflowV1alpha1ValueFrom.jsonPath) &&
        Objects.equals(this.parameter, ioArgoprojWorkflowV1alpha1ValueFrom.parameter) &&
        Objects.equals(this.path, ioArgoprojWorkflowV1alpha1ValueFrom.path) &&
        Objects.equals(this.supplied, ioArgoprojWorkflowV1alpha1ValueFrom.supplied);
  }

  @Override
  public int hashCode() {
    return Objects.hash(configMapKeyRef, _default, event, expression, jqFilter, jsonPath, parameter, path, supplied);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoArgoprojWorkflowV1alpha1ValueFrom {\n");
    sb.append("    configMapKeyRef: ").append(toIndentedString(configMapKeyRef)).append("\n");
    sb.append("    _default: ").append(toIndentedString(_default)).append("\n");
    sb.append("    event: ").append(toIndentedString(event)).append("\n");
    sb.append("    expression: ").append(toIndentedString(expression)).append("\n");
    sb.append("    jqFilter: ").append(toIndentedString(jqFilter)).append("\n");
    sb.append("    jsonPath: ").append(toIndentedString(jsonPath)).append("\n");
    sb.append("    parameter: ").append(toIndentedString(parameter)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    supplied: ").append(toIndentedString(supplied)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("configMapKeyRef");
    openapiFields.add("default");
    openapiFields.add("event");
    openapiFields.add("expression");
    openapiFields.add("jqFilter");
    openapiFields.add("jsonPath");
    openapiFields.add("parameter");
    openapiFields.add("path");
    openapiFields.add("supplied");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IoArgoprojWorkflowV1alpha1ValueFrom
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IoArgoprojWorkflowV1alpha1ValueFrom.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IoArgoprojWorkflowV1alpha1ValueFrom is not found in the empty JSON string", IoArgoprojWorkflowV1alpha1ValueFrom.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IoArgoprojWorkflowV1alpha1ValueFrom.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IoArgoprojWorkflowV1alpha1ValueFrom` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `configMapKeyRef`
      if (jsonObj.get("configMapKeyRef") != null && !jsonObj.get("configMapKeyRef").isJsonNull()) {
        IoK8sApiCoreV1ConfigMapKeySelector.validateJsonElement(jsonObj.get("configMapKeyRef"));
      }
      if ((jsonObj.get("default") != null && !jsonObj.get("default").isJsonNull()) && !jsonObj.get("default").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `default` to be a primitive type in the JSON string but got `%s`", jsonObj.get("default").toString()));
      }
      if ((jsonObj.get("event") != null && !jsonObj.get("event").isJsonNull()) && !jsonObj.get("event").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `event` to be a primitive type in the JSON string but got `%s`", jsonObj.get("event").toString()));
      }
      if ((jsonObj.get("expression") != null && !jsonObj.get("expression").isJsonNull()) && !jsonObj.get("expression").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `expression` to be a primitive type in the JSON string but got `%s`", jsonObj.get("expression").toString()));
      }
      if ((jsonObj.get("jqFilter") != null && !jsonObj.get("jqFilter").isJsonNull()) && !jsonObj.get("jqFilter").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jqFilter` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jqFilter").toString()));
      }
      if ((jsonObj.get("jsonPath") != null && !jsonObj.get("jsonPath").isJsonNull()) && !jsonObj.get("jsonPath").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jsonPath` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jsonPath").toString()));
      }
      if ((jsonObj.get("parameter") != null && !jsonObj.get("parameter").isJsonNull()) && !jsonObj.get("parameter").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parameter` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parameter").toString()));
      }
      if ((jsonObj.get("path") != null && !jsonObj.get("path").isJsonNull()) && !jsonObj.get("path").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `path` to be a primitive type in the JSON string but got `%s`", jsonObj.get("path").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IoArgoprojWorkflowV1alpha1ValueFrom.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IoArgoprojWorkflowV1alpha1ValueFrom' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IoArgoprojWorkflowV1alpha1ValueFrom> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IoArgoprojWorkflowV1alpha1ValueFrom.class));

       return (TypeAdapter<T>) new TypeAdapter<IoArgoprojWorkflowV1alpha1ValueFrom>() {
           @Override
           public void write(JsonWriter out, IoArgoprojWorkflowV1alpha1ValueFrom value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IoArgoprojWorkflowV1alpha1ValueFrom read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IoArgoprojWorkflowV1alpha1ValueFrom given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IoArgoprojWorkflowV1alpha1ValueFrom
   * @throws IOException if the JSON string is invalid with respect to IoArgoprojWorkflowV1alpha1ValueFrom
   */
  public static IoArgoprojWorkflowV1alpha1ValueFrom fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IoArgoprojWorkflowV1alpha1ValueFrom.class);
  }

  /**
   * Convert an instance of IoArgoprojWorkflowV1alpha1ValueFrom to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

