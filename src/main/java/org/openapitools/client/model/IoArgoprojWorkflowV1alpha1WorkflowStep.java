/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1Arguments;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1ContinueOn;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1LifecycleHook;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1Sequence;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1Template;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1TemplateRef;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * WorkflowStep is a reference to a template to execute in a series of step
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-24T03:51:41.763920791Z[Etc/UTC]", comments = "Generator version: 7.12.0-SNAPSHOT")
public class IoArgoprojWorkflowV1alpha1WorkflowStep {
  public static final String SERIALIZED_NAME_ARGUMENTS = "arguments";
  @SerializedName(SERIALIZED_NAME_ARGUMENTS)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1Arguments arguments;

  public static final String SERIALIZED_NAME_CONTINUE_ON = "continueOn";
  @SerializedName(SERIALIZED_NAME_CONTINUE_ON)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1ContinueOn continueOn;

  public static final String SERIALIZED_NAME_HOOKS = "hooks";
  @SerializedName(SERIALIZED_NAME_HOOKS)
  @javax.annotation.Nullable
  private Map<String, IoArgoprojWorkflowV1alpha1LifecycleHook> hooks = new HashMap<>();

  public static final String SERIALIZED_NAME_INLINE = "inline";
  @SerializedName(SERIALIZED_NAME_INLINE)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1Template inline;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  @javax.annotation.Nullable
  private String name;

  public static final String SERIALIZED_NAME_ON_EXIT = "onExit";
  @SerializedName(SERIALIZED_NAME_ON_EXIT)
  @javax.annotation.Nullable
  private String onExit;

  public static final String SERIALIZED_NAME_TEMPLATE = "template";
  @SerializedName(SERIALIZED_NAME_TEMPLATE)
  @javax.annotation.Nullable
  private String template;

  public static final String SERIALIZED_NAME_TEMPLATE_REF = "templateRef";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_REF)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1TemplateRef templateRef;

  public static final String SERIALIZED_NAME_WHEN = "when";
  @SerializedName(SERIALIZED_NAME_WHEN)
  @javax.annotation.Nullable
  private String when;

  public static final String SERIALIZED_NAME_WITH_ITEMS = "withItems";
  @SerializedName(SERIALIZED_NAME_WITH_ITEMS)
  @javax.annotation.Nullable
  private List<Object> withItems = new ArrayList<>();

  public static final String SERIALIZED_NAME_WITH_PARAM = "withParam";
  @SerializedName(SERIALIZED_NAME_WITH_PARAM)
  @javax.annotation.Nullable
  private String withParam;

  public static final String SERIALIZED_NAME_WITH_SEQUENCE = "withSequence";
  @SerializedName(SERIALIZED_NAME_WITH_SEQUENCE)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1Sequence withSequence;

  public IoArgoprojWorkflowV1alpha1WorkflowStep() {
  }

  public IoArgoprojWorkflowV1alpha1WorkflowStep arguments(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1Arguments arguments) {
    this.arguments = arguments;
    return this;
  }

  /**
   * Get arguments
   * @return arguments
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1Arguments getArguments() {
    return arguments;
  }

  public void setArguments(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1Arguments arguments) {
    this.arguments = arguments;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowStep continueOn(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1ContinueOn continueOn) {
    this.continueOn = continueOn;
    return this;
  }

  /**
   * Get continueOn
   * @return continueOn
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1ContinueOn getContinueOn() {
    return continueOn;
  }

  public void setContinueOn(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1ContinueOn continueOn) {
    this.continueOn = continueOn;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowStep hooks(@javax.annotation.Nullable Map<String, IoArgoprojWorkflowV1alpha1LifecycleHook> hooks) {
    this.hooks = hooks;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1WorkflowStep putHooksItem(String key, IoArgoprojWorkflowV1alpha1LifecycleHook hooksItem) {
    if (this.hooks == null) {
      this.hooks = new HashMap<>();
    }
    this.hooks.put(key, hooksItem);
    return this;
  }

  /**
   * Hooks holds the lifecycle hook which is invoked at lifecycle of step, irrespective of the success, failure, or error status of the primary step
   * @return hooks
   */
  @javax.annotation.Nullable
  public Map<String, IoArgoprojWorkflowV1alpha1LifecycleHook> getHooks() {
    return hooks;
  }

  public void setHooks(@javax.annotation.Nullable Map<String, IoArgoprojWorkflowV1alpha1LifecycleHook> hooks) {
    this.hooks = hooks;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowStep inline(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1Template inline) {
    this.inline = inline;
    return this;
  }

  /**
   * Get inline
   * @return inline
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1Template getInline() {
    return inline;
  }

  public void setInline(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1Template inline) {
    this.inline = inline;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowStep name(@javax.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * Name of the step
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(@javax.annotation.Nullable String name) {
    this.name = name;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowStep onExit(@javax.annotation.Nullable String onExit) {
    this.onExit = onExit;
    return this;
  }

  /**
   * OnExit is a template reference which is invoked at the end of the template, irrespective of the success, failure, or error of the primary template. DEPRECATED: Use Hooks[exit].Template instead.
   * @return onExit
   */
  @javax.annotation.Nullable
  public String getOnExit() {
    return onExit;
  }

  public void setOnExit(@javax.annotation.Nullable String onExit) {
    this.onExit = onExit;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowStep template(@javax.annotation.Nullable String template) {
    this.template = template;
    return this;
  }

  /**
   * Template is the name of the template to execute as the step
   * @return template
   */
  @javax.annotation.Nullable
  public String getTemplate() {
    return template;
  }

  public void setTemplate(@javax.annotation.Nullable String template) {
    this.template = template;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowStep templateRef(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1TemplateRef templateRef) {
    this.templateRef = templateRef;
    return this;
  }

  /**
   * Get templateRef
   * @return templateRef
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1TemplateRef getTemplateRef() {
    return templateRef;
  }

  public void setTemplateRef(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1TemplateRef templateRef) {
    this.templateRef = templateRef;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowStep when(@javax.annotation.Nullable String when) {
    this.when = when;
    return this;
  }

  /**
   * When is an expression in which the step should conditionally execute
   * @return when
   */
  @javax.annotation.Nullable
  public String getWhen() {
    return when;
  }

  public void setWhen(@javax.annotation.Nullable String when) {
    this.when = when;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowStep withItems(@javax.annotation.Nullable List<Object> withItems) {
    this.withItems = withItems;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1WorkflowStep addWithItemsItem(Object withItemsItem) {
    if (this.withItems == null) {
      this.withItems = new ArrayList<>();
    }
    this.withItems.add(withItemsItem);
    return this;
  }

  /**
   * WithItems expands a step into multiple parallel steps from the items in the list Note: The structure of WithItems is free-form, so we need \&quot;x-kubernetes-preserve-unknown-fields: true\&quot; in the validation schema.
   * @return withItems
   */
  @javax.annotation.Nullable
  public List<Object> getWithItems() {
    return withItems;
  }

  public void setWithItems(@javax.annotation.Nullable List<Object> withItems) {
    this.withItems = withItems;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowStep withParam(@javax.annotation.Nullable String withParam) {
    this.withParam = withParam;
    return this;
  }

  /**
   * WithParam expands a step into multiple parallel steps from the value in the parameter, which is expected to be a JSON list.
   * @return withParam
   */
  @javax.annotation.Nullable
  public String getWithParam() {
    return withParam;
  }

  public void setWithParam(@javax.annotation.Nullable String withParam) {
    this.withParam = withParam;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowStep withSequence(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1Sequence withSequence) {
    this.withSequence = withSequence;
    return this;
  }

  /**
   * Get withSequence
   * @return withSequence
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1Sequence getWithSequence() {
    return withSequence;
  }

  public void setWithSequence(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1Sequence withSequence) {
    this.withSequence = withSequence;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoArgoprojWorkflowV1alpha1WorkflowStep ioArgoprojWorkflowV1alpha1WorkflowStep = (IoArgoprojWorkflowV1alpha1WorkflowStep) o;
    return Objects.equals(this.arguments, ioArgoprojWorkflowV1alpha1WorkflowStep.arguments) &&
        Objects.equals(this.continueOn, ioArgoprojWorkflowV1alpha1WorkflowStep.continueOn) &&
        Objects.equals(this.hooks, ioArgoprojWorkflowV1alpha1WorkflowStep.hooks) &&
        Objects.equals(this.inline, ioArgoprojWorkflowV1alpha1WorkflowStep.inline) &&
        Objects.equals(this.name, ioArgoprojWorkflowV1alpha1WorkflowStep.name) &&
        Objects.equals(this.onExit, ioArgoprojWorkflowV1alpha1WorkflowStep.onExit) &&
        Objects.equals(this.template, ioArgoprojWorkflowV1alpha1WorkflowStep.template) &&
        Objects.equals(this.templateRef, ioArgoprojWorkflowV1alpha1WorkflowStep.templateRef) &&
        Objects.equals(this.when, ioArgoprojWorkflowV1alpha1WorkflowStep.when) &&
        Objects.equals(this.withItems, ioArgoprojWorkflowV1alpha1WorkflowStep.withItems) &&
        Objects.equals(this.withParam, ioArgoprojWorkflowV1alpha1WorkflowStep.withParam) &&
        Objects.equals(this.withSequence, ioArgoprojWorkflowV1alpha1WorkflowStep.withSequence);
  }

  @Override
  public int hashCode() {
    return Objects.hash(arguments, continueOn, hooks, inline, name, onExit, template, templateRef, when, withItems, withParam, withSequence);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoArgoprojWorkflowV1alpha1WorkflowStep {\n");
    sb.append("    arguments: ").append(toIndentedString(arguments)).append("\n");
    sb.append("    continueOn: ").append(toIndentedString(continueOn)).append("\n");
    sb.append("    hooks: ").append(toIndentedString(hooks)).append("\n");
    sb.append("    inline: ").append(toIndentedString(inline)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    onExit: ").append(toIndentedString(onExit)).append("\n");
    sb.append("    template: ").append(toIndentedString(template)).append("\n");
    sb.append("    templateRef: ").append(toIndentedString(templateRef)).append("\n");
    sb.append("    when: ").append(toIndentedString(when)).append("\n");
    sb.append("    withItems: ").append(toIndentedString(withItems)).append("\n");
    sb.append("    withParam: ").append(toIndentedString(withParam)).append("\n");
    sb.append("    withSequence: ").append(toIndentedString(withSequence)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("arguments");
    openapiFields.add("continueOn");
    openapiFields.add("hooks");
    openapiFields.add("inline");
    openapiFields.add("name");
    openapiFields.add("onExit");
    openapiFields.add("template");
    openapiFields.add("templateRef");
    openapiFields.add("when");
    openapiFields.add("withItems");
    openapiFields.add("withParam");
    openapiFields.add("withSequence");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IoArgoprojWorkflowV1alpha1WorkflowStep
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IoArgoprojWorkflowV1alpha1WorkflowStep.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IoArgoprojWorkflowV1alpha1WorkflowStep is not found in the empty JSON string", IoArgoprojWorkflowV1alpha1WorkflowStep.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IoArgoprojWorkflowV1alpha1WorkflowStep.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IoArgoprojWorkflowV1alpha1WorkflowStep` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `arguments`
      if (jsonObj.get("arguments") != null && !jsonObj.get("arguments").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1Arguments.validateJsonElement(jsonObj.get("arguments"));
      }
      // validate the optional field `continueOn`
      if (jsonObj.get("continueOn") != null && !jsonObj.get("continueOn").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1ContinueOn.validateJsonElement(jsonObj.get("continueOn"));
      }
      // validate the optional field `inline`
      if (jsonObj.get("inline") != null && !jsonObj.get("inline").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1Template.validateJsonElement(jsonObj.get("inline"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("onExit") != null && !jsonObj.get("onExit").isJsonNull()) && !jsonObj.get("onExit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `onExit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("onExit").toString()));
      }
      if ((jsonObj.get("template") != null && !jsonObj.get("template").isJsonNull()) && !jsonObj.get("template").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `template` to be a primitive type in the JSON string but got `%s`", jsonObj.get("template").toString()));
      }
      // validate the optional field `templateRef`
      if (jsonObj.get("templateRef") != null && !jsonObj.get("templateRef").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1TemplateRef.validateJsonElement(jsonObj.get("templateRef"));
      }
      if ((jsonObj.get("when") != null && !jsonObj.get("when").isJsonNull()) && !jsonObj.get("when").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `when` to be a primitive type in the JSON string but got `%s`", jsonObj.get("when").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("withItems") != null && !jsonObj.get("withItems").isJsonNull() && !jsonObj.get("withItems").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `withItems` to be an array in the JSON string but got `%s`", jsonObj.get("withItems").toString()));
      }
      if ((jsonObj.get("withParam") != null && !jsonObj.get("withParam").isJsonNull()) && !jsonObj.get("withParam").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `withParam` to be a primitive type in the JSON string but got `%s`", jsonObj.get("withParam").toString()));
      }
      // validate the optional field `withSequence`
      if (jsonObj.get("withSequence") != null && !jsonObj.get("withSequence").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1Sequence.validateJsonElement(jsonObj.get("withSequence"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IoArgoprojWorkflowV1alpha1WorkflowStep.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IoArgoprojWorkflowV1alpha1WorkflowStep' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IoArgoprojWorkflowV1alpha1WorkflowStep> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IoArgoprojWorkflowV1alpha1WorkflowStep.class));

       return (TypeAdapter<T>) new TypeAdapter<IoArgoprojWorkflowV1alpha1WorkflowStep>() {
           @Override
           public void write(JsonWriter out, IoArgoprojWorkflowV1alpha1WorkflowStep value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IoArgoprojWorkflowV1alpha1WorkflowStep read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IoArgoprojWorkflowV1alpha1WorkflowStep given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IoArgoprojWorkflowV1alpha1WorkflowStep
   * @throws IOException if the JSON string is invalid with respect to IoArgoprojWorkflowV1alpha1WorkflowStep
   */
  public static IoArgoprojWorkflowV1alpha1WorkflowStep fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IoArgoprojWorkflowV1alpha1WorkflowStep.class);
  }

  /**
   * Convert an instance of IoArgoprojWorkflowV1alpha1WorkflowStep to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

