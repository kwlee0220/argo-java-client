/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1ArtifactRepository;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-24T03:51:41.763920791Z[Etc/UTC]", comments = "Generator version: 7.12.0-SNAPSHOT")
public class IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus {
  public static final String SERIALIZED_NAME_ARTIFACT_REPOSITORY = "artifactRepository";
  @SerializedName(SERIALIZED_NAME_ARTIFACT_REPOSITORY)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1ArtifactRepository artifactRepository;

  public static final String SERIALIZED_NAME_CONFIG_MAP = "configMap";
  @SerializedName(SERIALIZED_NAME_CONFIG_MAP)
  @javax.annotation.Nullable
  private String configMap;

  public static final String SERIALIZED_NAME_DEFAULT = "default";
  @SerializedName(SERIALIZED_NAME_DEFAULT)
  @javax.annotation.Nullable
  private Boolean _default;

  public static final String SERIALIZED_NAME_KEY = "key";
  @SerializedName(SERIALIZED_NAME_KEY)
  @javax.annotation.Nullable
  private String key;

  public static final String SERIALIZED_NAME_NAMESPACE = "namespace";
  @SerializedName(SERIALIZED_NAME_NAMESPACE)
  @javax.annotation.Nullable
  private String namespace;

  public IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus() {
  }

  public IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus artifactRepository(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1ArtifactRepository artifactRepository) {
    this.artifactRepository = artifactRepository;
    return this;
  }

  /**
   * Get artifactRepository
   * @return artifactRepository
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1ArtifactRepository getArtifactRepository() {
    return artifactRepository;
  }

  public void setArtifactRepository(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1ArtifactRepository artifactRepository) {
    this.artifactRepository = artifactRepository;
  }


  public IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus configMap(@javax.annotation.Nullable String configMap) {
    this.configMap = configMap;
    return this;
  }

  /**
   * The name of the config map. Defaults to \&quot;artifact-repositories\&quot;.
   * @return configMap
   */
  @javax.annotation.Nullable
  public String getConfigMap() {
    return configMap;
  }

  public void setConfigMap(@javax.annotation.Nullable String configMap) {
    this.configMap = configMap;
  }


  public IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus _default(@javax.annotation.Nullable Boolean _default) {
    this._default = _default;
    return this;
  }

  /**
   * If this ref represents the default artifact repository, rather than a config map.
   * @return _default
   */
  @javax.annotation.Nullable
  public Boolean getDefault() {
    return _default;
  }

  public void setDefault(@javax.annotation.Nullable Boolean _default) {
    this._default = _default;
  }


  public IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus key(@javax.annotation.Nullable String key) {
    this.key = key;
    return this;
  }

  /**
   * The config map key. Defaults to the value of the \&quot;workflows.argoproj.io/default-artifact-repository\&quot; annotation.
   * @return key
   */
  @javax.annotation.Nullable
  public String getKey() {
    return key;
  }

  public void setKey(@javax.annotation.Nullable String key) {
    this.key = key;
  }


  public IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus namespace(@javax.annotation.Nullable String namespace) {
    this.namespace = namespace;
    return this;
  }

  /**
   * The namespace of the config map. Defaults to the workflow&#39;s namespace, or the controller&#39;s namespace (if found).
   * @return namespace
   */
  @javax.annotation.Nullable
  public String getNamespace() {
    return namespace;
  }

  public void setNamespace(@javax.annotation.Nullable String namespace) {
    this.namespace = namespace;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus ioArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus = (IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus) o;
    return Objects.equals(this.artifactRepository, ioArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus.artifactRepository) &&
        Objects.equals(this.configMap, ioArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus.configMap) &&
        Objects.equals(this._default, ioArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus._default) &&
        Objects.equals(this.key, ioArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus.key) &&
        Objects.equals(this.namespace, ioArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus.namespace);
  }

  @Override
  public int hashCode() {
    return Objects.hash(artifactRepository, configMap, _default, key, namespace);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus {\n");
    sb.append("    artifactRepository: ").append(toIndentedString(artifactRepository)).append("\n");
    sb.append("    configMap: ").append(toIndentedString(configMap)).append("\n");
    sb.append("    _default: ").append(toIndentedString(_default)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    namespace: ").append(toIndentedString(namespace)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("artifactRepository");
    openapiFields.add("configMap");
    openapiFields.add("default");
    openapiFields.add("key");
    openapiFields.add("namespace");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus is not found in the empty JSON string", IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `artifactRepository`
      if (jsonObj.get("artifactRepository") != null && !jsonObj.get("artifactRepository").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1ArtifactRepository.validateJsonElement(jsonObj.get("artifactRepository"));
      }
      if ((jsonObj.get("configMap") != null && !jsonObj.get("configMap").isJsonNull()) && !jsonObj.get("configMap").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `configMap` to be a primitive type in the JSON string but got `%s`", jsonObj.get("configMap").toString()));
      }
      if ((jsonObj.get("key") != null && !jsonObj.get("key").isJsonNull()) && !jsonObj.get("key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("key").toString()));
      }
      if ((jsonObj.get("namespace") != null && !jsonObj.get("namespace").isJsonNull()) && !jsonObj.get("namespace").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `namespace` to be a primitive type in the JSON string but got `%s`", jsonObj.get("namespace").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus.class));

       return (TypeAdapter<T>) new TypeAdapter<IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus>() {
           @Override
           public void write(JsonWriter out, IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus
   * @throws IOException if the JSON string is invalid with respect to IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus
   */
  public static IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus.class);
  }

  /**
   * Convert an instance of IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

