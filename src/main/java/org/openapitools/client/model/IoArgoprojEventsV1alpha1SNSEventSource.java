/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1EventSourceFilter;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1WebhookContext;
import org.openapitools.client.model.IoK8sApiCoreV1SecretKeySelector;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * IoArgoprojEventsV1alpha1SNSEventSource
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-24T03:51:41.763920791Z[Etc/UTC]", comments = "Generator version: 7.12.0-SNAPSHOT")
public class IoArgoprojEventsV1alpha1SNSEventSource {
  public static final String SERIALIZED_NAME_ACCESS_KEY = "accessKey";
  @SerializedName(SERIALIZED_NAME_ACCESS_KEY)
  @javax.annotation.Nullable
  private IoK8sApiCoreV1SecretKeySelector accessKey;

  public static final String SERIALIZED_NAME_ENDPOINT = "endpoint";
  @SerializedName(SERIALIZED_NAME_ENDPOINT)
  @javax.annotation.Nullable
  private String endpoint;

  public static final String SERIALIZED_NAME_FILTER = "filter";
  @SerializedName(SERIALIZED_NAME_FILTER)
  @javax.annotation.Nullable
  private IoArgoprojEventsV1alpha1EventSourceFilter filter;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  @javax.annotation.Nullable
  private Map<String, String> metadata = new HashMap<>();

  public static final String SERIALIZED_NAME_REGION = "region";
  @SerializedName(SERIALIZED_NAME_REGION)
  @javax.annotation.Nullable
  private String region;

  public static final String SERIALIZED_NAME_ROLE_A_R_N = "roleARN";
  @SerializedName(SERIALIZED_NAME_ROLE_A_R_N)
  @javax.annotation.Nullable
  private String roleARN;

  public static final String SERIALIZED_NAME_SECRET_KEY = "secretKey";
  @SerializedName(SERIALIZED_NAME_SECRET_KEY)
  @javax.annotation.Nullable
  private IoK8sApiCoreV1SecretKeySelector secretKey;

  public static final String SERIALIZED_NAME_TOPIC_ARN = "topicArn";
  @SerializedName(SERIALIZED_NAME_TOPIC_ARN)
  @javax.annotation.Nullable
  private String topicArn;

  public static final String SERIALIZED_NAME_VALIDATE_SIGNATURE = "validateSignature";
  @SerializedName(SERIALIZED_NAME_VALIDATE_SIGNATURE)
  @javax.annotation.Nullable
  private Boolean validateSignature;

  public static final String SERIALIZED_NAME_WEBHOOK = "webhook";
  @SerializedName(SERIALIZED_NAME_WEBHOOK)
  @javax.annotation.Nullable
  private IoArgoprojEventsV1alpha1WebhookContext webhook;

  public IoArgoprojEventsV1alpha1SNSEventSource() {
  }

  public IoArgoprojEventsV1alpha1SNSEventSource accessKey(@javax.annotation.Nullable IoK8sApiCoreV1SecretKeySelector accessKey) {
    this.accessKey = accessKey;
    return this;
  }

  /**
   * Get accessKey
   * @return accessKey
   */
  @javax.annotation.Nullable
  public IoK8sApiCoreV1SecretKeySelector getAccessKey() {
    return accessKey;
  }

  public void setAccessKey(@javax.annotation.Nullable IoK8sApiCoreV1SecretKeySelector accessKey) {
    this.accessKey = accessKey;
  }


  public IoArgoprojEventsV1alpha1SNSEventSource endpoint(@javax.annotation.Nullable String endpoint) {
    this.endpoint = endpoint;
    return this;
  }

  /**
   * Get endpoint
   * @return endpoint
   */
  @javax.annotation.Nullable
  public String getEndpoint() {
    return endpoint;
  }

  public void setEndpoint(@javax.annotation.Nullable String endpoint) {
    this.endpoint = endpoint;
  }


  public IoArgoprojEventsV1alpha1SNSEventSource filter(@javax.annotation.Nullable IoArgoprojEventsV1alpha1EventSourceFilter filter) {
    this.filter = filter;
    return this;
  }

  /**
   * Get filter
   * @return filter
   */
  @javax.annotation.Nullable
  public IoArgoprojEventsV1alpha1EventSourceFilter getFilter() {
    return filter;
  }

  public void setFilter(@javax.annotation.Nullable IoArgoprojEventsV1alpha1EventSourceFilter filter) {
    this.filter = filter;
  }


  public IoArgoprojEventsV1alpha1SNSEventSource metadata(@javax.annotation.Nullable Map<String, String> metadata) {
    this.metadata = metadata;
    return this;
  }

  public IoArgoprojEventsV1alpha1SNSEventSource putMetadataItem(String key, String metadataItem) {
    if (this.metadata == null) {
      this.metadata = new HashMap<>();
    }
    this.metadata.put(key, metadataItem);
    return this;
  }

  /**
   * Get metadata
   * @return metadata
   */
  @javax.annotation.Nullable
  public Map<String, String> getMetadata() {
    return metadata;
  }

  public void setMetadata(@javax.annotation.Nullable Map<String, String> metadata) {
    this.metadata = metadata;
  }


  public IoArgoprojEventsV1alpha1SNSEventSource region(@javax.annotation.Nullable String region) {
    this.region = region;
    return this;
  }

  /**
   * Get region
   * @return region
   */
  @javax.annotation.Nullable
  public String getRegion() {
    return region;
  }

  public void setRegion(@javax.annotation.Nullable String region) {
    this.region = region;
  }


  public IoArgoprojEventsV1alpha1SNSEventSource roleARN(@javax.annotation.Nullable String roleARN) {
    this.roleARN = roleARN;
    return this;
  }

  /**
   * Get roleARN
   * @return roleARN
   */
  @javax.annotation.Nullable
  public String getRoleARN() {
    return roleARN;
  }

  public void setRoleARN(@javax.annotation.Nullable String roleARN) {
    this.roleARN = roleARN;
  }


  public IoArgoprojEventsV1alpha1SNSEventSource secretKey(@javax.annotation.Nullable IoK8sApiCoreV1SecretKeySelector secretKey) {
    this.secretKey = secretKey;
    return this;
  }

  /**
   * Get secretKey
   * @return secretKey
   */
  @javax.annotation.Nullable
  public IoK8sApiCoreV1SecretKeySelector getSecretKey() {
    return secretKey;
  }

  public void setSecretKey(@javax.annotation.Nullable IoK8sApiCoreV1SecretKeySelector secretKey) {
    this.secretKey = secretKey;
  }


  public IoArgoprojEventsV1alpha1SNSEventSource topicArn(@javax.annotation.Nullable String topicArn) {
    this.topicArn = topicArn;
    return this;
  }

  /**
   * Get topicArn
   * @return topicArn
   */
  @javax.annotation.Nullable
  public String getTopicArn() {
    return topicArn;
  }

  public void setTopicArn(@javax.annotation.Nullable String topicArn) {
    this.topicArn = topicArn;
  }


  public IoArgoprojEventsV1alpha1SNSEventSource validateSignature(@javax.annotation.Nullable Boolean validateSignature) {
    this.validateSignature = validateSignature;
    return this;
  }

  /**
   * Get validateSignature
   * @return validateSignature
   */
  @javax.annotation.Nullable
  public Boolean getValidateSignature() {
    return validateSignature;
  }

  public void setValidateSignature(@javax.annotation.Nullable Boolean validateSignature) {
    this.validateSignature = validateSignature;
  }


  public IoArgoprojEventsV1alpha1SNSEventSource webhook(@javax.annotation.Nullable IoArgoprojEventsV1alpha1WebhookContext webhook) {
    this.webhook = webhook;
    return this;
  }

  /**
   * Get webhook
   * @return webhook
   */
  @javax.annotation.Nullable
  public IoArgoprojEventsV1alpha1WebhookContext getWebhook() {
    return webhook;
  }

  public void setWebhook(@javax.annotation.Nullable IoArgoprojEventsV1alpha1WebhookContext webhook) {
    this.webhook = webhook;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoArgoprojEventsV1alpha1SNSEventSource ioArgoprojEventsV1alpha1SNSEventSource = (IoArgoprojEventsV1alpha1SNSEventSource) o;
    return Objects.equals(this.accessKey, ioArgoprojEventsV1alpha1SNSEventSource.accessKey) &&
        Objects.equals(this.endpoint, ioArgoprojEventsV1alpha1SNSEventSource.endpoint) &&
        Objects.equals(this.filter, ioArgoprojEventsV1alpha1SNSEventSource.filter) &&
        Objects.equals(this.metadata, ioArgoprojEventsV1alpha1SNSEventSource.metadata) &&
        Objects.equals(this.region, ioArgoprojEventsV1alpha1SNSEventSource.region) &&
        Objects.equals(this.roleARN, ioArgoprojEventsV1alpha1SNSEventSource.roleARN) &&
        Objects.equals(this.secretKey, ioArgoprojEventsV1alpha1SNSEventSource.secretKey) &&
        Objects.equals(this.topicArn, ioArgoprojEventsV1alpha1SNSEventSource.topicArn) &&
        Objects.equals(this.validateSignature, ioArgoprojEventsV1alpha1SNSEventSource.validateSignature) &&
        Objects.equals(this.webhook, ioArgoprojEventsV1alpha1SNSEventSource.webhook);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessKey, endpoint, filter, metadata, region, roleARN, secretKey, topicArn, validateSignature, webhook);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoArgoprojEventsV1alpha1SNSEventSource {\n");
    sb.append("    accessKey: ").append(toIndentedString(accessKey)).append("\n");
    sb.append("    endpoint: ").append(toIndentedString(endpoint)).append("\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    roleARN: ").append(toIndentedString(roleARN)).append("\n");
    sb.append("    secretKey: ").append(toIndentedString(secretKey)).append("\n");
    sb.append("    topicArn: ").append(toIndentedString(topicArn)).append("\n");
    sb.append("    validateSignature: ").append(toIndentedString(validateSignature)).append("\n");
    sb.append("    webhook: ").append(toIndentedString(webhook)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accessKey");
    openapiFields.add("endpoint");
    openapiFields.add("filter");
    openapiFields.add("metadata");
    openapiFields.add("region");
    openapiFields.add("roleARN");
    openapiFields.add("secretKey");
    openapiFields.add("topicArn");
    openapiFields.add("validateSignature");
    openapiFields.add("webhook");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IoArgoprojEventsV1alpha1SNSEventSource
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IoArgoprojEventsV1alpha1SNSEventSource.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IoArgoprojEventsV1alpha1SNSEventSource is not found in the empty JSON string", IoArgoprojEventsV1alpha1SNSEventSource.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IoArgoprojEventsV1alpha1SNSEventSource.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IoArgoprojEventsV1alpha1SNSEventSource` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `accessKey`
      if (jsonObj.get("accessKey") != null && !jsonObj.get("accessKey").isJsonNull()) {
        IoK8sApiCoreV1SecretKeySelector.validateJsonElement(jsonObj.get("accessKey"));
      }
      if ((jsonObj.get("endpoint") != null && !jsonObj.get("endpoint").isJsonNull()) && !jsonObj.get("endpoint").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endpoint` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endpoint").toString()));
      }
      // validate the optional field `filter`
      if (jsonObj.get("filter") != null && !jsonObj.get("filter").isJsonNull()) {
        IoArgoprojEventsV1alpha1EventSourceFilter.validateJsonElement(jsonObj.get("filter"));
      }
      if ((jsonObj.get("region") != null && !jsonObj.get("region").isJsonNull()) && !jsonObj.get("region").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `region` to be a primitive type in the JSON string but got `%s`", jsonObj.get("region").toString()));
      }
      if ((jsonObj.get("roleARN") != null && !jsonObj.get("roleARN").isJsonNull()) && !jsonObj.get("roleARN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `roleARN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("roleARN").toString()));
      }
      // validate the optional field `secretKey`
      if (jsonObj.get("secretKey") != null && !jsonObj.get("secretKey").isJsonNull()) {
        IoK8sApiCoreV1SecretKeySelector.validateJsonElement(jsonObj.get("secretKey"));
      }
      if ((jsonObj.get("topicArn") != null && !jsonObj.get("topicArn").isJsonNull()) && !jsonObj.get("topicArn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `topicArn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("topicArn").toString()));
      }
      // validate the optional field `webhook`
      if (jsonObj.get("webhook") != null && !jsonObj.get("webhook").isJsonNull()) {
        IoArgoprojEventsV1alpha1WebhookContext.validateJsonElement(jsonObj.get("webhook"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IoArgoprojEventsV1alpha1SNSEventSource.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IoArgoprojEventsV1alpha1SNSEventSource' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IoArgoprojEventsV1alpha1SNSEventSource> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IoArgoprojEventsV1alpha1SNSEventSource.class));

       return (TypeAdapter<T>) new TypeAdapter<IoArgoprojEventsV1alpha1SNSEventSource>() {
           @Override
           public void write(JsonWriter out, IoArgoprojEventsV1alpha1SNSEventSource value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IoArgoprojEventsV1alpha1SNSEventSource read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IoArgoprojEventsV1alpha1SNSEventSource given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IoArgoprojEventsV1alpha1SNSEventSource
   * @throws IOException if the JSON string is invalid with respect to IoArgoprojEventsV1alpha1SNSEventSource
   */
  public static IoArgoprojEventsV1alpha1SNSEventSource fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IoArgoprojEventsV1alpha1SNSEventSource.class);
  }

  /**
   * Convert an instance of IoArgoprojEventsV1alpha1SNSEventSource to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

