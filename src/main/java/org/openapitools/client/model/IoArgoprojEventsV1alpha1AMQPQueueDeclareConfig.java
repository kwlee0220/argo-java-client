/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * IoArgoprojEventsV1alpha1AMQPQueueDeclareConfig
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-24T03:51:41.763920791Z[Etc/UTC]", comments = "Generator version: 7.12.0-SNAPSHOT")
public class IoArgoprojEventsV1alpha1AMQPQueueDeclareConfig {
  public static final String SERIALIZED_NAME_ARGUMENTS = "arguments";
  @SerializedName(SERIALIZED_NAME_ARGUMENTS)
  @javax.annotation.Nullable
  private String arguments;

  public static final String SERIALIZED_NAME_AUTO_DELETE = "autoDelete";
  @SerializedName(SERIALIZED_NAME_AUTO_DELETE)
  @javax.annotation.Nullable
  private Boolean autoDelete;

  public static final String SERIALIZED_NAME_DURABLE = "durable";
  @SerializedName(SERIALIZED_NAME_DURABLE)
  @javax.annotation.Nullable
  private Boolean durable;

  public static final String SERIALIZED_NAME_EXCLUSIVE = "exclusive";
  @SerializedName(SERIALIZED_NAME_EXCLUSIVE)
  @javax.annotation.Nullable
  private Boolean exclusive;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  @javax.annotation.Nullable
  private String name;

  public static final String SERIALIZED_NAME_NO_WAIT = "noWait";
  @SerializedName(SERIALIZED_NAME_NO_WAIT)
  @javax.annotation.Nullable
  private Boolean noWait;

  public IoArgoprojEventsV1alpha1AMQPQueueDeclareConfig() {
  }

  public IoArgoprojEventsV1alpha1AMQPQueueDeclareConfig arguments(@javax.annotation.Nullable String arguments) {
    this.arguments = arguments;
    return this;
  }

  /**
   * Get arguments
   * @return arguments
   */
  @javax.annotation.Nullable
  public String getArguments() {
    return arguments;
  }

  public void setArguments(@javax.annotation.Nullable String arguments) {
    this.arguments = arguments;
  }


  public IoArgoprojEventsV1alpha1AMQPQueueDeclareConfig autoDelete(@javax.annotation.Nullable Boolean autoDelete) {
    this.autoDelete = autoDelete;
    return this;
  }

  /**
   * Get autoDelete
   * @return autoDelete
   */
  @javax.annotation.Nullable
  public Boolean getAutoDelete() {
    return autoDelete;
  }

  public void setAutoDelete(@javax.annotation.Nullable Boolean autoDelete) {
    this.autoDelete = autoDelete;
  }


  public IoArgoprojEventsV1alpha1AMQPQueueDeclareConfig durable(@javax.annotation.Nullable Boolean durable) {
    this.durable = durable;
    return this;
  }

  /**
   * Get durable
   * @return durable
   */
  @javax.annotation.Nullable
  public Boolean getDurable() {
    return durable;
  }

  public void setDurable(@javax.annotation.Nullable Boolean durable) {
    this.durable = durable;
  }


  public IoArgoprojEventsV1alpha1AMQPQueueDeclareConfig exclusive(@javax.annotation.Nullable Boolean exclusive) {
    this.exclusive = exclusive;
    return this;
  }

  /**
   * Get exclusive
   * @return exclusive
   */
  @javax.annotation.Nullable
  public Boolean getExclusive() {
    return exclusive;
  }

  public void setExclusive(@javax.annotation.Nullable Boolean exclusive) {
    this.exclusive = exclusive;
  }


  public IoArgoprojEventsV1alpha1AMQPQueueDeclareConfig name(@javax.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(@javax.annotation.Nullable String name) {
    this.name = name;
  }


  public IoArgoprojEventsV1alpha1AMQPQueueDeclareConfig noWait(@javax.annotation.Nullable Boolean noWait) {
    this.noWait = noWait;
    return this;
  }

  /**
   * Get noWait
   * @return noWait
   */
  @javax.annotation.Nullable
  public Boolean getNoWait() {
    return noWait;
  }

  public void setNoWait(@javax.annotation.Nullable Boolean noWait) {
    this.noWait = noWait;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoArgoprojEventsV1alpha1AMQPQueueDeclareConfig ioArgoprojEventsV1alpha1AMQPQueueDeclareConfig = (IoArgoprojEventsV1alpha1AMQPQueueDeclareConfig) o;
    return Objects.equals(this.arguments, ioArgoprojEventsV1alpha1AMQPQueueDeclareConfig.arguments) &&
        Objects.equals(this.autoDelete, ioArgoprojEventsV1alpha1AMQPQueueDeclareConfig.autoDelete) &&
        Objects.equals(this.durable, ioArgoprojEventsV1alpha1AMQPQueueDeclareConfig.durable) &&
        Objects.equals(this.exclusive, ioArgoprojEventsV1alpha1AMQPQueueDeclareConfig.exclusive) &&
        Objects.equals(this.name, ioArgoprojEventsV1alpha1AMQPQueueDeclareConfig.name) &&
        Objects.equals(this.noWait, ioArgoprojEventsV1alpha1AMQPQueueDeclareConfig.noWait);
  }

  @Override
  public int hashCode() {
    return Objects.hash(arguments, autoDelete, durable, exclusive, name, noWait);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoArgoprojEventsV1alpha1AMQPQueueDeclareConfig {\n");
    sb.append("    arguments: ").append(toIndentedString(arguments)).append("\n");
    sb.append("    autoDelete: ").append(toIndentedString(autoDelete)).append("\n");
    sb.append("    durable: ").append(toIndentedString(durable)).append("\n");
    sb.append("    exclusive: ").append(toIndentedString(exclusive)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    noWait: ").append(toIndentedString(noWait)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("arguments");
    openapiFields.add("autoDelete");
    openapiFields.add("durable");
    openapiFields.add("exclusive");
    openapiFields.add("name");
    openapiFields.add("noWait");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IoArgoprojEventsV1alpha1AMQPQueueDeclareConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IoArgoprojEventsV1alpha1AMQPQueueDeclareConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IoArgoprojEventsV1alpha1AMQPQueueDeclareConfig is not found in the empty JSON string", IoArgoprojEventsV1alpha1AMQPQueueDeclareConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IoArgoprojEventsV1alpha1AMQPQueueDeclareConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IoArgoprojEventsV1alpha1AMQPQueueDeclareConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("arguments") != null && !jsonObj.get("arguments").isJsonNull()) && !jsonObj.get("arguments").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `arguments` to be a primitive type in the JSON string but got `%s`", jsonObj.get("arguments").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IoArgoprojEventsV1alpha1AMQPQueueDeclareConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IoArgoprojEventsV1alpha1AMQPQueueDeclareConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IoArgoprojEventsV1alpha1AMQPQueueDeclareConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IoArgoprojEventsV1alpha1AMQPQueueDeclareConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<IoArgoprojEventsV1alpha1AMQPQueueDeclareConfig>() {
           @Override
           public void write(JsonWriter out, IoArgoprojEventsV1alpha1AMQPQueueDeclareConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IoArgoprojEventsV1alpha1AMQPQueueDeclareConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IoArgoprojEventsV1alpha1AMQPQueueDeclareConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IoArgoprojEventsV1alpha1AMQPQueueDeclareConfig
   * @throws IOException if the JSON string is invalid with respect to IoArgoprojEventsV1alpha1AMQPQueueDeclareConfig
   */
  public static IoArgoprojEventsV1alpha1AMQPQueueDeclareConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IoArgoprojEventsV1alpha1AMQPQueueDeclareConfig.class);
  }

  /**
   * Convert an instance of IoArgoprojEventsV1alpha1AMQPQueueDeclareConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

