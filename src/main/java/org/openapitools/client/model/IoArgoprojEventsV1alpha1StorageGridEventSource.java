/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1StorageGridFilter;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1WebhookContext;
import org.openapitools.client.model.IoK8sApiCoreV1SecretKeySelector;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * IoArgoprojEventsV1alpha1StorageGridEventSource
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-24T03:51:41.763920791Z[Etc/UTC]", comments = "Generator version: 7.12.0-SNAPSHOT")
public class IoArgoprojEventsV1alpha1StorageGridEventSource {
  public static final String SERIALIZED_NAME_API_U_R_L = "apiURL";
  @SerializedName(SERIALIZED_NAME_API_U_R_L)
  @javax.annotation.Nullable
  private String apiURL;

  public static final String SERIALIZED_NAME_AUTH_TOKEN = "authToken";
  @SerializedName(SERIALIZED_NAME_AUTH_TOKEN)
  @javax.annotation.Nullable
  private IoK8sApiCoreV1SecretKeySelector authToken;

  public static final String SERIALIZED_NAME_BUCKET = "bucket";
  @SerializedName(SERIALIZED_NAME_BUCKET)
  @javax.annotation.Nullable
  private String bucket;

  public static final String SERIALIZED_NAME_EVENTS = "events";
  @SerializedName(SERIALIZED_NAME_EVENTS)
  @javax.annotation.Nullable
  private List<String> events = new ArrayList<>();

  public static final String SERIALIZED_NAME_FILTER = "filter";
  @SerializedName(SERIALIZED_NAME_FILTER)
  @javax.annotation.Nullable
  private IoArgoprojEventsV1alpha1StorageGridFilter filter;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  @javax.annotation.Nullable
  private Map<String, String> metadata = new HashMap<>();

  public static final String SERIALIZED_NAME_REGION = "region";
  @SerializedName(SERIALIZED_NAME_REGION)
  @javax.annotation.Nullable
  private String region;

  public static final String SERIALIZED_NAME_TOPIC_ARN = "topicArn";
  @SerializedName(SERIALIZED_NAME_TOPIC_ARN)
  @javax.annotation.Nullable
  private String topicArn;

  public static final String SERIALIZED_NAME_WEBHOOK = "webhook";
  @SerializedName(SERIALIZED_NAME_WEBHOOK)
  @javax.annotation.Nullable
  private IoArgoprojEventsV1alpha1WebhookContext webhook;

  public IoArgoprojEventsV1alpha1StorageGridEventSource() {
  }

  public IoArgoprojEventsV1alpha1StorageGridEventSource apiURL(@javax.annotation.Nullable String apiURL) {
    this.apiURL = apiURL;
    return this;
  }

  /**
   * APIURL is the url of the storagegrid api.
   * @return apiURL
   */
  @javax.annotation.Nullable
  public String getApiURL() {
    return apiURL;
  }

  public void setApiURL(@javax.annotation.Nullable String apiURL) {
    this.apiURL = apiURL;
  }


  public IoArgoprojEventsV1alpha1StorageGridEventSource authToken(@javax.annotation.Nullable IoK8sApiCoreV1SecretKeySelector authToken) {
    this.authToken = authToken;
    return this;
  }

  /**
   * Get authToken
   * @return authToken
   */
  @javax.annotation.Nullable
  public IoK8sApiCoreV1SecretKeySelector getAuthToken() {
    return authToken;
  }

  public void setAuthToken(@javax.annotation.Nullable IoK8sApiCoreV1SecretKeySelector authToken) {
    this.authToken = authToken;
  }


  public IoArgoprojEventsV1alpha1StorageGridEventSource bucket(@javax.annotation.Nullable String bucket) {
    this.bucket = bucket;
    return this;
  }

  /**
   * Name of the bucket to register notifications for.
   * @return bucket
   */
  @javax.annotation.Nullable
  public String getBucket() {
    return bucket;
  }

  public void setBucket(@javax.annotation.Nullable String bucket) {
    this.bucket = bucket;
  }


  public IoArgoprojEventsV1alpha1StorageGridEventSource events(@javax.annotation.Nullable List<String> events) {
    this.events = events;
    return this;
  }

  public IoArgoprojEventsV1alpha1StorageGridEventSource addEventsItem(String eventsItem) {
    if (this.events == null) {
      this.events = new ArrayList<>();
    }
    this.events.add(eventsItem);
    return this;
  }

  /**
   * Get events
   * @return events
   */
  @javax.annotation.Nullable
  public List<String> getEvents() {
    return events;
  }

  public void setEvents(@javax.annotation.Nullable List<String> events) {
    this.events = events;
  }


  public IoArgoprojEventsV1alpha1StorageGridEventSource filter(@javax.annotation.Nullable IoArgoprojEventsV1alpha1StorageGridFilter filter) {
    this.filter = filter;
    return this;
  }

  /**
   * Get filter
   * @return filter
   */
  @javax.annotation.Nullable
  public IoArgoprojEventsV1alpha1StorageGridFilter getFilter() {
    return filter;
  }

  public void setFilter(@javax.annotation.Nullable IoArgoprojEventsV1alpha1StorageGridFilter filter) {
    this.filter = filter;
  }


  public IoArgoprojEventsV1alpha1StorageGridEventSource metadata(@javax.annotation.Nullable Map<String, String> metadata) {
    this.metadata = metadata;
    return this;
  }

  public IoArgoprojEventsV1alpha1StorageGridEventSource putMetadataItem(String key, String metadataItem) {
    if (this.metadata == null) {
      this.metadata = new HashMap<>();
    }
    this.metadata.put(key, metadataItem);
    return this;
  }

  /**
   * Get metadata
   * @return metadata
   */
  @javax.annotation.Nullable
  public Map<String, String> getMetadata() {
    return metadata;
  }

  public void setMetadata(@javax.annotation.Nullable Map<String, String> metadata) {
    this.metadata = metadata;
  }


  public IoArgoprojEventsV1alpha1StorageGridEventSource region(@javax.annotation.Nullable String region) {
    this.region = region;
    return this;
  }

  /**
   * Get region
   * @return region
   */
  @javax.annotation.Nullable
  public String getRegion() {
    return region;
  }

  public void setRegion(@javax.annotation.Nullable String region) {
    this.region = region;
  }


  public IoArgoprojEventsV1alpha1StorageGridEventSource topicArn(@javax.annotation.Nullable String topicArn) {
    this.topicArn = topicArn;
    return this;
  }

  /**
   * Get topicArn
   * @return topicArn
   */
  @javax.annotation.Nullable
  public String getTopicArn() {
    return topicArn;
  }

  public void setTopicArn(@javax.annotation.Nullable String topicArn) {
    this.topicArn = topicArn;
  }


  public IoArgoprojEventsV1alpha1StorageGridEventSource webhook(@javax.annotation.Nullable IoArgoprojEventsV1alpha1WebhookContext webhook) {
    this.webhook = webhook;
    return this;
  }

  /**
   * Get webhook
   * @return webhook
   */
  @javax.annotation.Nullable
  public IoArgoprojEventsV1alpha1WebhookContext getWebhook() {
    return webhook;
  }

  public void setWebhook(@javax.annotation.Nullable IoArgoprojEventsV1alpha1WebhookContext webhook) {
    this.webhook = webhook;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoArgoprojEventsV1alpha1StorageGridEventSource ioArgoprojEventsV1alpha1StorageGridEventSource = (IoArgoprojEventsV1alpha1StorageGridEventSource) o;
    return Objects.equals(this.apiURL, ioArgoprojEventsV1alpha1StorageGridEventSource.apiURL) &&
        Objects.equals(this.authToken, ioArgoprojEventsV1alpha1StorageGridEventSource.authToken) &&
        Objects.equals(this.bucket, ioArgoprojEventsV1alpha1StorageGridEventSource.bucket) &&
        Objects.equals(this.events, ioArgoprojEventsV1alpha1StorageGridEventSource.events) &&
        Objects.equals(this.filter, ioArgoprojEventsV1alpha1StorageGridEventSource.filter) &&
        Objects.equals(this.metadata, ioArgoprojEventsV1alpha1StorageGridEventSource.metadata) &&
        Objects.equals(this.region, ioArgoprojEventsV1alpha1StorageGridEventSource.region) &&
        Objects.equals(this.topicArn, ioArgoprojEventsV1alpha1StorageGridEventSource.topicArn) &&
        Objects.equals(this.webhook, ioArgoprojEventsV1alpha1StorageGridEventSource.webhook);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apiURL, authToken, bucket, events, filter, metadata, region, topicArn, webhook);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoArgoprojEventsV1alpha1StorageGridEventSource {\n");
    sb.append("    apiURL: ").append(toIndentedString(apiURL)).append("\n");
    sb.append("    authToken: ").append(toIndentedString(authToken)).append("\n");
    sb.append("    bucket: ").append(toIndentedString(bucket)).append("\n");
    sb.append("    events: ").append(toIndentedString(events)).append("\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    topicArn: ").append(toIndentedString(topicArn)).append("\n");
    sb.append("    webhook: ").append(toIndentedString(webhook)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("apiURL");
    openapiFields.add("authToken");
    openapiFields.add("bucket");
    openapiFields.add("events");
    openapiFields.add("filter");
    openapiFields.add("metadata");
    openapiFields.add("region");
    openapiFields.add("topicArn");
    openapiFields.add("webhook");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IoArgoprojEventsV1alpha1StorageGridEventSource
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IoArgoprojEventsV1alpha1StorageGridEventSource.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IoArgoprojEventsV1alpha1StorageGridEventSource is not found in the empty JSON string", IoArgoprojEventsV1alpha1StorageGridEventSource.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IoArgoprojEventsV1alpha1StorageGridEventSource.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IoArgoprojEventsV1alpha1StorageGridEventSource` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("apiURL") != null && !jsonObj.get("apiURL").isJsonNull()) && !jsonObj.get("apiURL").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `apiURL` to be a primitive type in the JSON string but got `%s`", jsonObj.get("apiURL").toString()));
      }
      // validate the optional field `authToken`
      if (jsonObj.get("authToken") != null && !jsonObj.get("authToken").isJsonNull()) {
        IoK8sApiCoreV1SecretKeySelector.validateJsonElement(jsonObj.get("authToken"));
      }
      if ((jsonObj.get("bucket") != null && !jsonObj.get("bucket").isJsonNull()) && !jsonObj.get("bucket").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bucket` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bucket").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("events") != null && !jsonObj.get("events").isJsonNull() && !jsonObj.get("events").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `events` to be an array in the JSON string but got `%s`", jsonObj.get("events").toString()));
      }
      // validate the optional field `filter`
      if (jsonObj.get("filter") != null && !jsonObj.get("filter").isJsonNull()) {
        IoArgoprojEventsV1alpha1StorageGridFilter.validateJsonElement(jsonObj.get("filter"));
      }
      if ((jsonObj.get("region") != null && !jsonObj.get("region").isJsonNull()) && !jsonObj.get("region").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `region` to be a primitive type in the JSON string but got `%s`", jsonObj.get("region").toString()));
      }
      if ((jsonObj.get("topicArn") != null && !jsonObj.get("topicArn").isJsonNull()) && !jsonObj.get("topicArn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `topicArn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("topicArn").toString()));
      }
      // validate the optional field `webhook`
      if (jsonObj.get("webhook") != null && !jsonObj.get("webhook").isJsonNull()) {
        IoArgoprojEventsV1alpha1WebhookContext.validateJsonElement(jsonObj.get("webhook"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IoArgoprojEventsV1alpha1StorageGridEventSource.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IoArgoprojEventsV1alpha1StorageGridEventSource' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IoArgoprojEventsV1alpha1StorageGridEventSource> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IoArgoprojEventsV1alpha1StorageGridEventSource.class));

       return (TypeAdapter<T>) new TypeAdapter<IoArgoprojEventsV1alpha1StorageGridEventSource>() {
           @Override
           public void write(JsonWriter out, IoArgoprojEventsV1alpha1StorageGridEventSource value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IoArgoprojEventsV1alpha1StorageGridEventSource read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IoArgoprojEventsV1alpha1StorageGridEventSource given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IoArgoprojEventsV1alpha1StorageGridEventSource
   * @throws IOException if the JSON string is invalid with respect to IoArgoprojEventsV1alpha1StorageGridEventSource
   */
  public static IoArgoprojEventsV1alpha1StorageGridEventSource fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IoArgoprojEventsV1alpha1StorageGridEventSource.class);
  }

  /**
   * Convert an instance of IoArgoprojEventsV1alpha1StorageGridEventSource to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

