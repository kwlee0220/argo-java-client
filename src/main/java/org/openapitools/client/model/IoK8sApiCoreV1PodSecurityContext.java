/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.IoK8sApiCoreV1AppArmorProfile;
import org.openapitools.client.model.IoK8sApiCoreV1SELinuxOptions;
import org.openapitools.client.model.IoK8sApiCoreV1SeccompProfile;
import org.openapitools.client.model.IoK8sApiCoreV1Sysctl;
import org.openapitools.client.model.IoK8sApiCoreV1WindowsSecurityContextOptions;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-24T03:51:41.763920791Z[Etc/UTC]", comments = "Generator version: 7.12.0-SNAPSHOT")
public class IoK8sApiCoreV1PodSecurityContext {
  public static final String SERIALIZED_NAME_APP_ARMOR_PROFILE = "appArmorProfile";
  @SerializedName(SERIALIZED_NAME_APP_ARMOR_PROFILE)
  @javax.annotation.Nullable
  private IoK8sApiCoreV1AppArmorProfile appArmorProfile;

  public static final String SERIALIZED_NAME_FS_GROUP = "fsGroup";
  @SerializedName(SERIALIZED_NAME_FS_GROUP)
  @javax.annotation.Nullable
  private Integer fsGroup;

  public static final String SERIALIZED_NAME_FS_GROUP_CHANGE_POLICY = "fsGroupChangePolicy";
  @SerializedName(SERIALIZED_NAME_FS_GROUP_CHANGE_POLICY)
  @javax.annotation.Nullable
  private String fsGroupChangePolicy;

  public static final String SERIALIZED_NAME_RUN_AS_GROUP = "runAsGroup";
  @SerializedName(SERIALIZED_NAME_RUN_AS_GROUP)
  @javax.annotation.Nullable
  private Integer runAsGroup;

  public static final String SERIALIZED_NAME_RUN_AS_NON_ROOT = "runAsNonRoot";
  @SerializedName(SERIALIZED_NAME_RUN_AS_NON_ROOT)
  @javax.annotation.Nullable
  private Boolean runAsNonRoot;

  public static final String SERIALIZED_NAME_RUN_AS_USER = "runAsUser";
  @SerializedName(SERIALIZED_NAME_RUN_AS_USER)
  @javax.annotation.Nullable
  private Integer runAsUser;

  public static final String SERIALIZED_NAME_SE_LINUX_OPTIONS = "seLinuxOptions";
  @SerializedName(SERIALIZED_NAME_SE_LINUX_OPTIONS)
  @javax.annotation.Nullable
  private IoK8sApiCoreV1SELinuxOptions seLinuxOptions;

  public static final String SERIALIZED_NAME_SECCOMP_PROFILE = "seccompProfile";
  @SerializedName(SERIALIZED_NAME_SECCOMP_PROFILE)
  @javax.annotation.Nullable
  private IoK8sApiCoreV1SeccompProfile seccompProfile;

  public static final String SERIALIZED_NAME_SUPPLEMENTAL_GROUPS = "supplementalGroups";
  @SerializedName(SERIALIZED_NAME_SUPPLEMENTAL_GROUPS)
  @javax.annotation.Nullable
  private List<Long> supplementalGroups = new ArrayList<>();

  public static final String SERIALIZED_NAME_SUPPLEMENTAL_GROUPS_POLICY = "supplementalGroupsPolicy";
  @SerializedName(SERIALIZED_NAME_SUPPLEMENTAL_GROUPS_POLICY)
  @javax.annotation.Nullable
  private String supplementalGroupsPolicy;

  public static final String SERIALIZED_NAME_SYSCTLS = "sysctls";
  @SerializedName(SERIALIZED_NAME_SYSCTLS)
  @javax.annotation.Nullable
  private List<IoK8sApiCoreV1Sysctl> sysctls = new ArrayList<>();

  public static final String SERIALIZED_NAME_WINDOWS_OPTIONS = "windowsOptions";
  @SerializedName(SERIALIZED_NAME_WINDOWS_OPTIONS)
  @javax.annotation.Nullable
  private IoK8sApiCoreV1WindowsSecurityContextOptions windowsOptions;

  public IoK8sApiCoreV1PodSecurityContext() {
  }

  public IoK8sApiCoreV1PodSecurityContext appArmorProfile(@javax.annotation.Nullable IoK8sApiCoreV1AppArmorProfile appArmorProfile) {
    this.appArmorProfile = appArmorProfile;
    return this;
  }

  /**
   * Get appArmorProfile
   * @return appArmorProfile
   */
  @javax.annotation.Nullable
  public IoK8sApiCoreV1AppArmorProfile getAppArmorProfile() {
    return appArmorProfile;
  }

  public void setAppArmorProfile(@javax.annotation.Nullable IoK8sApiCoreV1AppArmorProfile appArmorProfile) {
    this.appArmorProfile = appArmorProfile;
  }


  public IoK8sApiCoreV1PodSecurityContext fsGroup(@javax.annotation.Nullable Integer fsGroup) {
    this.fsGroup = fsGroup;
    return this;
  }

  /**
   * A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:  1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR&#39;d with rw-rw----  If unset, the Kubelet will not modify the ownership and permissions of any volume. Note that this field cannot be set when spec.os.name is windows.
   * @return fsGroup
   */
  @javax.annotation.Nullable
  public Integer getFsGroup() {
    return fsGroup;
  }

  public void setFsGroup(@javax.annotation.Nullable Integer fsGroup) {
    this.fsGroup = fsGroup;
  }


  public IoK8sApiCoreV1PodSecurityContext fsGroupChangePolicy(@javax.annotation.Nullable String fsGroupChangePolicy) {
    this.fsGroupChangePolicy = fsGroupChangePolicy;
    return this;
  }

  /**
   * fsGroupChangePolicy defines behavior of changing ownership and permission of the volume before being exposed inside Pod. This field will only apply to volume types which support fsGroup based ownership(and permissions). It will have no effect on ephemeral volume types such as: secret, configmaps and emptydir. Valid values are \&quot;OnRootMismatch\&quot; and \&quot;Always\&quot;. If not specified, \&quot;Always\&quot; is used. Note that this field cannot be set when spec.os.name is windows.
   * @return fsGroupChangePolicy
   */
  @javax.annotation.Nullable
  public String getFsGroupChangePolicy() {
    return fsGroupChangePolicy;
  }

  public void setFsGroupChangePolicy(@javax.annotation.Nullable String fsGroupChangePolicy) {
    this.fsGroupChangePolicy = fsGroupChangePolicy;
  }


  public IoK8sApiCoreV1PodSecurityContext runAsGroup(@javax.annotation.Nullable Integer runAsGroup) {
    this.runAsGroup = runAsGroup;
    return this;
  }

  /**
   * The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.
   * @return runAsGroup
   */
  @javax.annotation.Nullable
  public Integer getRunAsGroup() {
    return runAsGroup;
  }

  public void setRunAsGroup(@javax.annotation.Nullable Integer runAsGroup) {
    this.runAsGroup = runAsGroup;
  }


  public IoK8sApiCoreV1PodSecurityContext runAsNonRoot(@javax.annotation.Nullable Boolean runAsNonRoot) {
    this.runAsNonRoot = runAsNonRoot;
    return this;
  }

  /**
   * Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   * @return runAsNonRoot
   */
  @javax.annotation.Nullable
  public Boolean getRunAsNonRoot() {
    return runAsNonRoot;
  }

  public void setRunAsNonRoot(@javax.annotation.Nullable Boolean runAsNonRoot) {
    this.runAsNonRoot = runAsNonRoot;
  }


  public IoK8sApiCoreV1PodSecurityContext runAsUser(@javax.annotation.Nullable Integer runAsUser) {
    this.runAsUser = runAsUser;
    return this;
  }

  /**
   * The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.
   * @return runAsUser
   */
  @javax.annotation.Nullable
  public Integer getRunAsUser() {
    return runAsUser;
  }

  public void setRunAsUser(@javax.annotation.Nullable Integer runAsUser) {
    this.runAsUser = runAsUser;
  }


  public IoK8sApiCoreV1PodSecurityContext seLinuxOptions(@javax.annotation.Nullable IoK8sApiCoreV1SELinuxOptions seLinuxOptions) {
    this.seLinuxOptions = seLinuxOptions;
    return this;
  }

  /**
   * Get seLinuxOptions
   * @return seLinuxOptions
   */
  @javax.annotation.Nullable
  public IoK8sApiCoreV1SELinuxOptions getSeLinuxOptions() {
    return seLinuxOptions;
  }

  public void setSeLinuxOptions(@javax.annotation.Nullable IoK8sApiCoreV1SELinuxOptions seLinuxOptions) {
    this.seLinuxOptions = seLinuxOptions;
  }


  public IoK8sApiCoreV1PodSecurityContext seccompProfile(@javax.annotation.Nullable IoK8sApiCoreV1SeccompProfile seccompProfile) {
    this.seccompProfile = seccompProfile;
    return this;
  }

  /**
   * Get seccompProfile
   * @return seccompProfile
   */
  @javax.annotation.Nullable
  public IoK8sApiCoreV1SeccompProfile getSeccompProfile() {
    return seccompProfile;
  }

  public void setSeccompProfile(@javax.annotation.Nullable IoK8sApiCoreV1SeccompProfile seccompProfile) {
    this.seccompProfile = seccompProfile;
  }


  public IoK8sApiCoreV1PodSecurityContext supplementalGroups(@javax.annotation.Nullable List<Long> supplementalGroups) {
    this.supplementalGroups = supplementalGroups;
    return this;
  }

  public IoK8sApiCoreV1PodSecurityContext addSupplementalGroupsItem(Long supplementalGroupsItem) {
    if (this.supplementalGroups == null) {
      this.supplementalGroups = new ArrayList<>();
    }
    this.supplementalGroups.add(supplementalGroupsItem);
    return this;
  }

  /**
   * A list of groups applied to the first process run in each container, in addition to the container&#39;s primary GID and fsGroup (if specified).  If the SupplementalGroupsPolicy feature is enabled, the supplementalGroupsPolicy field determines whether these are in addition to or instead of any group memberships defined in the container image. If unspecified, no additional groups are added, though group memberships defined in the container image may still be used, depending on the supplementalGroupsPolicy field. Note that this field cannot be set when spec.os.name is windows.
   * @return supplementalGroups
   */
  @javax.annotation.Nullable
  public List<Long> getSupplementalGroups() {
    return supplementalGroups;
  }

  public void setSupplementalGroups(@javax.annotation.Nullable List<Long> supplementalGroups) {
    this.supplementalGroups = supplementalGroups;
  }


  public IoK8sApiCoreV1PodSecurityContext supplementalGroupsPolicy(@javax.annotation.Nullable String supplementalGroupsPolicy) {
    this.supplementalGroupsPolicy = supplementalGroupsPolicy;
    return this;
  }

  /**
   * Defines how supplemental groups of the first container processes are calculated. Valid values are \&quot;Merge\&quot; and \&quot;Strict\&quot;. If not specified, \&quot;Merge\&quot; is used. (Alpha) Using the field requires the SupplementalGroupsPolicy feature gate to be enabled and the container runtime must implement support for this feature. Note that this field cannot be set when spec.os.name is windows.
   * @return supplementalGroupsPolicy
   */
  @javax.annotation.Nullable
  public String getSupplementalGroupsPolicy() {
    return supplementalGroupsPolicy;
  }

  public void setSupplementalGroupsPolicy(@javax.annotation.Nullable String supplementalGroupsPolicy) {
    this.supplementalGroupsPolicy = supplementalGroupsPolicy;
  }


  public IoK8sApiCoreV1PodSecurityContext sysctls(@javax.annotation.Nullable List<IoK8sApiCoreV1Sysctl> sysctls) {
    this.sysctls = sysctls;
    return this;
  }

  public IoK8sApiCoreV1PodSecurityContext addSysctlsItem(IoK8sApiCoreV1Sysctl sysctlsItem) {
    if (this.sysctls == null) {
      this.sysctls = new ArrayList<>();
    }
    this.sysctls.add(sysctlsItem);
    return this;
  }

  /**
   * Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch. Note that this field cannot be set when spec.os.name is windows.
   * @return sysctls
   */
  @javax.annotation.Nullable
  public List<IoK8sApiCoreV1Sysctl> getSysctls() {
    return sysctls;
  }

  public void setSysctls(@javax.annotation.Nullable List<IoK8sApiCoreV1Sysctl> sysctls) {
    this.sysctls = sysctls;
  }


  public IoK8sApiCoreV1PodSecurityContext windowsOptions(@javax.annotation.Nullable IoK8sApiCoreV1WindowsSecurityContextOptions windowsOptions) {
    this.windowsOptions = windowsOptions;
    return this;
  }

  /**
   * Get windowsOptions
   * @return windowsOptions
   */
  @javax.annotation.Nullable
  public IoK8sApiCoreV1WindowsSecurityContextOptions getWindowsOptions() {
    return windowsOptions;
  }

  public void setWindowsOptions(@javax.annotation.Nullable IoK8sApiCoreV1WindowsSecurityContextOptions windowsOptions) {
    this.windowsOptions = windowsOptions;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoK8sApiCoreV1PodSecurityContext ioK8sApiCoreV1PodSecurityContext = (IoK8sApiCoreV1PodSecurityContext) o;
    return Objects.equals(this.appArmorProfile, ioK8sApiCoreV1PodSecurityContext.appArmorProfile) &&
        Objects.equals(this.fsGroup, ioK8sApiCoreV1PodSecurityContext.fsGroup) &&
        Objects.equals(this.fsGroupChangePolicy, ioK8sApiCoreV1PodSecurityContext.fsGroupChangePolicy) &&
        Objects.equals(this.runAsGroup, ioK8sApiCoreV1PodSecurityContext.runAsGroup) &&
        Objects.equals(this.runAsNonRoot, ioK8sApiCoreV1PodSecurityContext.runAsNonRoot) &&
        Objects.equals(this.runAsUser, ioK8sApiCoreV1PodSecurityContext.runAsUser) &&
        Objects.equals(this.seLinuxOptions, ioK8sApiCoreV1PodSecurityContext.seLinuxOptions) &&
        Objects.equals(this.seccompProfile, ioK8sApiCoreV1PodSecurityContext.seccompProfile) &&
        Objects.equals(this.supplementalGroups, ioK8sApiCoreV1PodSecurityContext.supplementalGroups) &&
        Objects.equals(this.supplementalGroupsPolicy, ioK8sApiCoreV1PodSecurityContext.supplementalGroupsPolicy) &&
        Objects.equals(this.sysctls, ioK8sApiCoreV1PodSecurityContext.sysctls) &&
        Objects.equals(this.windowsOptions, ioK8sApiCoreV1PodSecurityContext.windowsOptions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appArmorProfile, fsGroup, fsGroupChangePolicy, runAsGroup, runAsNonRoot, runAsUser, seLinuxOptions, seccompProfile, supplementalGroups, supplementalGroupsPolicy, sysctls, windowsOptions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoK8sApiCoreV1PodSecurityContext {\n");
    sb.append("    appArmorProfile: ").append(toIndentedString(appArmorProfile)).append("\n");
    sb.append("    fsGroup: ").append(toIndentedString(fsGroup)).append("\n");
    sb.append("    fsGroupChangePolicy: ").append(toIndentedString(fsGroupChangePolicy)).append("\n");
    sb.append("    runAsGroup: ").append(toIndentedString(runAsGroup)).append("\n");
    sb.append("    runAsNonRoot: ").append(toIndentedString(runAsNonRoot)).append("\n");
    sb.append("    runAsUser: ").append(toIndentedString(runAsUser)).append("\n");
    sb.append("    seLinuxOptions: ").append(toIndentedString(seLinuxOptions)).append("\n");
    sb.append("    seccompProfile: ").append(toIndentedString(seccompProfile)).append("\n");
    sb.append("    supplementalGroups: ").append(toIndentedString(supplementalGroups)).append("\n");
    sb.append("    supplementalGroupsPolicy: ").append(toIndentedString(supplementalGroupsPolicy)).append("\n");
    sb.append("    sysctls: ").append(toIndentedString(sysctls)).append("\n");
    sb.append("    windowsOptions: ").append(toIndentedString(windowsOptions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("appArmorProfile");
    openapiFields.add("fsGroup");
    openapiFields.add("fsGroupChangePolicy");
    openapiFields.add("runAsGroup");
    openapiFields.add("runAsNonRoot");
    openapiFields.add("runAsUser");
    openapiFields.add("seLinuxOptions");
    openapiFields.add("seccompProfile");
    openapiFields.add("supplementalGroups");
    openapiFields.add("supplementalGroupsPolicy");
    openapiFields.add("sysctls");
    openapiFields.add("windowsOptions");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IoK8sApiCoreV1PodSecurityContext
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IoK8sApiCoreV1PodSecurityContext.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IoK8sApiCoreV1PodSecurityContext is not found in the empty JSON string", IoK8sApiCoreV1PodSecurityContext.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IoK8sApiCoreV1PodSecurityContext.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IoK8sApiCoreV1PodSecurityContext` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `appArmorProfile`
      if (jsonObj.get("appArmorProfile") != null && !jsonObj.get("appArmorProfile").isJsonNull()) {
        IoK8sApiCoreV1AppArmorProfile.validateJsonElement(jsonObj.get("appArmorProfile"));
      }
      if ((jsonObj.get("fsGroupChangePolicy") != null && !jsonObj.get("fsGroupChangePolicy").isJsonNull()) && !jsonObj.get("fsGroupChangePolicy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fsGroupChangePolicy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fsGroupChangePolicy").toString()));
      }
      // validate the optional field `seLinuxOptions`
      if (jsonObj.get("seLinuxOptions") != null && !jsonObj.get("seLinuxOptions").isJsonNull()) {
        IoK8sApiCoreV1SELinuxOptions.validateJsonElement(jsonObj.get("seLinuxOptions"));
      }
      // validate the optional field `seccompProfile`
      if (jsonObj.get("seccompProfile") != null && !jsonObj.get("seccompProfile").isJsonNull()) {
        IoK8sApiCoreV1SeccompProfile.validateJsonElement(jsonObj.get("seccompProfile"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("supplementalGroups") != null && !jsonObj.get("supplementalGroups").isJsonNull() && !jsonObj.get("supplementalGroups").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `supplementalGroups` to be an array in the JSON string but got `%s`", jsonObj.get("supplementalGroups").toString()));
      }
      if ((jsonObj.get("supplementalGroupsPolicy") != null && !jsonObj.get("supplementalGroupsPolicy").isJsonNull()) && !jsonObj.get("supplementalGroupsPolicy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `supplementalGroupsPolicy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("supplementalGroupsPolicy").toString()));
      }
      if (jsonObj.get("sysctls") != null && !jsonObj.get("sysctls").isJsonNull()) {
        JsonArray jsonArraysysctls = jsonObj.getAsJsonArray("sysctls");
        if (jsonArraysysctls != null) {
          // ensure the json data is an array
          if (!jsonObj.get("sysctls").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `sysctls` to be an array in the JSON string but got `%s`", jsonObj.get("sysctls").toString()));
          }

          // validate the optional field `sysctls` (array)
          for (int i = 0; i < jsonArraysysctls.size(); i++) {
            IoK8sApiCoreV1Sysctl.validateJsonElement(jsonArraysysctls.get(i));
          };
        }
      }
      // validate the optional field `windowsOptions`
      if (jsonObj.get("windowsOptions") != null && !jsonObj.get("windowsOptions").isJsonNull()) {
        IoK8sApiCoreV1WindowsSecurityContextOptions.validateJsonElement(jsonObj.get("windowsOptions"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IoK8sApiCoreV1PodSecurityContext.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IoK8sApiCoreV1PodSecurityContext' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IoK8sApiCoreV1PodSecurityContext> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IoK8sApiCoreV1PodSecurityContext.class));

       return (TypeAdapter<T>) new TypeAdapter<IoK8sApiCoreV1PodSecurityContext>() {
           @Override
           public void write(JsonWriter out, IoK8sApiCoreV1PodSecurityContext value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IoK8sApiCoreV1PodSecurityContext read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IoK8sApiCoreV1PodSecurityContext given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IoK8sApiCoreV1PodSecurityContext
   * @throws IOException if the JSON string is invalid with respect to IoK8sApiCoreV1PodSecurityContext
   */
  public static IoK8sApiCoreV1PodSecurityContext fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IoK8sApiCoreV1PodSecurityContext.class);
  }

  /**
   * Convert an instance of IoK8sApiCoreV1PodSecurityContext to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

