/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-24T03:51:41.763920791Z[Etc/UTC]", comments = "Generator version: 7.12.0-SNAPSHOT")
public class IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry {
  public static final String SERIALIZED_NAME_API_VERSION = "apiVersion";
  @SerializedName(SERIALIZED_NAME_API_VERSION)
  @javax.annotation.Nullable
  private String apiVersion;

  public static final String SERIALIZED_NAME_FIELDS_TYPE = "fieldsType";
  @SerializedName(SERIALIZED_NAME_FIELDS_TYPE)
  @javax.annotation.Nullable
  private String fieldsType;

  public static final String SERIALIZED_NAME_FIELDS_V1 = "fieldsV1";
  @SerializedName(SERIALIZED_NAME_FIELDS_V1)
  @javax.annotation.Nullable
  private Object fieldsV1;

  public static final String SERIALIZED_NAME_MANAGER = "manager";
  @SerializedName(SERIALIZED_NAME_MANAGER)
  @javax.annotation.Nullable
  private String manager;

  public static final String SERIALIZED_NAME_OPERATION = "operation";
  @SerializedName(SERIALIZED_NAME_OPERATION)
  @javax.annotation.Nullable
  private String operation;

  public static final String SERIALIZED_NAME_SUBRESOURCE = "subresource";
  @SerializedName(SERIALIZED_NAME_SUBRESOURCE)
  @javax.annotation.Nullable
  private String subresource;

  public static final String SERIALIZED_NAME_TIME = "time";
  @SerializedName(SERIALIZED_NAME_TIME)
  @javax.annotation.Nullable
  private OffsetDateTime time;

  public IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry() {
  }

  public IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry apiVersion(@javax.annotation.Nullable String apiVersion) {
    this.apiVersion = apiVersion;
    return this;
  }

  /**
   * APIVersion defines the version of this resource that this field set applies to. The format is \&quot;group/version\&quot; just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.
   * @return apiVersion
   */
  @javax.annotation.Nullable
  public String getApiVersion() {
    return apiVersion;
  }

  public void setApiVersion(@javax.annotation.Nullable String apiVersion) {
    this.apiVersion = apiVersion;
  }


  public IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry fieldsType(@javax.annotation.Nullable String fieldsType) {
    this.fieldsType = fieldsType;
    return this;
  }

  /**
   * FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \&quot;FieldsV1\&quot;
   * @return fieldsType
   */
  @javax.annotation.Nullable
  public String getFieldsType() {
    return fieldsType;
  }

  public void setFieldsType(@javax.annotation.Nullable String fieldsType) {
    this.fieldsType = fieldsType;
  }


  public IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry fieldsV1(@javax.annotation.Nullable Object fieldsV1) {
    this.fieldsV1 = fieldsV1;
    return this;
  }

  /**
   * FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.  Each key is either a &#39;.&#39; representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: &#39;f:&lt;name&gt;&#39;, where &lt;name&gt; is the name of a field in a struct, or key in a map &#39;v:&lt;value&gt;&#39;, where &lt;value&gt; is the exact json formatted value of a list item &#39;i:&lt;index&gt;&#39;, where &lt;index&gt; is position of a item in a list &#39;k:&lt;keys&gt;&#39;, where &lt;keys&gt; is a map of  a list item&#39;s key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.  The exact format is defined in sigs.k8s.io/structured-merge-diff
   * @return fieldsV1
   */
  @javax.annotation.Nullable
  public Object getFieldsV1() {
    return fieldsV1;
  }

  public void setFieldsV1(@javax.annotation.Nullable Object fieldsV1) {
    this.fieldsV1 = fieldsV1;
  }


  public IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry manager(@javax.annotation.Nullable String manager) {
    this.manager = manager;
    return this;
  }

  /**
   * Manager is an identifier of the workflow managing these fields.
   * @return manager
   */
  @javax.annotation.Nullable
  public String getManager() {
    return manager;
  }

  public void setManager(@javax.annotation.Nullable String manager) {
    this.manager = manager;
  }


  public IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry operation(@javax.annotation.Nullable String operation) {
    this.operation = operation;
    return this;
  }

  /**
   * Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are &#39;Apply&#39; and &#39;Update&#39;.
   * @return operation
   */
  @javax.annotation.Nullable
  public String getOperation() {
    return operation;
  }

  public void setOperation(@javax.annotation.Nullable String operation) {
    this.operation = operation;
  }


  public IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry subresource(@javax.annotation.Nullable String subresource) {
    this.subresource = subresource;
    return this;
  }

  /**
   * Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.
   * @return subresource
   */
  @javax.annotation.Nullable
  public String getSubresource() {
    return subresource;
  }

  public void setSubresource(@javax.annotation.Nullable String subresource) {
    this.subresource = subresource;
  }


  public IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry time(@javax.annotation.Nullable OffsetDateTime time) {
    this.time = time;
    return this;
  }

  /**
   * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
   * @return time
   */
  @javax.annotation.Nullable
  public OffsetDateTime getTime() {
    return time;
  }

  public void setTime(@javax.annotation.Nullable OffsetDateTime time) {
    this.time = time;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry ioK8sApimachineryPkgApisMetaV1ManagedFieldsEntry = (IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry) o;
    return Objects.equals(this.apiVersion, ioK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.apiVersion) &&
        Objects.equals(this.fieldsType, ioK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.fieldsType) &&
        Objects.equals(this.fieldsV1, ioK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.fieldsV1) &&
        Objects.equals(this.manager, ioK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.manager) &&
        Objects.equals(this.operation, ioK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.operation) &&
        Objects.equals(this.subresource, ioK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.subresource) &&
        Objects.equals(this.time, ioK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.time);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apiVersion, fieldsType, fieldsV1, manager, operation, subresource, time);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry {\n");
    sb.append("    apiVersion: ").append(toIndentedString(apiVersion)).append("\n");
    sb.append("    fieldsType: ").append(toIndentedString(fieldsType)).append("\n");
    sb.append("    fieldsV1: ").append(toIndentedString(fieldsV1)).append("\n");
    sb.append("    manager: ").append(toIndentedString(manager)).append("\n");
    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
    sb.append("    subresource: ").append(toIndentedString(subresource)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("apiVersion");
    openapiFields.add("fieldsType");
    openapiFields.add("fieldsV1");
    openapiFields.add("manager");
    openapiFields.add("operation");
    openapiFields.add("subresource");
    openapiFields.add("time");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry is not found in the empty JSON string", IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("apiVersion") != null && !jsonObj.get("apiVersion").isJsonNull()) && !jsonObj.get("apiVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `apiVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("apiVersion").toString()));
      }
      if ((jsonObj.get("fieldsType") != null && !jsonObj.get("fieldsType").isJsonNull()) && !jsonObj.get("fieldsType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fieldsType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fieldsType").toString()));
      }
      if ((jsonObj.get("manager") != null && !jsonObj.get("manager").isJsonNull()) && !jsonObj.get("manager").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `manager` to be a primitive type in the JSON string but got `%s`", jsonObj.get("manager").toString()));
      }
      if ((jsonObj.get("operation") != null && !jsonObj.get("operation").isJsonNull()) && !jsonObj.get("operation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `operation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("operation").toString()));
      }
      if ((jsonObj.get("subresource") != null && !jsonObj.get("subresource").isJsonNull()) && !jsonObj.get("subresource").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subresource` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subresource").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.class));

       return (TypeAdapter<T>) new TypeAdapter<IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry>() {
           @Override
           public void write(JsonWriter out, IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry
   * @throws IOException if the JSON string is invalid with respect to IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry
   */
  public static IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.class);
  }

  /**
   * Convert an instance of IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

