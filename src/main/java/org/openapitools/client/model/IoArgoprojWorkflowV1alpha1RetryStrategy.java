/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1Backoff;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1RetryAffinity;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * RetryStrategy provides controls on how to retry a workflow step
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-24T03:51:41.763920791Z[Etc/UTC]", comments = "Generator version: 7.12.0-SNAPSHOT")
public class IoArgoprojWorkflowV1alpha1RetryStrategy {
  public static final String SERIALIZED_NAME_AFFINITY = "affinity";
  @SerializedName(SERIALIZED_NAME_AFFINITY)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1RetryAffinity affinity;

  public static final String SERIALIZED_NAME_BACKOFF = "backoff";
  @SerializedName(SERIALIZED_NAME_BACKOFF)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1Backoff backoff;

  public static final String SERIALIZED_NAME_EXPRESSION = "expression";
  @SerializedName(SERIALIZED_NAME_EXPRESSION)
  @javax.annotation.Nullable
  private String expression;

  public static final String SERIALIZED_NAME_LIMIT = "limit";
  @SerializedName(SERIALIZED_NAME_LIMIT)
  @javax.annotation.Nullable
  private String limit;

  public static final String SERIALIZED_NAME_RETRY_POLICY = "retryPolicy";
  @SerializedName(SERIALIZED_NAME_RETRY_POLICY)
  @javax.annotation.Nullable
  private String retryPolicy;

  public IoArgoprojWorkflowV1alpha1RetryStrategy() {
  }

  public IoArgoprojWorkflowV1alpha1RetryStrategy affinity(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1RetryAffinity affinity) {
    this.affinity = affinity;
    return this;
  }

  /**
   * Get affinity
   * @return affinity
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1RetryAffinity getAffinity() {
    return affinity;
  }

  public void setAffinity(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1RetryAffinity affinity) {
    this.affinity = affinity;
  }


  public IoArgoprojWorkflowV1alpha1RetryStrategy backoff(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1Backoff backoff) {
    this.backoff = backoff;
    return this;
  }

  /**
   * Get backoff
   * @return backoff
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1Backoff getBackoff() {
    return backoff;
  }

  public void setBackoff(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1Backoff backoff) {
    this.backoff = backoff;
  }


  public IoArgoprojWorkflowV1alpha1RetryStrategy expression(@javax.annotation.Nullable String expression) {
    this.expression = expression;
    return this;
  }

  /**
   * Expression is a condition expression for when a node will be retried. If it evaluates to false, the node will not be retried and the retry strategy will be ignored
   * @return expression
   */
  @javax.annotation.Nullable
  public String getExpression() {
    return expression;
  }

  public void setExpression(@javax.annotation.Nullable String expression) {
    this.expression = expression;
  }


  public IoArgoprojWorkflowV1alpha1RetryStrategy limit(@javax.annotation.Nullable String limit) {
    this.limit = limit;
    return this;
  }

  /**
   * Get limit
   * @return limit
   */
  @javax.annotation.Nullable
  public String getLimit() {
    return limit;
  }

  public void setLimit(@javax.annotation.Nullable String limit) {
    this.limit = limit;
  }


  public IoArgoprojWorkflowV1alpha1RetryStrategy retryPolicy(@javax.annotation.Nullable String retryPolicy) {
    this.retryPolicy = retryPolicy;
    return this;
  }

  /**
   * RetryPolicy is a policy of NodePhase statuses that will be retried
   * @return retryPolicy
   */
  @javax.annotation.Nullable
  public String getRetryPolicy() {
    return retryPolicy;
  }

  public void setRetryPolicy(@javax.annotation.Nullable String retryPolicy) {
    this.retryPolicy = retryPolicy;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoArgoprojWorkflowV1alpha1RetryStrategy ioArgoprojWorkflowV1alpha1RetryStrategy = (IoArgoprojWorkflowV1alpha1RetryStrategy) o;
    return Objects.equals(this.affinity, ioArgoprojWorkflowV1alpha1RetryStrategy.affinity) &&
        Objects.equals(this.backoff, ioArgoprojWorkflowV1alpha1RetryStrategy.backoff) &&
        Objects.equals(this.expression, ioArgoprojWorkflowV1alpha1RetryStrategy.expression) &&
        Objects.equals(this.limit, ioArgoprojWorkflowV1alpha1RetryStrategy.limit) &&
        Objects.equals(this.retryPolicy, ioArgoprojWorkflowV1alpha1RetryStrategy.retryPolicy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(affinity, backoff, expression, limit, retryPolicy);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoArgoprojWorkflowV1alpha1RetryStrategy {\n");
    sb.append("    affinity: ").append(toIndentedString(affinity)).append("\n");
    sb.append("    backoff: ").append(toIndentedString(backoff)).append("\n");
    sb.append("    expression: ").append(toIndentedString(expression)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    retryPolicy: ").append(toIndentedString(retryPolicy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("affinity");
    openapiFields.add("backoff");
    openapiFields.add("expression");
    openapiFields.add("limit");
    openapiFields.add("retryPolicy");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IoArgoprojWorkflowV1alpha1RetryStrategy
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IoArgoprojWorkflowV1alpha1RetryStrategy.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IoArgoprojWorkflowV1alpha1RetryStrategy is not found in the empty JSON string", IoArgoprojWorkflowV1alpha1RetryStrategy.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IoArgoprojWorkflowV1alpha1RetryStrategy.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IoArgoprojWorkflowV1alpha1RetryStrategy` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `affinity`
      if (jsonObj.get("affinity") != null && !jsonObj.get("affinity").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1RetryAffinity.validateJsonElement(jsonObj.get("affinity"));
      }
      // validate the optional field `backoff`
      if (jsonObj.get("backoff") != null && !jsonObj.get("backoff").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1Backoff.validateJsonElement(jsonObj.get("backoff"));
      }
      if ((jsonObj.get("expression") != null && !jsonObj.get("expression").isJsonNull()) && !jsonObj.get("expression").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `expression` to be a primitive type in the JSON string but got `%s`", jsonObj.get("expression").toString()));
      }
      if ((jsonObj.get("limit") != null && !jsonObj.get("limit").isJsonNull()) && !jsonObj.get("limit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `limit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("limit").toString()));
      }
      if ((jsonObj.get("retryPolicy") != null && !jsonObj.get("retryPolicy").isJsonNull()) && !jsonObj.get("retryPolicy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `retryPolicy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("retryPolicy").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IoArgoprojWorkflowV1alpha1RetryStrategy.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IoArgoprojWorkflowV1alpha1RetryStrategy' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IoArgoprojWorkflowV1alpha1RetryStrategy> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IoArgoprojWorkflowV1alpha1RetryStrategy.class));

       return (TypeAdapter<T>) new TypeAdapter<IoArgoprojWorkflowV1alpha1RetryStrategy>() {
           @Override
           public void write(JsonWriter out, IoArgoprojWorkflowV1alpha1RetryStrategy value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IoArgoprojWorkflowV1alpha1RetryStrategy read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IoArgoprojWorkflowV1alpha1RetryStrategy given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IoArgoprojWorkflowV1alpha1RetryStrategy
   * @throws IOException if the JSON string is invalid with respect to IoArgoprojWorkflowV1alpha1RetryStrategy
   */
  public static IoArgoprojWorkflowV1alpha1RetryStrategy fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IoArgoprojWorkflowV1alpha1RetryStrategy.class);
  }

  /**
   * Convert an instance of IoArgoprojWorkflowV1alpha1RetryStrategy to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

