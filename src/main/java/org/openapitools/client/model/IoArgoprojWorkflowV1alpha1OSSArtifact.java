/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1OSSLifecycleRule;
import org.openapitools.client.model.IoK8sApiCoreV1SecretKeySelector;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * OSSArtifact is the location of an Alibaba Cloud OSS artifact
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-24T03:51:41.763920791Z[Etc/UTC]", comments = "Generator version: 7.12.0-SNAPSHOT")
public class IoArgoprojWorkflowV1alpha1OSSArtifact {
  public static final String SERIALIZED_NAME_ACCESS_KEY_SECRET = "accessKeySecret";
  @SerializedName(SERIALIZED_NAME_ACCESS_KEY_SECRET)
  @javax.annotation.Nullable
  private IoK8sApiCoreV1SecretKeySelector accessKeySecret;

  public static final String SERIALIZED_NAME_BUCKET = "bucket";
  @SerializedName(SERIALIZED_NAME_BUCKET)
  @javax.annotation.Nullable
  private String bucket;

  public static final String SERIALIZED_NAME_CREATE_BUCKET_IF_NOT_PRESENT = "createBucketIfNotPresent";
  @SerializedName(SERIALIZED_NAME_CREATE_BUCKET_IF_NOT_PRESENT)
  @javax.annotation.Nullable
  private Boolean createBucketIfNotPresent;

  public static final String SERIALIZED_NAME_ENDPOINT = "endpoint";
  @SerializedName(SERIALIZED_NAME_ENDPOINT)
  @javax.annotation.Nullable
  private String endpoint;

  public static final String SERIALIZED_NAME_KEY = "key";
  @SerializedName(SERIALIZED_NAME_KEY)
  @javax.annotation.Nonnull
  private String key;

  public static final String SERIALIZED_NAME_LIFECYCLE_RULE = "lifecycleRule";
  @SerializedName(SERIALIZED_NAME_LIFECYCLE_RULE)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1OSSLifecycleRule lifecycleRule;

  public static final String SERIALIZED_NAME_SECRET_KEY_SECRET = "secretKeySecret";
  @SerializedName(SERIALIZED_NAME_SECRET_KEY_SECRET)
  @javax.annotation.Nullable
  private IoK8sApiCoreV1SecretKeySelector secretKeySecret;

  public static final String SERIALIZED_NAME_SECURITY_TOKEN = "securityToken";
  @SerializedName(SERIALIZED_NAME_SECURITY_TOKEN)
  @javax.annotation.Nullable
  private String securityToken;

  public static final String SERIALIZED_NAME_USE_S_D_K_CREDS = "useSDKCreds";
  @SerializedName(SERIALIZED_NAME_USE_S_D_K_CREDS)
  @javax.annotation.Nullable
  private Boolean useSDKCreds;

  public IoArgoprojWorkflowV1alpha1OSSArtifact() {
  }

  public IoArgoprojWorkflowV1alpha1OSSArtifact accessKeySecret(@javax.annotation.Nullable IoK8sApiCoreV1SecretKeySelector accessKeySecret) {
    this.accessKeySecret = accessKeySecret;
    return this;
  }

  /**
   * Get accessKeySecret
   * @return accessKeySecret
   */
  @javax.annotation.Nullable
  public IoK8sApiCoreV1SecretKeySelector getAccessKeySecret() {
    return accessKeySecret;
  }

  public void setAccessKeySecret(@javax.annotation.Nullable IoK8sApiCoreV1SecretKeySelector accessKeySecret) {
    this.accessKeySecret = accessKeySecret;
  }


  public IoArgoprojWorkflowV1alpha1OSSArtifact bucket(@javax.annotation.Nullable String bucket) {
    this.bucket = bucket;
    return this;
  }

  /**
   * Bucket is the name of the bucket
   * @return bucket
   */
  @javax.annotation.Nullable
  public String getBucket() {
    return bucket;
  }

  public void setBucket(@javax.annotation.Nullable String bucket) {
    this.bucket = bucket;
  }


  public IoArgoprojWorkflowV1alpha1OSSArtifact createBucketIfNotPresent(@javax.annotation.Nullable Boolean createBucketIfNotPresent) {
    this.createBucketIfNotPresent = createBucketIfNotPresent;
    return this;
  }

  /**
   * CreateBucketIfNotPresent tells the driver to attempt to create the OSS bucket for output artifacts, if it doesn&#39;t exist
   * @return createBucketIfNotPresent
   */
  @javax.annotation.Nullable
  public Boolean getCreateBucketIfNotPresent() {
    return createBucketIfNotPresent;
  }

  public void setCreateBucketIfNotPresent(@javax.annotation.Nullable Boolean createBucketIfNotPresent) {
    this.createBucketIfNotPresent = createBucketIfNotPresent;
  }


  public IoArgoprojWorkflowV1alpha1OSSArtifact endpoint(@javax.annotation.Nullable String endpoint) {
    this.endpoint = endpoint;
    return this;
  }

  /**
   * Endpoint is the hostname of the bucket endpoint
   * @return endpoint
   */
  @javax.annotation.Nullable
  public String getEndpoint() {
    return endpoint;
  }

  public void setEndpoint(@javax.annotation.Nullable String endpoint) {
    this.endpoint = endpoint;
  }


  public IoArgoprojWorkflowV1alpha1OSSArtifact key(@javax.annotation.Nonnull String key) {
    this.key = key;
    return this;
  }

  /**
   * Key is the path in the bucket where the artifact resides
   * @return key
   */
  @javax.annotation.Nonnull
  public String getKey() {
    return key;
  }

  public void setKey(@javax.annotation.Nonnull String key) {
    this.key = key;
  }


  public IoArgoprojWorkflowV1alpha1OSSArtifact lifecycleRule(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1OSSLifecycleRule lifecycleRule) {
    this.lifecycleRule = lifecycleRule;
    return this;
  }

  /**
   * Get lifecycleRule
   * @return lifecycleRule
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1OSSLifecycleRule getLifecycleRule() {
    return lifecycleRule;
  }

  public void setLifecycleRule(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1OSSLifecycleRule lifecycleRule) {
    this.lifecycleRule = lifecycleRule;
  }


  public IoArgoprojWorkflowV1alpha1OSSArtifact secretKeySecret(@javax.annotation.Nullable IoK8sApiCoreV1SecretKeySelector secretKeySecret) {
    this.secretKeySecret = secretKeySecret;
    return this;
  }

  /**
   * Get secretKeySecret
   * @return secretKeySecret
   */
  @javax.annotation.Nullable
  public IoK8sApiCoreV1SecretKeySelector getSecretKeySecret() {
    return secretKeySecret;
  }

  public void setSecretKeySecret(@javax.annotation.Nullable IoK8sApiCoreV1SecretKeySelector secretKeySecret) {
    this.secretKeySecret = secretKeySecret;
  }


  public IoArgoprojWorkflowV1alpha1OSSArtifact securityToken(@javax.annotation.Nullable String securityToken) {
    this.securityToken = securityToken;
    return this;
  }

  /**
   * SecurityToken is the user&#39;s temporary security token. For more details, check out: https://www.alibabacloud.com/help/doc-detail/100624.htm
   * @return securityToken
   */
  @javax.annotation.Nullable
  public String getSecurityToken() {
    return securityToken;
  }

  public void setSecurityToken(@javax.annotation.Nullable String securityToken) {
    this.securityToken = securityToken;
  }


  public IoArgoprojWorkflowV1alpha1OSSArtifact useSDKCreds(@javax.annotation.Nullable Boolean useSDKCreds) {
    this.useSDKCreds = useSDKCreds;
    return this;
  }

  /**
   * UseSDKCreds tells the driver to figure out credentials based on sdk defaults.
   * @return useSDKCreds
   */
  @javax.annotation.Nullable
  public Boolean getUseSDKCreds() {
    return useSDKCreds;
  }

  public void setUseSDKCreds(@javax.annotation.Nullable Boolean useSDKCreds) {
    this.useSDKCreds = useSDKCreds;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoArgoprojWorkflowV1alpha1OSSArtifact ioArgoprojWorkflowV1alpha1OSSArtifact = (IoArgoprojWorkflowV1alpha1OSSArtifact) o;
    return Objects.equals(this.accessKeySecret, ioArgoprojWorkflowV1alpha1OSSArtifact.accessKeySecret) &&
        Objects.equals(this.bucket, ioArgoprojWorkflowV1alpha1OSSArtifact.bucket) &&
        Objects.equals(this.createBucketIfNotPresent, ioArgoprojWorkflowV1alpha1OSSArtifact.createBucketIfNotPresent) &&
        Objects.equals(this.endpoint, ioArgoprojWorkflowV1alpha1OSSArtifact.endpoint) &&
        Objects.equals(this.key, ioArgoprojWorkflowV1alpha1OSSArtifact.key) &&
        Objects.equals(this.lifecycleRule, ioArgoprojWorkflowV1alpha1OSSArtifact.lifecycleRule) &&
        Objects.equals(this.secretKeySecret, ioArgoprojWorkflowV1alpha1OSSArtifact.secretKeySecret) &&
        Objects.equals(this.securityToken, ioArgoprojWorkflowV1alpha1OSSArtifact.securityToken) &&
        Objects.equals(this.useSDKCreds, ioArgoprojWorkflowV1alpha1OSSArtifact.useSDKCreds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessKeySecret, bucket, createBucketIfNotPresent, endpoint, key, lifecycleRule, secretKeySecret, securityToken, useSDKCreds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoArgoprojWorkflowV1alpha1OSSArtifact {\n");
    sb.append("    accessKeySecret: ").append(toIndentedString(accessKeySecret)).append("\n");
    sb.append("    bucket: ").append(toIndentedString(bucket)).append("\n");
    sb.append("    createBucketIfNotPresent: ").append(toIndentedString(createBucketIfNotPresent)).append("\n");
    sb.append("    endpoint: ").append(toIndentedString(endpoint)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    lifecycleRule: ").append(toIndentedString(lifecycleRule)).append("\n");
    sb.append("    secretKeySecret: ").append(toIndentedString(secretKeySecret)).append("\n");
    sb.append("    securityToken: ").append(toIndentedString(securityToken)).append("\n");
    sb.append("    useSDKCreds: ").append(toIndentedString(useSDKCreds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accessKeySecret");
    openapiFields.add("bucket");
    openapiFields.add("createBucketIfNotPresent");
    openapiFields.add("endpoint");
    openapiFields.add("key");
    openapiFields.add("lifecycleRule");
    openapiFields.add("secretKeySecret");
    openapiFields.add("securityToken");
    openapiFields.add("useSDKCreds");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("key");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IoArgoprojWorkflowV1alpha1OSSArtifact
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IoArgoprojWorkflowV1alpha1OSSArtifact.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IoArgoprojWorkflowV1alpha1OSSArtifact is not found in the empty JSON string", IoArgoprojWorkflowV1alpha1OSSArtifact.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IoArgoprojWorkflowV1alpha1OSSArtifact.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IoArgoprojWorkflowV1alpha1OSSArtifact` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : IoArgoprojWorkflowV1alpha1OSSArtifact.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `accessKeySecret`
      if (jsonObj.get("accessKeySecret") != null && !jsonObj.get("accessKeySecret").isJsonNull()) {
        IoK8sApiCoreV1SecretKeySelector.validateJsonElement(jsonObj.get("accessKeySecret"));
      }
      if ((jsonObj.get("bucket") != null && !jsonObj.get("bucket").isJsonNull()) && !jsonObj.get("bucket").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bucket` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bucket").toString()));
      }
      if ((jsonObj.get("endpoint") != null && !jsonObj.get("endpoint").isJsonNull()) && !jsonObj.get("endpoint").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endpoint` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endpoint").toString()));
      }
      if (!jsonObj.get("key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("key").toString()));
      }
      // validate the optional field `lifecycleRule`
      if (jsonObj.get("lifecycleRule") != null && !jsonObj.get("lifecycleRule").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1OSSLifecycleRule.validateJsonElement(jsonObj.get("lifecycleRule"));
      }
      // validate the optional field `secretKeySecret`
      if (jsonObj.get("secretKeySecret") != null && !jsonObj.get("secretKeySecret").isJsonNull()) {
        IoK8sApiCoreV1SecretKeySelector.validateJsonElement(jsonObj.get("secretKeySecret"));
      }
      if ((jsonObj.get("securityToken") != null && !jsonObj.get("securityToken").isJsonNull()) && !jsonObj.get("securityToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `securityToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("securityToken").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IoArgoprojWorkflowV1alpha1OSSArtifact.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IoArgoprojWorkflowV1alpha1OSSArtifact' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IoArgoprojWorkflowV1alpha1OSSArtifact> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IoArgoprojWorkflowV1alpha1OSSArtifact.class));

       return (TypeAdapter<T>) new TypeAdapter<IoArgoprojWorkflowV1alpha1OSSArtifact>() {
           @Override
           public void write(JsonWriter out, IoArgoprojWorkflowV1alpha1OSSArtifact value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IoArgoprojWorkflowV1alpha1OSSArtifact read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IoArgoprojWorkflowV1alpha1OSSArtifact given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IoArgoprojWorkflowV1alpha1OSSArtifact
   * @throws IOException if the JSON string is invalid with respect to IoArgoprojWorkflowV1alpha1OSSArtifact
   */
  public static IoArgoprojWorkflowV1alpha1OSSArtifact fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IoArgoprojWorkflowV1alpha1OSSArtifact.class);
  }

  /**
   * Convert an instance of IoArgoprojWorkflowV1alpha1OSSArtifact to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

