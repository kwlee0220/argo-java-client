/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1ContainerNode;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1ContainerSetRetryStrategy;
import org.openapitools.client.model.IoK8sApiCoreV1VolumeMount;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * IoArgoprojWorkflowV1alpha1ContainerSetTemplate
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-24T03:51:41.763920791Z[Etc/UTC]", comments = "Generator version: 7.12.0-SNAPSHOT")
public class IoArgoprojWorkflowV1alpha1ContainerSetTemplate {
  public static final String SERIALIZED_NAME_CONTAINERS = "containers";
  @SerializedName(SERIALIZED_NAME_CONTAINERS)
  @javax.annotation.Nonnull
  private List<IoArgoprojWorkflowV1alpha1ContainerNode> containers = new ArrayList<>();

  public static final String SERIALIZED_NAME_RETRY_STRATEGY = "retryStrategy";
  @SerializedName(SERIALIZED_NAME_RETRY_STRATEGY)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1ContainerSetRetryStrategy retryStrategy;

  public static final String SERIALIZED_NAME_VOLUME_MOUNTS = "volumeMounts";
  @SerializedName(SERIALIZED_NAME_VOLUME_MOUNTS)
  @javax.annotation.Nullable
  private List<IoK8sApiCoreV1VolumeMount> volumeMounts = new ArrayList<>();

  public IoArgoprojWorkflowV1alpha1ContainerSetTemplate() {
  }

  public IoArgoprojWorkflowV1alpha1ContainerSetTemplate containers(@javax.annotation.Nonnull List<IoArgoprojWorkflowV1alpha1ContainerNode> containers) {
    this.containers = containers;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1ContainerSetTemplate addContainersItem(IoArgoprojWorkflowV1alpha1ContainerNode containersItem) {
    if (this.containers == null) {
      this.containers = new ArrayList<>();
    }
    this.containers.add(containersItem);
    return this;
  }

  /**
   * Get containers
   * @return containers
   */
  @javax.annotation.Nonnull
  public List<IoArgoprojWorkflowV1alpha1ContainerNode> getContainers() {
    return containers;
  }

  public void setContainers(@javax.annotation.Nonnull List<IoArgoprojWorkflowV1alpha1ContainerNode> containers) {
    this.containers = containers;
  }


  public IoArgoprojWorkflowV1alpha1ContainerSetTemplate retryStrategy(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1ContainerSetRetryStrategy retryStrategy) {
    this.retryStrategy = retryStrategy;
    return this;
  }

  /**
   * Get retryStrategy
   * @return retryStrategy
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1ContainerSetRetryStrategy getRetryStrategy() {
    return retryStrategy;
  }

  public void setRetryStrategy(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1ContainerSetRetryStrategy retryStrategy) {
    this.retryStrategy = retryStrategy;
  }


  public IoArgoprojWorkflowV1alpha1ContainerSetTemplate volumeMounts(@javax.annotation.Nullable List<IoK8sApiCoreV1VolumeMount> volumeMounts) {
    this.volumeMounts = volumeMounts;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1ContainerSetTemplate addVolumeMountsItem(IoK8sApiCoreV1VolumeMount volumeMountsItem) {
    if (this.volumeMounts == null) {
      this.volumeMounts = new ArrayList<>();
    }
    this.volumeMounts.add(volumeMountsItem);
    return this;
  }

  /**
   * Get volumeMounts
   * @return volumeMounts
   */
  @javax.annotation.Nullable
  public List<IoK8sApiCoreV1VolumeMount> getVolumeMounts() {
    return volumeMounts;
  }

  public void setVolumeMounts(@javax.annotation.Nullable List<IoK8sApiCoreV1VolumeMount> volumeMounts) {
    this.volumeMounts = volumeMounts;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoArgoprojWorkflowV1alpha1ContainerSetTemplate ioArgoprojWorkflowV1alpha1ContainerSetTemplate = (IoArgoprojWorkflowV1alpha1ContainerSetTemplate) o;
    return Objects.equals(this.containers, ioArgoprojWorkflowV1alpha1ContainerSetTemplate.containers) &&
        Objects.equals(this.retryStrategy, ioArgoprojWorkflowV1alpha1ContainerSetTemplate.retryStrategy) &&
        Objects.equals(this.volumeMounts, ioArgoprojWorkflowV1alpha1ContainerSetTemplate.volumeMounts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(containers, retryStrategy, volumeMounts);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoArgoprojWorkflowV1alpha1ContainerSetTemplate {\n");
    sb.append("    containers: ").append(toIndentedString(containers)).append("\n");
    sb.append("    retryStrategy: ").append(toIndentedString(retryStrategy)).append("\n");
    sb.append("    volumeMounts: ").append(toIndentedString(volumeMounts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("containers");
    openapiFields.add("retryStrategy");
    openapiFields.add("volumeMounts");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("containers");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IoArgoprojWorkflowV1alpha1ContainerSetTemplate
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IoArgoprojWorkflowV1alpha1ContainerSetTemplate.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IoArgoprojWorkflowV1alpha1ContainerSetTemplate is not found in the empty JSON string", IoArgoprojWorkflowV1alpha1ContainerSetTemplate.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IoArgoprojWorkflowV1alpha1ContainerSetTemplate.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IoArgoprojWorkflowV1alpha1ContainerSetTemplate` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : IoArgoprojWorkflowV1alpha1ContainerSetTemplate.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the json data is an array
      if (!jsonObj.get("containers").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `containers` to be an array in the JSON string but got `%s`", jsonObj.get("containers").toString()));
      }

      JsonArray jsonArraycontainers = jsonObj.getAsJsonArray("containers");
      // validate the required field `containers` (array)
      for (int i = 0; i < jsonArraycontainers.size(); i++) {
        IoArgoprojWorkflowV1alpha1ContainerNode.validateJsonElement(jsonArraycontainers.get(i));
      };
      // validate the optional field `retryStrategy`
      if (jsonObj.get("retryStrategy") != null && !jsonObj.get("retryStrategy").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1ContainerSetRetryStrategy.validateJsonElement(jsonObj.get("retryStrategy"));
      }
      if (jsonObj.get("volumeMounts") != null && !jsonObj.get("volumeMounts").isJsonNull()) {
        JsonArray jsonArrayvolumeMounts = jsonObj.getAsJsonArray("volumeMounts");
        if (jsonArrayvolumeMounts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("volumeMounts").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `volumeMounts` to be an array in the JSON string but got `%s`", jsonObj.get("volumeMounts").toString()));
          }

          // validate the optional field `volumeMounts` (array)
          for (int i = 0; i < jsonArrayvolumeMounts.size(); i++) {
            IoK8sApiCoreV1VolumeMount.validateJsonElement(jsonArrayvolumeMounts.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IoArgoprojWorkflowV1alpha1ContainerSetTemplate.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IoArgoprojWorkflowV1alpha1ContainerSetTemplate' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IoArgoprojWorkflowV1alpha1ContainerSetTemplate> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IoArgoprojWorkflowV1alpha1ContainerSetTemplate.class));

       return (TypeAdapter<T>) new TypeAdapter<IoArgoprojWorkflowV1alpha1ContainerSetTemplate>() {
           @Override
           public void write(JsonWriter out, IoArgoprojWorkflowV1alpha1ContainerSetTemplate value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IoArgoprojWorkflowV1alpha1ContainerSetTemplate read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IoArgoprojWorkflowV1alpha1ContainerSetTemplate given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IoArgoprojWorkflowV1alpha1ContainerSetTemplate
   * @throws IOException if the JSON string is invalid with respect to IoArgoprojWorkflowV1alpha1ContainerSetTemplate
   */
  public static IoArgoprojWorkflowV1alpha1ContainerSetTemplate fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IoArgoprojWorkflowV1alpha1ContainerSetTemplate.class);
  }

  /**
   * Convert an instance of IoArgoprojWorkflowV1alpha1ContainerSetTemplate to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

