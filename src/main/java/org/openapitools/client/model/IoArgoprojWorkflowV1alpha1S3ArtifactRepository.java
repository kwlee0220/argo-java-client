/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1CreateS3BucketOptions;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1S3EncryptionOptions;
import org.openapitools.client.model.IoK8sApiCoreV1SecretKeySelector;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * S3ArtifactRepository defines the controller configuration for an S3 artifact repository
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-24T03:51:41.763920791Z[Etc/UTC]", comments = "Generator version: 7.12.0-SNAPSHOT")
public class IoArgoprojWorkflowV1alpha1S3ArtifactRepository {
  public static final String SERIALIZED_NAME_ACCESS_KEY_SECRET = "accessKeySecret";
  @SerializedName(SERIALIZED_NAME_ACCESS_KEY_SECRET)
  @javax.annotation.Nullable
  private IoK8sApiCoreV1SecretKeySelector accessKeySecret;

  public static final String SERIALIZED_NAME_BUCKET = "bucket";
  @SerializedName(SERIALIZED_NAME_BUCKET)
  @javax.annotation.Nullable
  private String bucket;

  public static final String SERIALIZED_NAME_CA_SECRET = "caSecret";
  @SerializedName(SERIALIZED_NAME_CA_SECRET)
  @javax.annotation.Nullable
  private IoK8sApiCoreV1SecretKeySelector caSecret;

  public static final String SERIALIZED_NAME_CREATE_BUCKET_IF_NOT_PRESENT = "createBucketIfNotPresent";
  @SerializedName(SERIALIZED_NAME_CREATE_BUCKET_IF_NOT_PRESENT)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1CreateS3BucketOptions createBucketIfNotPresent;

  public static final String SERIALIZED_NAME_ENCRYPTION_OPTIONS = "encryptionOptions";
  @SerializedName(SERIALIZED_NAME_ENCRYPTION_OPTIONS)
  @javax.annotation.Nullable
  private IoArgoprojWorkflowV1alpha1S3EncryptionOptions encryptionOptions;

  public static final String SERIALIZED_NAME_ENDPOINT = "endpoint";
  @SerializedName(SERIALIZED_NAME_ENDPOINT)
  @javax.annotation.Nullable
  private String endpoint;

  public static final String SERIALIZED_NAME_INSECURE = "insecure";
  @SerializedName(SERIALIZED_NAME_INSECURE)
  @javax.annotation.Nullable
  private Boolean insecure;

  public static final String SERIALIZED_NAME_KEY_FORMAT = "keyFormat";
  @SerializedName(SERIALIZED_NAME_KEY_FORMAT)
  @javax.annotation.Nullable
  private String keyFormat;

  public static final String SERIALIZED_NAME_KEY_PREFIX = "keyPrefix";
  @SerializedName(SERIALIZED_NAME_KEY_PREFIX)
  @javax.annotation.Nullable
  private String keyPrefix;

  public static final String SERIALIZED_NAME_REGION = "region";
  @SerializedName(SERIALIZED_NAME_REGION)
  @javax.annotation.Nullable
  private String region;

  public static final String SERIALIZED_NAME_ROLE_A_R_N = "roleARN";
  @SerializedName(SERIALIZED_NAME_ROLE_A_R_N)
  @javax.annotation.Nullable
  private String roleARN;

  public static final String SERIALIZED_NAME_SECRET_KEY_SECRET = "secretKeySecret";
  @SerializedName(SERIALIZED_NAME_SECRET_KEY_SECRET)
  @javax.annotation.Nullable
  private IoK8sApiCoreV1SecretKeySelector secretKeySecret;

  public static final String SERIALIZED_NAME_SESSION_TOKEN_SECRET = "sessionTokenSecret";
  @SerializedName(SERIALIZED_NAME_SESSION_TOKEN_SECRET)
  @javax.annotation.Nullable
  private IoK8sApiCoreV1SecretKeySelector sessionTokenSecret;

  public static final String SERIALIZED_NAME_USE_S_D_K_CREDS = "useSDKCreds";
  @SerializedName(SERIALIZED_NAME_USE_S_D_K_CREDS)
  @javax.annotation.Nullable
  private Boolean useSDKCreds;

  public IoArgoprojWorkflowV1alpha1S3ArtifactRepository() {
  }

  public IoArgoprojWorkflowV1alpha1S3ArtifactRepository accessKeySecret(@javax.annotation.Nullable IoK8sApiCoreV1SecretKeySelector accessKeySecret) {
    this.accessKeySecret = accessKeySecret;
    return this;
  }

  /**
   * Get accessKeySecret
   * @return accessKeySecret
   */
  @javax.annotation.Nullable
  public IoK8sApiCoreV1SecretKeySelector getAccessKeySecret() {
    return accessKeySecret;
  }

  public void setAccessKeySecret(@javax.annotation.Nullable IoK8sApiCoreV1SecretKeySelector accessKeySecret) {
    this.accessKeySecret = accessKeySecret;
  }


  public IoArgoprojWorkflowV1alpha1S3ArtifactRepository bucket(@javax.annotation.Nullable String bucket) {
    this.bucket = bucket;
    return this;
  }

  /**
   * Bucket is the name of the bucket
   * @return bucket
   */
  @javax.annotation.Nullable
  public String getBucket() {
    return bucket;
  }

  public void setBucket(@javax.annotation.Nullable String bucket) {
    this.bucket = bucket;
  }


  public IoArgoprojWorkflowV1alpha1S3ArtifactRepository caSecret(@javax.annotation.Nullable IoK8sApiCoreV1SecretKeySelector caSecret) {
    this.caSecret = caSecret;
    return this;
  }

  /**
   * Get caSecret
   * @return caSecret
   */
  @javax.annotation.Nullable
  public IoK8sApiCoreV1SecretKeySelector getCaSecret() {
    return caSecret;
  }

  public void setCaSecret(@javax.annotation.Nullable IoK8sApiCoreV1SecretKeySelector caSecret) {
    this.caSecret = caSecret;
  }


  public IoArgoprojWorkflowV1alpha1S3ArtifactRepository createBucketIfNotPresent(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1CreateS3BucketOptions createBucketIfNotPresent) {
    this.createBucketIfNotPresent = createBucketIfNotPresent;
    return this;
  }

  /**
   * Get createBucketIfNotPresent
   * @return createBucketIfNotPresent
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1CreateS3BucketOptions getCreateBucketIfNotPresent() {
    return createBucketIfNotPresent;
  }

  public void setCreateBucketIfNotPresent(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1CreateS3BucketOptions createBucketIfNotPresent) {
    this.createBucketIfNotPresent = createBucketIfNotPresent;
  }


  public IoArgoprojWorkflowV1alpha1S3ArtifactRepository encryptionOptions(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1S3EncryptionOptions encryptionOptions) {
    this.encryptionOptions = encryptionOptions;
    return this;
  }

  /**
   * Get encryptionOptions
   * @return encryptionOptions
   */
  @javax.annotation.Nullable
  public IoArgoprojWorkflowV1alpha1S3EncryptionOptions getEncryptionOptions() {
    return encryptionOptions;
  }

  public void setEncryptionOptions(@javax.annotation.Nullable IoArgoprojWorkflowV1alpha1S3EncryptionOptions encryptionOptions) {
    this.encryptionOptions = encryptionOptions;
  }


  public IoArgoprojWorkflowV1alpha1S3ArtifactRepository endpoint(@javax.annotation.Nullable String endpoint) {
    this.endpoint = endpoint;
    return this;
  }

  /**
   * Endpoint is the hostname of the bucket endpoint
   * @return endpoint
   */
  @javax.annotation.Nullable
  public String getEndpoint() {
    return endpoint;
  }

  public void setEndpoint(@javax.annotation.Nullable String endpoint) {
    this.endpoint = endpoint;
  }


  public IoArgoprojWorkflowV1alpha1S3ArtifactRepository insecure(@javax.annotation.Nullable Boolean insecure) {
    this.insecure = insecure;
    return this;
  }

  /**
   * Insecure will connect to the service with TLS
   * @return insecure
   */
  @javax.annotation.Nullable
  public Boolean getInsecure() {
    return insecure;
  }

  public void setInsecure(@javax.annotation.Nullable Boolean insecure) {
    this.insecure = insecure;
  }


  public IoArgoprojWorkflowV1alpha1S3ArtifactRepository keyFormat(@javax.annotation.Nullable String keyFormat) {
    this.keyFormat = keyFormat;
    return this;
  }

  /**
   * KeyFormat defines the format of how to store keys and can reference workflow variables.
   * @return keyFormat
   */
  @javax.annotation.Nullable
  public String getKeyFormat() {
    return keyFormat;
  }

  public void setKeyFormat(@javax.annotation.Nullable String keyFormat) {
    this.keyFormat = keyFormat;
  }


  public IoArgoprojWorkflowV1alpha1S3ArtifactRepository keyPrefix(@javax.annotation.Nullable String keyPrefix) {
    this.keyPrefix = keyPrefix;
    return this;
  }

  /**
   * KeyPrefix is prefix used as part of the bucket key in which the controller will store artifacts. DEPRECATED. Use KeyFormat instead
   * @return keyPrefix
   */
  @javax.annotation.Nullable
  public String getKeyPrefix() {
    return keyPrefix;
  }

  public void setKeyPrefix(@javax.annotation.Nullable String keyPrefix) {
    this.keyPrefix = keyPrefix;
  }


  public IoArgoprojWorkflowV1alpha1S3ArtifactRepository region(@javax.annotation.Nullable String region) {
    this.region = region;
    return this;
  }

  /**
   * Region contains the optional bucket region
   * @return region
   */
  @javax.annotation.Nullable
  public String getRegion() {
    return region;
  }

  public void setRegion(@javax.annotation.Nullable String region) {
    this.region = region;
  }


  public IoArgoprojWorkflowV1alpha1S3ArtifactRepository roleARN(@javax.annotation.Nullable String roleARN) {
    this.roleARN = roleARN;
    return this;
  }

  /**
   * RoleARN is the Amazon Resource Name (ARN) of the role to assume.
   * @return roleARN
   */
  @javax.annotation.Nullable
  public String getRoleARN() {
    return roleARN;
  }

  public void setRoleARN(@javax.annotation.Nullable String roleARN) {
    this.roleARN = roleARN;
  }


  public IoArgoprojWorkflowV1alpha1S3ArtifactRepository secretKeySecret(@javax.annotation.Nullable IoK8sApiCoreV1SecretKeySelector secretKeySecret) {
    this.secretKeySecret = secretKeySecret;
    return this;
  }

  /**
   * Get secretKeySecret
   * @return secretKeySecret
   */
  @javax.annotation.Nullable
  public IoK8sApiCoreV1SecretKeySelector getSecretKeySecret() {
    return secretKeySecret;
  }

  public void setSecretKeySecret(@javax.annotation.Nullable IoK8sApiCoreV1SecretKeySelector secretKeySecret) {
    this.secretKeySecret = secretKeySecret;
  }


  public IoArgoprojWorkflowV1alpha1S3ArtifactRepository sessionTokenSecret(@javax.annotation.Nullable IoK8sApiCoreV1SecretKeySelector sessionTokenSecret) {
    this.sessionTokenSecret = sessionTokenSecret;
    return this;
  }

  /**
   * Get sessionTokenSecret
   * @return sessionTokenSecret
   */
  @javax.annotation.Nullable
  public IoK8sApiCoreV1SecretKeySelector getSessionTokenSecret() {
    return sessionTokenSecret;
  }

  public void setSessionTokenSecret(@javax.annotation.Nullable IoK8sApiCoreV1SecretKeySelector sessionTokenSecret) {
    this.sessionTokenSecret = sessionTokenSecret;
  }


  public IoArgoprojWorkflowV1alpha1S3ArtifactRepository useSDKCreds(@javax.annotation.Nullable Boolean useSDKCreds) {
    this.useSDKCreds = useSDKCreds;
    return this;
  }

  /**
   * UseSDKCreds tells the driver to figure out credentials based on sdk defaults.
   * @return useSDKCreds
   */
  @javax.annotation.Nullable
  public Boolean getUseSDKCreds() {
    return useSDKCreds;
  }

  public void setUseSDKCreds(@javax.annotation.Nullable Boolean useSDKCreds) {
    this.useSDKCreds = useSDKCreds;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoArgoprojWorkflowV1alpha1S3ArtifactRepository ioArgoprojWorkflowV1alpha1S3ArtifactRepository = (IoArgoprojWorkflowV1alpha1S3ArtifactRepository) o;
    return Objects.equals(this.accessKeySecret, ioArgoprojWorkflowV1alpha1S3ArtifactRepository.accessKeySecret) &&
        Objects.equals(this.bucket, ioArgoprojWorkflowV1alpha1S3ArtifactRepository.bucket) &&
        Objects.equals(this.caSecret, ioArgoprojWorkflowV1alpha1S3ArtifactRepository.caSecret) &&
        Objects.equals(this.createBucketIfNotPresent, ioArgoprojWorkflowV1alpha1S3ArtifactRepository.createBucketIfNotPresent) &&
        Objects.equals(this.encryptionOptions, ioArgoprojWorkflowV1alpha1S3ArtifactRepository.encryptionOptions) &&
        Objects.equals(this.endpoint, ioArgoprojWorkflowV1alpha1S3ArtifactRepository.endpoint) &&
        Objects.equals(this.insecure, ioArgoprojWorkflowV1alpha1S3ArtifactRepository.insecure) &&
        Objects.equals(this.keyFormat, ioArgoprojWorkflowV1alpha1S3ArtifactRepository.keyFormat) &&
        Objects.equals(this.keyPrefix, ioArgoprojWorkflowV1alpha1S3ArtifactRepository.keyPrefix) &&
        Objects.equals(this.region, ioArgoprojWorkflowV1alpha1S3ArtifactRepository.region) &&
        Objects.equals(this.roleARN, ioArgoprojWorkflowV1alpha1S3ArtifactRepository.roleARN) &&
        Objects.equals(this.secretKeySecret, ioArgoprojWorkflowV1alpha1S3ArtifactRepository.secretKeySecret) &&
        Objects.equals(this.sessionTokenSecret, ioArgoprojWorkflowV1alpha1S3ArtifactRepository.sessionTokenSecret) &&
        Objects.equals(this.useSDKCreds, ioArgoprojWorkflowV1alpha1S3ArtifactRepository.useSDKCreds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessKeySecret, bucket, caSecret, createBucketIfNotPresent, encryptionOptions, endpoint, insecure, keyFormat, keyPrefix, region, roleARN, secretKeySecret, sessionTokenSecret, useSDKCreds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoArgoprojWorkflowV1alpha1S3ArtifactRepository {\n");
    sb.append("    accessKeySecret: ").append(toIndentedString(accessKeySecret)).append("\n");
    sb.append("    bucket: ").append(toIndentedString(bucket)).append("\n");
    sb.append("    caSecret: ").append(toIndentedString(caSecret)).append("\n");
    sb.append("    createBucketIfNotPresent: ").append(toIndentedString(createBucketIfNotPresent)).append("\n");
    sb.append("    encryptionOptions: ").append(toIndentedString(encryptionOptions)).append("\n");
    sb.append("    endpoint: ").append(toIndentedString(endpoint)).append("\n");
    sb.append("    insecure: ").append(toIndentedString(insecure)).append("\n");
    sb.append("    keyFormat: ").append(toIndentedString(keyFormat)).append("\n");
    sb.append("    keyPrefix: ").append(toIndentedString(keyPrefix)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    roleARN: ").append(toIndentedString(roleARN)).append("\n");
    sb.append("    secretKeySecret: ").append(toIndentedString(secretKeySecret)).append("\n");
    sb.append("    sessionTokenSecret: ").append(toIndentedString(sessionTokenSecret)).append("\n");
    sb.append("    useSDKCreds: ").append(toIndentedString(useSDKCreds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accessKeySecret");
    openapiFields.add("bucket");
    openapiFields.add("caSecret");
    openapiFields.add("createBucketIfNotPresent");
    openapiFields.add("encryptionOptions");
    openapiFields.add("endpoint");
    openapiFields.add("insecure");
    openapiFields.add("keyFormat");
    openapiFields.add("keyPrefix");
    openapiFields.add("region");
    openapiFields.add("roleARN");
    openapiFields.add("secretKeySecret");
    openapiFields.add("sessionTokenSecret");
    openapiFields.add("useSDKCreds");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IoArgoprojWorkflowV1alpha1S3ArtifactRepository
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IoArgoprojWorkflowV1alpha1S3ArtifactRepository.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IoArgoprojWorkflowV1alpha1S3ArtifactRepository is not found in the empty JSON string", IoArgoprojWorkflowV1alpha1S3ArtifactRepository.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IoArgoprojWorkflowV1alpha1S3ArtifactRepository.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IoArgoprojWorkflowV1alpha1S3ArtifactRepository` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `accessKeySecret`
      if (jsonObj.get("accessKeySecret") != null && !jsonObj.get("accessKeySecret").isJsonNull()) {
        IoK8sApiCoreV1SecretKeySelector.validateJsonElement(jsonObj.get("accessKeySecret"));
      }
      if ((jsonObj.get("bucket") != null && !jsonObj.get("bucket").isJsonNull()) && !jsonObj.get("bucket").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bucket` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bucket").toString()));
      }
      // validate the optional field `caSecret`
      if (jsonObj.get("caSecret") != null && !jsonObj.get("caSecret").isJsonNull()) {
        IoK8sApiCoreV1SecretKeySelector.validateJsonElement(jsonObj.get("caSecret"));
      }
      // validate the optional field `createBucketIfNotPresent`
      if (jsonObj.get("createBucketIfNotPresent") != null && !jsonObj.get("createBucketIfNotPresent").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1CreateS3BucketOptions.validateJsonElement(jsonObj.get("createBucketIfNotPresent"));
      }
      // validate the optional field `encryptionOptions`
      if (jsonObj.get("encryptionOptions") != null && !jsonObj.get("encryptionOptions").isJsonNull()) {
        IoArgoprojWorkflowV1alpha1S3EncryptionOptions.validateJsonElement(jsonObj.get("encryptionOptions"));
      }
      if ((jsonObj.get("endpoint") != null && !jsonObj.get("endpoint").isJsonNull()) && !jsonObj.get("endpoint").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endpoint` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endpoint").toString()));
      }
      if ((jsonObj.get("keyFormat") != null && !jsonObj.get("keyFormat").isJsonNull()) && !jsonObj.get("keyFormat").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `keyFormat` to be a primitive type in the JSON string but got `%s`", jsonObj.get("keyFormat").toString()));
      }
      if ((jsonObj.get("keyPrefix") != null && !jsonObj.get("keyPrefix").isJsonNull()) && !jsonObj.get("keyPrefix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `keyPrefix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("keyPrefix").toString()));
      }
      if ((jsonObj.get("region") != null && !jsonObj.get("region").isJsonNull()) && !jsonObj.get("region").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `region` to be a primitive type in the JSON string but got `%s`", jsonObj.get("region").toString()));
      }
      if ((jsonObj.get("roleARN") != null && !jsonObj.get("roleARN").isJsonNull()) && !jsonObj.get("roleARN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `roleARN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("roleARN").toString()));
      }
      // validate the optional field `secretKeySecret`
      if (jsonObj.get("secretKeySecret") != null && !jsonObj.get("secretKeySecret").isJsonNull()) {
        IoK8sApiCoreV1SecretKeySelector.validateJsonElement(jsonObj.get("secretKeySecret"));
      }
      // validate the optional field `sessionTokenSecret`
      if (jsonObj.get("sessionTokenSecret") != null && !jsonObj.get("sessionTokenSecret").isJsonNull()) {
        IoK8sApiCoreV1SecretKeySelector.validateJsonElement(jsonObj.get("sessionTokenSecret"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IoArgoprojWorkflowV1alpha1S3ArtifactRepository.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IoArgoprojWorkflowV1alpha1S3ArtifactRepository' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IoArgoprojWorkflowV1alpha1S3ArtifactRepository> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IoArgoprojWorkflowV1alpha1S3ArtifactRepository.class));

       return (TypeAdapter<T>) new TypeAdapter<IoArgoprojWorkflowV1alpha1S3ArtifactRepository>() {
           @Override
           public void write(JsonWriter out, IoArgoprojWorkflowV1alpha1S3ArtifactRepository value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IoArgoprojWorkflowV1alpha1S3ArtifactRepository read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IoArgoprojWorkflowV1alpha1S3ArtifactRepository given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IoArgoprojWorkflowV1alpha1S3ArtifactRepository
   * @throws IOException if the JSON string is invalid with respect to IoArgoprojWorkflowV1alpha1S3ArtifactRepository
   */
  public static IoArgoprojWorkflowV1alpha1S3ArtifactRepository fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IoArgoprojWorkflowV1alpha1S3ArtifactRepository.class);
  }

  /**
   * Convert an instance of IoArgoprojWorkflowV1alpha1S3ArtifactRepository to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

