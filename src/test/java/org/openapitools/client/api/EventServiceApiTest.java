/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GrpcGatewayRuntimeError;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1WorkflowEventBindingList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EventServiceApi
 */
@Disabled
public class EventServiceApiTest {

    private final EventServiceApi api = new EventServiceApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void eventServiceListWorkflowEventBindingsTest() throws ApiException {
        String namespace = null;
        String listOptionsLabelSelector = null;
        String listOptionsFieldSelector = null;
        Boolean listOptionsWatch = null;
        Boolean listOptionsAllowWatchBookmarks = null;
        String listOptionsResourceVersion = null;
        String listOptionsResourceVersionMatch = null;
        String listOptionsTimeoutSeconds = null;
        String listOptionsLimit = null;
        String listOptionsContinue = null;
        Boolean listOptionsSendInitialEvents = null;
        IoArgoprojWorkflowV1alpha1WorkflowEventBindingList response = api.eventServiceListWorkflowEventBindings(namespace, listOptionsLabelSelector, listOptionsFieldSelector, listOptionsWatch, listOptionsAllowWatchBookmarks, listOptionsResourceVersion, listOptionsResourceVersionMatch, listOptionsTimeoutSeconds, listOptionsLimit, listOptionsContinue, listOptionsSendInitialEvents);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void eventServiceReceiveEventTest() throws ApiException {
        String namespace = null;
        String discriminator = null;
        Object body = null;
        Object response = api.eventServiceReceiveEvent(namespace, discriminator, body);
        // TODO: test validations
    }

}
