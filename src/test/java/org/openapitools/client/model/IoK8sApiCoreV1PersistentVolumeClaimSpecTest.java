/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.IoK8sApiCoreV1TypedLocalObjectReference;
import org.openapitools.client.model.IoK8sApiCoreV1TypedObjectReference;
import org.openapitools.client.model.IoK8sApiCoreV1VolumeResourceRequirements;
import org.openapitools.client.model.IoK8sApimachineryPkgApisMetaV1LabelSelector;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for IoK8sApiCoreV1PersistentVolumeClaimSpec
 */
public class IoK8sApiCoreV1PersistentVolumeClaimSpecTest {
    private final IoK8sApiCoreV1PersistentVolumeClaimSpec model = new IoK8sApiCoreV1PersistentVolumeClaimSpec();

    /**
     * Model tests for IoK8sApiCoreV1PersistentVolumeClaimSpec
     */
    @Test
    public void testIoK8sApiCoreV1PersistentVolumeClaimSpec() {
        // TODO: test IoK8sApiCoreV1PersistentVolumeClaimSpec
    }

    /**
     * Test the property 'accessModes'
     */
    @Test
    public void accessModesTest() {
        // TODO: test accessModes
    }

    /**
     * Test the property 'dataSource'
     */
    @Test
    public void dataSourceTest() {
        // TODO: test dataSource
    }

    /**
     * Test the property 'dataSourceRef'
     */
    @Test
    public void dataSourceRefTest() {
        // TODO: test dataSourceRef
    }

    /**
     * Test the property 'resources'
     */
    @Test
    public void resourcesTest() {
        // TODO: test resources
    }

    /**
     * Test the property 'selector'
     */
    @Test
    public void selectorTest() {
        // TODO: test selector
    }

    /**
     * Test the property 'storageClassName'
     */
    @Test
    public void storageClassNameTest() {
        // TODO: test storageClassName
    }

    /**
     * Test the property 'volumeAttributesClassName'
     */
    @Test
    public void volumeAttributesClassNameTest() {
        // TODO: test volumeAttributesClassName
    }

    /**
     * Test the property 'volumeMode'
     */
    @Test
    public void volumeModeTest() {
        // TODO: test volumeMode
    }

    /**
     * Test the property 'volumeName'
     */
    @Test
    public void volumeNameTest() {
        // TODO: test volumeName
    }

}
