/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1GitCreds;
import org.openapitools.client.model.IoArgoprojEventsV1alpha1GitRemoteConfig;
import org.openapitools.client.model.IoK8sApiCoreV1SecretKeySelector;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for IoArgoprojEventsV1alpha1GitArtifact
 */
public class IoArgoprojEventsV1alpha1GitArtifactTest {
    private final IoArgoprojEventsV1alpha1GitArtifact model = new IoArgoprojEventsV1alpha1GitArtifact();

    /**
     * Model tests for IoArgoprojEventsV1alpha1GitArtifact
     */
    @Test
    public void testIoArgoprojEventsV1alpha1GitArtifact() {
        // TODO: test IoArgoprojEventsV1alpha1GitArtifact
    }

    /**
     * Test the property 'branch'
     */
    @Test
    public void branchTest() {
        // TODO: test branch
    }

    /**
     * Test the property 'cloneDirectory'
     */
    @Test
    public void cloneDirectoryTest() {
        // TODO: test cloneDirectory
    }

    /**
     * Test the property 'creds'
     */
    @Test
    public void credsTest() {
        // TODO: test creds
    }

    /**
     * Test the property 'filePath'
     */
    @Test
    public void filePathTest() {
        // TODO: test filePath
    }

    /**
     * Test the property 'insecureIgnoreHostKey'
     */
    @Test
    public void insecureIgnoreHostKeyTest() {
        // TODO: test insecureIgnoreHostKey
    }

    /**
     * Test the property 'ref'
     */
    @Test
    public void refTest() {
        // TODO: test ref
    }

    /**
     * Test the property 'remote'
     */
    @Test
    public void remoteTest() {
        // TODO: test remote
    }

    /**
     * Test the property 'sshKeySecret'
     */
    @Test
    public void sshKeySecretTest() {
        // TODO: test sshKeySecret
    }

    /**
     * Test the property 'tag'
     */
    @Test
    public void tagTest() {
        // TODO: test tag
    }

    /**
     * Test the property 'url'
     */
    @Test
    public void urlTest() {
        // TODO: test url
    }

}
