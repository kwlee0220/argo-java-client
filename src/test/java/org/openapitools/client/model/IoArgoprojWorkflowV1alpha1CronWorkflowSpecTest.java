/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1StopStrategy;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1WorkflowSpec;
import org.openapitools.client.model.IoK8sApimachineryPkgApisMetaV1ObjectMeta;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for IoArgoprojWorkflowV1alpha1CronWorkflowSpec
 */
public class IoArgoprojWorkflowV1alpha1CronWorkflowSpecTest {
    private final IoArgoprojWorkflowV1alpha1CronWorkflowSpec model = new IoArgoprojWorkflowV1alpha1CronWorkflowSpec();

    /**
     * Model tests for IoArgoprojWorkflowV1alpha1CronWorkflowSpec
     */
    @Test
    public void testIoArgoprojWorkflowV1alpha1CronWorkflowSpec() {
        // TODO: test IoArgoprojWorkflowV1alpha1CronWorkflowSpec
    }

    /**
     * Test the property 'concurrencyPolicy'
     */
    @Test
    public void concurrencyPolicyTest() {
        // TODO: test concurrencyPolicy
    }

    /**
     * Test the property 'failedJobsHistoryLimit'
     */
    @Test
    public void failedJobsHistoryLimitTest() {
        // TODO: test failedJobsHistoryLimit
    }

    /**
     * Test the property 'schedule'
     */
    @Test
    public void scheduleTest() {
        // TODO: test schedule
    }

    /**
     * Test the property 'schedules'
     */
    @Test
    public void schedulesTest() {
        // TODO: test schedules
    }

    /**
     * Test the property 'startingDeadlineSeconds'
     */
    @Test
    public void startingDeadlineSecondsTest() {
        // TODO: test startingDeadlineSeconds
    }

    /**
     * Test the property 'stopStrategy'
     */
    @Test
    public void stopStrategyTest() {
        // TODO: test stopStrategy
    }

    /**
     * Test the property 'successfulJobsHistoryLimit'
     */
    @Test
    public void successfulJobsHistoryLimitTest() {
        // TODO: test successfulJobsHistoryLimit
    }

    /**
     * Test the property 'suspend'
     */
    @Test
    public void suspendTest() {
        // TODO: test suspend
    }

    /**
     * Test the property 'timezone'
     */
    @Test
    public void timezoneTest() {
        // TODO: test timezone
    }

    /**
     * Test the property 'when'
     */
    @Test
    public void whenTest() {
        // TODO: test when
    }

    /**
     * Test the property 'workflowMetadata'
     */
    @Test
    public void workflowMetadataTest() {
        // TODO: test workflowMetadata
    }

    /**
     * Test the property 'workflowSpec'
     */
    @Test
    public void workflowSpecTest() {
        // TODO: test workflowSpec
    }

}
